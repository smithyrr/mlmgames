Describe the following Arma 3 code: _soldiersetBehaviour"CARELESS";_b=behaviour_soldier;// returns "CARELESS"
Describe the following Arma 3 code: _featureUsed=checkAIFeature"AwareFormationSoft";
Describe the following Arma 3 code: unit1setCombatBehaviour"CARELESS";combatBehaviourunit1;// "CARELESS"
Describe the following Arma 3 code: if(combatMode_grp1=="BLUE")then{_grp1setCombatMode"GREEN"};
Describe the following Arma 3 code: MyUnitdisableAI"AUTOTARGET";
Describe the following Arma 3 code: _soldierOneenableAI"Move";
Describe the following Arma 3 code: "AwareFormationSoft"enableAIFeaturetrue;
Describe the following Arma 3 code: _group1setBehaviour"SAFE";
Describe the following Arma 3 code: _group1setBehaviourStrong"SAFE";
Describe the following Arma 3 code: unit1setCombatBehaviour"SAFE";
Describe the following Arma 3 code: _group1setCombatMode"BLUE";
Describe the following Arma 3 code: _herosetSkill1;
Describe the following Arma 3 code: _unitsetUnitAbility1;
Describe the following Arma 3 code: _unitsetUnitCombatMode"YELLOW";
Describe the following Arma 3 code: _skill=skillunit1;
Describe the following Arma 3 code: _unitTrueCourage=unit1skillFinal"courage";
Describe the following Arma 3 code: unitCombatMode_unit;
Describe the following Arma 3 code: useAISteeringComponenttrue;
Describe the following Arma 3 code: _buildinganimate["maindoor",1];
Describe the following Arma 3 code: ucavanimateBay[1,1];// can be checked withucavanimationPhase"weapons_bay_l_1"// orucavanimationPhase"weapons_bay_l_2"
Describe the following Arma 3 code: TaruanimateDoor["Door_1_source",1];
Describe the following Arma 3 code: vehicleplayeranimatePylon[1,0.5];
Describe the following Arma 3 code: houseanimateSource["Door_1_source",1,true];
Describe the following Arma 3 code: _names=animationNamesstatic_AT;
Describe the following Arma 3 code: _buildinganimate["maindoor",1];sleep1;_p=_buildinganimationPhase"maindoor";// Returns 1, if the animation speed is two seconds
Describe the following Arma 3 code: private_phase=houseanimationSourcePhase"Door_1_source";
Describe the following Arma 3 code: _state=animationStateplayer;
Describe the following Arma 3 code: _phase=helidoorPhase"door_L";
Describe the following Arma 3 code: _eddieelevatePeriscope[[0],0.75,0.1];
Describe the following Arma 3 code: private_state=gestureStateplayer;
Describe the following Arma 3 code: private_aimPrecision=getAnimAimPrecisionplayer;
Describe the following Arma 3 code: if(getAnimSpeedCoefplayer>1)then{hint"Speedy Gonzales!"};
Describe the following Arma 3 code: moveTimeplayer;
Describe the following Arma 3 code: _eddieperiscopeElevation[0]params["_elevation","_isLocked"];
Describe the following Arma 3 code: soldierOneplayAction"SitDown";
Describe the following Arma 3 code: soldierOneplayActionNow"SitDown";
Describe the following Arma 3 code: soldierOneplayGesture"Wave";
Describe the following Arma 3 code: soldierOneplayMove"Stand";
Describe the following Arma 3 code: playerplayMoveNow"AmovPercMevaSlowWrflDf";
Describe the following Arma 3 code: playersetAnimSpeedCoef0.75;
Describe the following Arma 3 code: _soldier1setFaceAnimation0.5;
Describe the following Arma 3 code: soldierOneswitchAction"SitDown";
Describe the following Arma 3 code: soldierOneswitchGesture"Wave";
Describe the following Arma 3 code: _unitswitchMove"myMove";_unitplayMoveNow"myMove";
Describe the following Arma 3 code: playeruseAudioTimeForMovestrue;
Describe the following Arma 3 code: 5+3// returns  8-5+-3// returns -8
Describe the following Arma 3 code: _result=10-7;// result is 3
Describe the following Arma 3 code: array3=array1+array2;
Describe the following Arma 3 code: private_arr=[1,2,3,4,5,6,7,8,9,0]apply{[1,0]select(_x%2==0)};// [1,0,1,0,1,0,1,0,1,0]
Describe the following Arma 3 code: _arr1=[1,2,3,4,5,2,3,4];_arr2=[4,5,6,1,2,3,5,6];hintstr(_arr1arrayIntersect_arr2);// [4,5,1,2,3]
Describe the following Arma 3 code: count[0,0,1,2];// returns 4countunitsgroupplayer;// returns number of units in player group
Describe the following Arma 3 code: createHashMapFromArray[["a",1],["b",2],["c",3]];
Describe the following Arma 3 code: _arr=[1,2,3];_rem=_arrdeleteAt1;hintstr[_rem,_arr];// [2, [1, 3]]
Describe the following Arma 3 code: _arr=[1,2,3,4,5,6];_arrdeleteRange[1,4];hintstr_arr;// [1,6]
Describe the following Arma 3 code: ["Apples","Oranges","Pears"]find"Oranges";// returns 1
Describe the following Arma 3 code: [0,1,2,3,4]findAny[2,4,6,8];// returns 2
Describe the following Arma 3 code: [unit1,unit2,unit3]findIf{notalive_x};// return index of the first dead unit)
Describe the following Arma 3 code: flatten[1,[2],[[3]],[[[4]]]];// returns [1, 2, 3, 4]
Describe the following Arma 3 code: // SQF{_xsetDamage1}forEachunitsplayer;
Describe the following Arma 3 code: 1in[0,1,2];// true
Describe the following Arma 3 code: "Test"insert[0,"Radio"];// returns "RadioTest""Test"insert[2,"Radio"];// returns "TeRadiost""Test"insert[-1,"Radio"];// returns "TestRadio"
Describe the following Arma 3 code: _ok=isArray(configFile>>"CfgVehicles")// returns false
Describe the following Arma 3 code: _arr=[1,2,3,4,5,6,7,8,9,0];_arrisEqualTypeAll"";// false_arrisEqualTypeAll0;// true
Describe the following Arma 3 code: _arr=[1,true,"three"];_arrisEqualTypeArray[0,objNull,""];// false_arrisEqualTypeArray[0,false,""];// true
Describe the following Arma 3 code: [1,2,3]call{private_one=param[0,1];private_two=param[1,2];private_three=param[2,3];// ...};
Describe the following Arma 3 code: [1,2,3]call{private["_one","_two","_three"];_one=_thisselect0;_two=_thisselect1;_three=_thisselect2;// ...};// Same as above, only using params[1,2,3]call{params["_one","_two","_three"];// ...};
Describe the following Arma 3 code: private_arr=parseSimpleArray"[1,2,3]";
Describe the following Arma 3 code: _arr=[1,2,3];_arrpushBack4;hintstr_arr;//[1,2,3,4]
Describe the following Arma 3 code: _arr=[1,2,3];_index=_arrpushBackUnique3;hintstr[_index,_arr];// [-1,[1,2,3]]
Describe the following Arma 3 code: _arrayNum=[0,1,2,3,4];_arrayNumresize2;// _arrayNum is now [0, 1]_arrayNumresize5;// _arrayNum is now [0, 1, nil, nil, nil]
Describe the following Arma 3 code: _arr=[1,2,3];reverse_arr;hintstr_arr;// [3,2,1]
Describe the following Arma 3 code: ["a","b","c","d"]select2;// result is "c"positionplayerselect2;// result is Z coordinate of player position
Describe the following Arma 3 code: _max=selectMax[1,2,3,4,5];//5
Describe the following Arma 3 code: _min=selectMin[1,2,3,4,5];//1
Describe the following Arma 3 code: _randomElement=selectRandom[1,2,3,4,5];
Describe the following Arma 3 code: private_randomWeightedElement=selectRandomWeighted[1,0.1,2,0.2,3,1.3,4,2.4,5,7.5];
Describe the following Arma 3 code: _arrayOneset[0,"Hello"];
Describe the following Arma 3 code: _arr=[5.21725,1.30859,4,5.03028,1];_arrsorttrue;hintstr_arr;//[1,1.30859,4,5.03028,5.21725]
Describe the following Arma 3 code: hintformat["%1",toArray"AaŒ"];// Returns "[65,97,338]"
Describe the following Arma 3 code: hinttoString[65,97,338];// returns "AaŒ"
Describe the following Arma 3 code: MortarcommandArtilleryFire[[3000,120,1000],"8Rnd_82mm_Mo_shells",3];
Describe the following Arma 3 code: MortardoArtilleryFire[[3000,120,1000],"8Rnd_82mm_Mo_shells",3];
Describe the following Arma 3 code: enableEngineArtilleryfalse;
Describe the following Arma 3 code: if("8Rnd_82mm_Mo_Flare_white"ingetArtilleryAmmo[_mortar1,_mortar2,_mortar3,_mortar4])then{hint"Sir, we have white flares, Sir!";};
Describe the following Arma 3 code: hintstrgetArtilleryComputerSettings;//["Semi (medium)","HE Mortar Shells",0]
Describe the following Arma 3 code: _mortargetArtilleryETA[getPos_target,getArtilleryAmmo[_mortar]select0];
Describe the following Arma 3 code: _isInRange=getMarkerPos"myTarget"inRangeOfArtillery[[myArty],"32Rnd_155mm_Mo_shells"];
Describe the following Arma 3 code: if(shownArtilleryComputer)then{hint"Artillery Computer shown on screen";};
Describe the following Arma 3 code: playerallDiaryRecords"Diary";
Describe the following Arma 3 code: allDiarySubjectsplayer;
Describe the following Arma 3 code: _name=briefingName;
Describe the following Arma 3 code: cancelSimpleTaskDestinationmyTask;
Describe the following Arma 3 code: _diaryRec1=playercreateDiaryRecord["Diary",["Record 1","We can not refer to the next record because it does not exist yet."]];_diaryRec2=playercreateDiaryRecord["Diary",["Record 2","Go to "+createDiaryLink["Diary",_diaryRec1,"record 1"]]];_diaryRec3=playercreateDiaryRecord["Diary",["Record 3","Go to "+createDiaryLink["Diary",_diaryRec2,"record 2"]]];
Describe the following Arma 3 code: private_recordNull=objNullcreateDiaryRecord[];private_createdRecord=playercreateDiaryRecord["Diary",["Title","Description"]];if(_createdRecordisEqualTo_recordNull)then{hint"Failed";};
Describe the following Arma 3 code: _index=playercreateDiarySubject["myPage","My page"];
Describe the following Arma 3 code: _currentTask=playercreateSimpleTask["NewTask"];
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: _currTask=currentTaskplayer;
Describe the following Arma 3 code: currentTasksteamMember_agent;
Describe the following Arma 3 code: _deathText=debriefingText"endDeath";
Describe the following Arma 3 code: isNulldiaryRecordNull;// true
Describe the following Arma 3 code: _exists=playerdiarySubjectExists"subjectName";
Describe the following Arma 3 code: disableDebriefingStats;
Describe the following Arma 3 code: enableDebriefingStats[0.1,0.1,0.8,0.8];
Describe the following Arma 3 code: private_debriefingTextDeath=getDebriefingText"endDeath";
Describe the following Arma 3 code: "1"objStatus"DONE";
Describe the following Arma 3 code: onBriefingGear"GearVoiceOver";
Describe the following Arma 3 code: onBriefingGroup"GroupVoiceOver";
Describe the following Arma 3 code: onBriefingNotes"NotesVoiceOver";
Describe the following Arma 3 code: onBriefingPlan"PlanVoiceOver";
Describe the following Arma 3 code: onBriefingTeamSwitch"TeamSwitchVoiceOver";
Describe the following Arma 3 code: _prioTsk01=prioritytask01;
Describe the following Arma 3 code: processDiaryLinkcreateDiaryLink["Tasks",(simpleTasksplayer)select0,""];// Select a task in the Task menu
Describe the following Arma 3 code: tasklist=registeredTasksteamMember_agent;
Describe the following Arma 3 code: teamMember_agentregisterTask"MyTask";
Describe the following Arma 3 code: private_diaryRecord=playercreateDiaryRecord["diary",["Subject","Text"]];// ...playerremoveDiaryRecord["Diary",_diaryRecord];
Describe the following Arma 3 code: playerremoveDiarySubject"myPage";
Describe the following Arma 3 code: playerremoveSimpleTask_tskKillSpongebob;
Describe the following Arma 3 code: playerselectDiarySubject"Diary:Record0";// selects the first record in the diary subject (from bottom to top)playerselectDiarySubject"Diary:Record1";// selects the second record
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: playersetCurrentTasktskKillSpongebob;
Describe the following Arma 3 code: _currentObjective=(taskDescription(currentTaskplayer))select2;"endDeath"setDebriefingText["You Lose","All of your men were killed while assaulting the "+_currentObjective];
Describe the following Arma 3 code: playersetDiaryRecordText[["diary",_diaryRec],["Kill all enemies.","The enemies are the bad guys. Kill them because you are the good guy."]];
Describe the following Arma 3 code: playersetDiarySubjectPicture["Diary","\A3\ui_f\data\map\markers\nato\o_mech_inf.paa"];
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: _tasksetSimpleTaskCustomData["\A3\Ui_f\data\IGUI\Cfg\simpleTasks\letters\h_ca.paa","This is the tooltip","This is the description"];
Describe the following Arma 3 code: myTasksetSimpleTaskDescription["Today you have to kill Spongebob","Kill Spongebob","There he is!"];
Describe the following Arma 3 code: _tskGoHeresetSimpleTaskDestination(getMarkerPos"obj1");
Describe the following Arma 3 code: tasksetSimpleTaskTarget[targetVehicle,true];
Describe the following Arma 3 code: (currentTaskplayer)setSimpleTaskType"attack";
Describe the following Arma 3 code: playersetTaskMarkerOffset[0,0.5,1];
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: _tskKillSpongebobsetTaskState"Succeeded";
Describe the following Arma 3 code: _tasks=simpleTasksplayer;
Describe the following Arma 3 code: _isAlwaysVisible=taskAlwaysVisible(currentTaskplayer);
Describe the following Arma 3 code: _children=taskChildren"someTask";
Describe the following Arma 3 code: _task=createSimpleTask["task_1"];_done=taskCompleted_task;
Describe the following Arma 3 code: _data=taskCustomData"someTask";
Describe the following Arma 3 code: _taskDescArray=taskDescription_task;
Describe the following Arma 3 code: if(!isNullcurrentTaskplayer)then{taskDestinationcurrentTask[[player]]};//return Position (Array)
Describe the following Arma 3 code: taskHint["Task failed.\nBad job!",[1,0,0,1],"taskFailed"];
Describe the following Arma 3 code: _offset=taskMarkerOffsetplayer;
Describe the following Arma 3 code: private_taskName=taskName_mytask;
Describe the following Arma 3 code: taskNull==taskNull;// falseisNulltaskNull;// truetaskNullisEqualTotaskNull;// true
Describe the following Arma 3 code: _parent=taskParent"someTask";
Describe the following Arma 3 code: taskResult(playercreateSimpleTask["NewTask"]);
Describe the following Arma 3 code: tskSomeTask=playercreateSimpleTask["NewTask"];hintformat["Taskstate: %1",taskStatetskSomeTask];
Describe the following Arma 3 code: _type=taskType(currentTaskplayer);
Describe the following Arma 3 code: _locationType=typemyLocation;
Describe the following Arma 3 code: teamMember_agentunregisterTask(registeredTasksselect0);
Describe the following Arma 3 code: "publicThis"addPublicVariableEventHandler{hintformat["%1 has been updated to: %2",_thisselect0,_thisselect1]};
Describe the following Arma 3 code: {_xaddMagazineGlobal"Laserbatteries";_xaddWeaponGlobal"Laserdesignator";}forEachallUnits;
Describe the following Arma 3 code: _allSites=allSites;
Describe the following Arma 3 code: _cameracamPrepareBank-0.1;
Describe the following Arma 3 code: _cameracamPrepareDir150;
Describe the following Arma 3 code: _cameracamPrepareDive-0.1;
Describe the following Arma 3 code: _cameracamPrepareFovRange[0.1,0.5];
Describe the following Arma 3 code: _cameracamSetBank-0.1;
Describe the following Arma 3 code: _cameracamSetDive-0.1;
Describe the following Arma 3 code: _camcamSetFovRange[0.1,0.7];
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: _soundSource=createSoundSource["LittleDog",positionplayer,[],0];
Describe the following Arma 3 code: _target=createTarget["targetType",[0,0,0],1,1];
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: debugLogplayer;
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: deleteTargettarget1;
Describe the following Arma 3 code: disableDebriefingStats;
Describe the following Arma 3 code: echo"Text in logfile";
Describe the following Arma 3 code: ?_side==enemy:hint"ouch"
Describe the following Arma 3 code: unit1findCover[ASLToATLaimPosunit2,30];
Describe the following Arma 3 code: _objects=getPersonUsedDLCsplayer;
Describe the following Arma 3 code: if(_displayAnError)then{halt};
Describe the following Arma 3 code: _isHidden=isHideBehindScripted_vehicle;
Describe the following Arma 3 code: vehicleplayermagazineTurretAmmo["cls",[0]];
Describe the following Arma 3 code: findDisplay313displayCtrl120menuShortcutText[1,8];// returns "#"
Describe the following Arma 3 code: _moved=_targetmoveTarget[positionplayer,1,1];
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: _unitremoveClothing["shirt"];
Describe the following Arma 3 code: helicopter1say3D"FortunateSon";
Describe the following Arma 3 code: _soldier1setFaceAnimation0.5;
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: myMRAPsetMagazineTurretAmmo["200Rnd_127x99_mag_Tracer_Red",30,[0]]];
Describe the following Arma 3 code: setPlayable_aPerson;
Describe the following Arma 3 code: private_aslPos=getPosASLplayer;_aslPosset[1,_aslPosselect1+10];playersetPosASL2_aslPos;
Describe the following Arma 3 code: if(playerin_myHelicopter)then{setSystemOfUnits2;};
Describe the following Arma 3 code: playersetVehicleId1;
Describe the following Arma 3 code: showWarranttrue;
Describe the following Arma 3 code: simulSetHumidity1;
Describe the following Arma 3 code: textLogplayer;
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: _isUnlocked=unlockAchievement"Hunter";
Describe the following Arma 3 code: addCamShake[10,2,25];// Shakes the camera for 1 second
Describe the following Arma 3 code: private_apertureParams=apertureParams;
Describe the following Arma 3 code: _cameracamCommand"manual on";
Describe the following Arma 3 code: ; create a camera object_cam="camera"camCreate[5600,4800,10]_camcamSetTargetplayer_camcameraEffect["internal","BACK"]_camcamCommit0; smoothly move the camera to its new position in 6 seconds_camcamSetPos[5680,4720,20]_camcamCommit6@camCommitted_cam; proceed
Describe the following Arma 3 code: // Create a camera object_cam="camera"camCreate[5600,4800,10];_camcamPrepareTargetplayer;_camcameraEffect["internal","BACK"];_camcamCommitPrepared0;// Smoothly move the camera to its new position in 6 seconds_camcamPreparePos[5680,4720,20];_camcamCommitPrepared6;waitUntil{camCommitted_cam};// Proceed
Describe the following Arma 3 code: ; create a camera object_cam="camera"camCreate[5600,4800,10]_camcamSetTargetplayer_camcameraEffect["internal","BACK"]_camcamCommit0; smoothly move the camera to its new position in 6 seconds_camcamSetPos[5680,4720,20]_camcamCommit6@camCommitted_cam; proceed
Describe the following Arma 3 code: _cameracamConstuctionSetParams[getPosplayer,50,20];
Describe the following Arma 3 code: _cam="camera"camCreate(ASLToAGLeyePosplayer);
Describe the following Arma 3 code: camDestroy_cam;
Describe the following Arma 3 code: camcameraEffect["terminate","back","rtt1"];// would terminate "rtt1" r2t sourcecamcameraEffect["terminate","back"];// would terminate all r2t sources
Describe the following Arma 3 code: cameraEffectEnableHUDtrue;
Describe the following Arma 3 code: camInterest=cameraInterestmyUnit;
Describe the following Arma 3 code: _object=cameraOn;
Describe the following Arma 3 code: if(cameraOn==_vehicle&&cameraView=="External")then{_vehicleswitchCamera"Internal";};
Describe the following Arma 3 code: _cameracamPreload5;
Describe the following Arma 3 code: if(camPreloaded_camera)exitWith{hint"loaded"};
Describe the following Arma 3 code: _cameracamPrepareBank-0.1;
Describe the following Arma 3 code: _cameracamPrepareDir150;
Describe the following Arma 3 code: _cameracamPrepareDive-0.1;
Describe the following Arma 3 code: _cameracamPrepareFocus[50,1];
Describe the following Arma 3 code: _cameracamPrepareFov0.1;
Describe the following Arma 3 code: _cameracamPrepareFovRange[0.1,0.5];
Describe the following Arma 3 code: _cameracamPreparePosgetPosplayer;
Describe the following Arma 3 code: _cameracamPrepareRelPos[10,5,-2];
Describe the following Arma 3 code: _cameracamPrepareTargetgetPosplayer;
Describe the following Arma 3 code: _cameracamSetBank-0.1;
Describe the following Arma 3 code: private_pos1=playermodelToWorld[0,5,5];private_pos2=playermodelToWorld[0,50,50];private_cam="camera"camCreate_pos1;_camcameraEffect["INTERNAL","BACK"];_camcamSetPos_pos2;_camcamSetDir(_pos2vectorFromTo_pos1);_camcamCommit5;waitUntil{camCommitted_cam};_camcamSetPos_pos1;_camcamCommit5;
Describe the following Arma 3 code: _cameracamSetDive-0.1;
Describe the following Arma 3 code: _cameracamSetFocus[50,1];
Describe the following Arma 3 code: _camcamSetFov0.75;
Describe the following Arma 3 code: _camcamSetFovRange[0.1,0.7];
Describe the following Arma 3 code: _camcamSetPos[2300,1000,130];_camcamCommit10;
Describe the following Arma 3 code: _camcamSetTarget_car;_camcamSetRelPos[0,10,8];
Describe the following Arma 3 code: _cameracamSetTargetplayer;
Describe the following Arma 3 code: _someObject=camTarget_camera;
Describe the following Arma 3 code: camUseNVGtrue;
Describe the following Arma 3 code: uavdirectionStabilizationEnabled[0];
Describe the following Arma 3 code: enableCamShakefalse;
Describe the following Arma 3 code: uavenableDirectionStabilization[false,[0]];// Disable direction stabilization for the first turret
Describe the following Arma 3 code: enableEndDialog;
Describe the following Arma 3 code: uavlockCameraTo[vehicle,[0,0]];
Describe the following Arma 3 code: vehicleplayerlockedCameraTo[];
Describe the following Arma 3 code: _worldPos=positionCameraToWorld_cameraPos;
Describe the following Arma 3 code: "colorCorrections"ppEffectAdjust[1,1,-0.01,[0,0,0,0],[1.5,1,1.2,0.6],[0.199,0.587,0.114,0]];
Describe the following Arma 3 code: "colorCorrection"ppEffectCommit3;
Describe the following Arma 3 code: ppEffectCommitted"colorCorrection";
Describe the following Arma 3 code: _ppGrain=ppEffectCreate["filmGrain",2005];
Describe the following Arma 3 code: ppEffectDestroy_hndl;
Describe the following Arma 3 code: "colorCorrections"ppEffectEnabletrue;
Describe the following Arma 3 code: _enabled=ppEffectEnabled_hndl;
Describe the following Arma 3 code: _ppGrainppEffectForceInNVGtrue;
Describe the following Arma 3 code: waitUntil{preloadCameramarkerPos"cam_location_2"};
Describe the following Arma 3 code: resetCamShake;
Describe the following Arma 3 code: setAperture0.3;
Describe the following Arma 3 code: setApertureNew[0.3,0.2,0.1,1];
Describe the following Arma 3 code: myTriggersetCameraEffect["ZoomIn","FRONT"];
Describe the following Arma 3 code: _soldiersetCameraInterest50;
Describe the following Arma 3 code: setCamShakeDefParams[1,2,3,4,5,.5,.5];
Describe the following Arma 3 code: setCamShakeParams[0.1,1,1,1,true];
Describe the following Arma 3 code: truesetCamUseTI1;
Describe the following Arma 3 code: setDefaultCamera[[5000,5000,200],[1,1,-1]];
Describe the following Arma 3 code: setHorizonParallaxCoef1;
Describe the following Arma 3 code: "rendersurface"setPiPEffect[0];
Describe the following Arma 3 code: showCinemaBorderfalse;
Describe the following Arma 3 code: playerswitchCamera"Gunner";
Describe the following Arma 3 code: _result=15/3;// result is 5
Describe the following Arma 3 code: _config=campaignConfigFile;
Describe the following Arma 3 code: _configs="true"configClasses(configFile>>"CfgVehicles");
Describe the following Arma 3 code: _isMyClassActive=isClass(configFile>>"CfgPatches">>"MyClass");
Describe the following Arma 3 code: _hierarchy=configHierarchy(configFile>>"CfgVehicles">>"Car");// [bin\config.bin,bin\config.bin/CfgVehicles,bin\config.bin/CfgVehicles/Car]
Describe the following Arma 3 code: _name=configName(configFile>>"CfgVehicles");// result is "CfgVehicles"
Describe the following Arma 3 code: configNull==configNull;// returns trueisNullconfigNull;// returns trueconfigNullisEqualToconfigNull;// returns trueconfigNull==configFile>>"ANonExistentEntry";// returns true
Describe the following Arma 3 code: configOfplayer;// returns bin\config.bin/CfgVehicles/B_W_Soldier_TL_F
Describe the following Arma 3 code: _configs=configProperties[configFile>>"CfgVehicles">>"O_Truck_02_box_F"];
Describe the following Arma 3 code: _addons=configSourceAddonList(configFile>>"CfgVehicles">>"Man");// returns ["A3_Data_F", "A3_Characters_F", "A3_Data_F_Curator", "A3_Air_F_Heli"]
Describe the following Arma 3 code: configFile>>"CfgVehicles";
Describe the following Arma 3 code: count[0,0,1,2];// returns 4countunitsgroupplayer;// returns number of units in player group
Describe the following Arma 3 code: diag_exportConfig["O:/config.cpp",configFile];
Describe the following Arma 3 code: diag_mergeConfigFile["O:\Arma3\A3\Stuff_F\config.cpp"]
Describe the following Arma 3 code: _array=getArray(configFile>>"CfgVehicles">>"Thing">>"threat");
Describe the following Arma 3 code: _header=getMissionConfig"Header";
Describe the following Arma 3 code: _respawnDelay=getMissionConfigValue["respawnDelay",0];
Describe the following Arma 3 code: _value=getNumber(configFile>>"CfgVehicles">>"Thing">>"maxSpeed");
Describe the following Arma 3 code: _text=getText(configFile>>"CfgVehicles">>"Thing">>"icon");// "Get in %1 as Driver"
Describe the following Arma 3 code: private_text=getTextRaw(configFile>>"CfgVehicles">>"Thing">>"displayName");// "$STR_ACTION_GETIN_DRIVER"_key=_textselect[1];// "STR_ACTION_GETIN_DRIVER"_localized=localize_key;// "Get in %1 as Driver"_localized==getText(configFile>>"CfgVehicles">>"Thing">>"displayName");// true
Describe the following Arma 3 code: _base=inheritsFrom(configFile>>"CfgVehicles">>"Car");
Describe the following Arma 3 code: _ok=isArray(configFile>>"CfgVehicles")// returns false
Describe the following Arma 3 code: _ok=isClass(configFile>>"CfgVehicles");
Describe the following Arma 3 code: _ok=isNumber(configFile>>"CfgVehicles");
Describe the following Arma 3 code: _isText=isText(configFile>>"CfgVehicles")// false
Describe the following Arma 3 code: private_cfg=loadConfig"a3\data_f\default_super.rvmat";// note: very slow! ~0.1200 ms on tested systemgetText(_cfg>>"Stage2">>"uvSource");
Describe the following Arma 3 code: for"_i"from0to(countparamsArray-1)do{missionNamespacesetVariable[configName((missionConfigFile/"Params")select_i),paramsArrayselect_i];};
Describe the following Arma 3 code: ["a","b","c","d"]select2;// result is "c"positionplayerselect2;// result is Z coordinate of player position
Describe the following Arma 3 code: thisaddBackpack"TK_RPG_Backpack_EP1";
Describe the following Arma 3 code: thisaddBackpackCargo["TK_RPG_Backpack_EP1",2];
Describe the following Arma 3 code: thisaddBackpackCargoGlobal["TK_RPG_Backpack_EP1",2];
Describe the following Arma 3 code: playeraddItemToBackpack"arifle_MXM_Hamr_pointer_F";
Describe the following Arma 3 code: _truckaddMagazineCargo["M16",5];
Describe the following Arma 3 code: _truckaddMagazineCargoGlobal["M16",5];
Describe the following Arma 3 code: _truckaddWeaponCargo["M16",5];
Describe the following Arma 3 code: _truckaddWeaponCargoGlobal["M16",5];
Describe the following Arma 3 code: _classname=backpackplayer;
Describe the following Arma 3 code: hintstrbackpackCargovehicleplayer;
Describe the following Arma 3 code: hintstrbackpackContainerplayer;// 1a5f7900# 163944: backpack_fast.p3d
Describe the following Arma 3 code: backpackItemsplayer;// returns e.g ["hgun_P07_F", "Titan_AT"]
Describe the following Arma 3 code: backpackMagazinesplayer;// returns e.g/*
[
	"Titan AT Missile(1/1)[id/cr:16/0](2x)"
]
*/
Describe the following Arma 3 code: (backpackContainerplayer)backpackSpaceFor"m16";// [weapons, magazines]
Describe the following Arma 3 code: if(playercanAddItemToBackpack"HandGrenade")then{playeraddItemToBackpack_item}else{hint"no room!"};
Describe the following Arma 3 code: clearAllItemsFromBackpackplayer;
Describe the following Arma 3 code: clearBackpackCargomyBox;
Describe the following Arma 3 code: clearBackpackCargoGlobaljeepOne;
Describe the following Arma 3 code: clearItemCargomyBox;
Describe the following Arma 3 code: clearItemCargoGlobal_ammoBox;
Describe the following Arma 3 code: clearMagazineCargo_truck;
Describe the following Arma 3 code: clearMagazineCargoGlobaljeepOne;
Describe the following Arma 3 code: clearWeaponCargo_truck;
Describe the following Arma 3 code: clearWeaponCargoGlobaljeepOne;
Describe the following Arma 3 code: everyBackpackcursorTarget;
Describe the following Arma 3 code: myVariable=firstBackpackmyBox;
Describe the following Arma 3 code: _unitforceAddUniform"U_B_CombatUniform_mcam";
Describe the following Arma 3 code: _content=getBackpackCargocarName;
Describe the following Arma 3 code: _content=getMagazineCargocarName;
Describe the following Arma 3 code: _content=getWeaponCargocarName;
Describe the following Arma 3 code: _loadBackpack=massOfAllItemsInBackpack/getContainerMaxLoadbackpackplayer;
Describe the following Arma 3 code: hintstrmagazineCargouniformContainercursorTarget;
Describe the following Arma 3 code: removeAllItemsWithMagazinesplayer;
Describe the following Arma 3 code: removeBackpackthis;
Describe the following Arma 3 code: playerremoveItemFromBackpack"itemGPS";
Describe the following Arma 3 code: removeUniformplayer;
Describe the following Arma 3 code: removeVestplayer;
Describe the following Arma 3 code: _uniform=uniform_unit;
Describe the following Arma 3 code: hintstruniformContainerplayer;//2df7dd00# 163941: dummyweapon.p3d
Describe the following Arma 3 code: uniformMagazinesplayer;// returns e.g/*
[
	"6.5mm 30Rnd STANAG Mag(30/30)[id/cr:1/0](3x)"
]
*/
Describe the following Arma 3 code: private_myBackpack=unitBackpackplayer;
Describe the following Arma 3 code: _myVest=vestplayer;
Describe the following Arma 3 code: hintstrvestContainerplayer;// 2df7d600# 163942: dummyweapon.p3d
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: hintstrweaponCargobackpackContainerplayer;
Describe the following Arma 3 code: weaponsItemsCargovehicleplayer;
Describe the following Arma 3 code: _hasBeenAdded=_unitkbAddDatabase"chat.txt";
Describe the following Arma 3 code: _hasBeenAdded=_unitkbAddDatabaseTargets"chat.txt";
Describe the following Arma 3 code: playerkbAddTopic["myTest","myTest.bikb","myTest.fsm",compilepreprocessFileLineNumbers"myTest.sqf"];
Describe the following Arma 3 code: _obiHasTopic=playerkbHasTopic"helloThereGeneralK";
Describe the following Arma 3 code: // will trigger AS IF unit1 said the sentence (via kbTell)// unit2's FSM will react accordingly.unit1kbReact[unit2,"topicName","speech1"];
Describe the following Arma 3 code: _unit1kbRemoveTopic"howsTheWeather";
Describe the following Arma 3 code: playerkbTell[BIS_HQ,"myTopic","playerSentence1"];
Describe the following Arma 3 code: playerkbWasSaid[otherUnit,"myTopic","mySentenceID",3];
Describe the following Arma 3 code: curatorObjaddCuratorAddons["A3_Armor_F_AMV","A3_Armor_F_Panther"];
Describe the following Arma 3 code: myCuratoraddCuratorCameraArea[3,positionmySoldier,300];
Describe the following Arma 3 code: MyCuratorModuleaddCuratorEditableObjects[[MyCar],true];
Describe the following Arma 3 code: myCuratoraddCuratorEditingArea[4,positionplayer,1000];
Describe the following Arma 3 code: curatorModuleaddCuratorPoints0.5;
Describe the following Arma 3 code: addCuratorSelected[unit1,group1,[group1,waypointIndex],markerName1];
Describe the following Arma 3 code: _allCuratorLogics=allCurators;
Describe the following Arma 3 code: curatorModuleallowCuratorLogicIgnoreAreastrue;
Describe the following Arma 3 code: playerassignCuratormyCurator;
Describe the following Arma 3 code: private_addons=curatorAddonsmyCurator;
Describe the following Arma 3 code: _camCurator=curatorCamera;
Describe the following Arma 3 code: _camArea=curatorCameraAreamyCurator;// [[8052,[4027.36,4024.89,0],250]]
Describe the following Arma 3 code: private_height=curatorCameraAreaCeilingBIS_curatorUnit;
Describe the following Arma 3 code: curatorModulecuratorCoef"Place";
Describe the following Arma 3 code: _objects=curatorEditableObjectsmyCurator;
Describe the following Arma 3 code: _editingAreas=curatorEditingAreamyCurator;
Describe the following Arma 3 code: _isBlacklist=curatorEditingAreaType_curator;
Describe the following Arma 3 code: _mouseOver=curatorMouseOver;// Possible return value: ["OBJECT", 3594ab00# 164218: apc_wheeled_01_cannon_f.p3d]
Describe the following Arma 3 code: _points=curatorPointsmyCurator;
Describe the following Arma 3 code: curatorRegisteredObjects_curatorModule;
Describe the following Arma 3 code: selectedItems=curatorSelected;
Describe the following Arma 3 code: private_savedItems=curatorSelectionPreset1;
Describe the following Arma 3 code: var_wpcost=curatorWaypointCostbis_curator;
Describe the following Arma 3 code: (getAssignedCuratorLogicplayer)removeCuratorEditableObjects[allDead,true];
Describe the following Arma 3 code: _curatorUnit=getAssignedCuratorUnit(allCuratorsselect0);_curatorUnitjoinAs[createGroupcivilian,0];
Describe the following Arma 3 code: loadCuratorSelectionPreset1;
Describe the following Arma 3 code: _curatorsThatcanEdit=objectCuratorsBIS_Tank;
Describe the following Arma 3 code: openCuratorInterface;
Describe the following Arma 3 code: removeAllCuratorAddonsmyCurator;
Describe the following Arma 3 code: removeAllCuratorCameraAreasmyCurator;
Describe the following Arma 3 code: removeAllCuratorEditingAreasmyCurator;
Describe the following Arma 3 code: curatorModuleremoveCuratorAddons[addon1,addon2];
Describe the following Arma 3 code: myCuratorremoveCuratorCameraArea3;
Describe the following Arma 3 code: curatorModuleremoveCuratorEditableObjects[[cursorTarget],true];
Describe the following Arma 3 code: myCuratorremoveCuratorEditingArea3;
Describe the following Arma 3 code: myCuratorsetCuratorCameraAreaCeiling50;
Describe the following Arma 3 code: curatorModulesetCuratorCoef["Place",1];
Describe the following Arma 3 code: curatorModulesetCuratorEditingAreaTypetrue;
Describe the following Arma 3 code: setCuratorSelected[unit1,group1,[group1,waypointIndex],markerName1];
Describe the following Arma 3 code: 1setCuratorSelectionPreset[object1,object2];
Describe the following Arma 3 code: myCuratorsetCuratorWaypointCost0.1;
Describe the following Arma 3 code: showCuratorCompasstrue;
Describe the following Arma 3 code: _isShown=shownCuratorCompass;
Describe the following Arma 3 code: unassignCuratormyCurator;
Describe the following Arma 3 code: // enables slingload assistant on player's vehicle right panel at driver position[vehicleplayer,[-1]]enableInfoPanelComponent["VehicleSystemsDisplayManagerComponentRight","SlingLoadDisplay",true];
Describe the following Arma 3 code: infoPanel"left"params["_componentClass","_componentType"];
Describe the following Arma 3 code: // returns true if specific component "SensorDisplay" is enabled on player vehicle's left panel_state=[vehicleplayer,[-1]]infoPanelComponentEnabled["VehicleSystemsDisplayManagerComponentLeft","SensorDisplay"];
Describe the following Arma 3 code: // returns array of all components configured for _helicopter pilot seatprivate_componentsData=[_helicopter,[-1]]infoPanelComponents"left";
Describe the following Arma 3 code: infoPanels[vehicleplayer,[0]];
Describe the following Arma 3 code: // opens slingload assistant on right panelprivate_result=setInfoPanel["VehicleSystemsDisplayManagerComponentRight","SlingLoadDisplayComponent"];if(!_result)then{hint"could not open the slingload assistant, sorry"};
Describe the following Arma 3 code: _bool=shownUAVFeed;
Describe the following Arma 3 code: showUAVFeedtrue;
Describe the following Arma 3 code: {systemChatstr_x}forEachdiag_activeMissionFSMs;
Describe the following Arma 3 code: hintstrdiag_activeScripts;//[0,0,0,1]
Describe the following Arma 3 code: []spawn{hintstrdiag_activeSQFScripts;};// displays [["<spawn> hint str diag_activeSQFScripts;", "", true, 1]]
Describe the following Arma 3 code: {systemChatstr_x}forEachdiag_activeSQSScripts;
Describe the following Arma 3 code: diag_allMissionEventHandlers;/*
returns:
[
	"Ended",0,
	"SelectedActionPerformed",0,
	"SelectedRotorLibActionPerformed",0,
	"SelectedActionChanged",0,
	"SelectedRotorLibActionChanged",0,
	"ControlsShifted",0,
	"Draw3D",1,
	"Loaded",0,
	"HandleDisconnect",0,
	"EntityRespawned",0,
	"EntityKilled",0,
	"MapSingleClick",0,
	"HCGroupSelectionChanged",0,
	"CommandModeChanged",0,
	"PlayerConnected",0,
	"PlayerDisconnected",0,
	"TeamSwitch",0,
	"GroupIconClick",0,
	"GroupIconOverEnter",0,
	"GroupIconOverLeave",0,
	"EachFrame",0,
	"PreloadStarted",0,
	"PreloadFinished",0,
	"Map",0,
	"PlayerViewChanged",0,
	"BuildingChanged",0,
	"MPEnded",0,
	"HandleAccTime",0,
	"ExtensionCallback",0
]
*/
Describe the following Arma 3 code: diag_captureFrame1;// capture the first frame after command execution
Describe the following Arma 3 code: diag_captureFrameToFile1;//capture the first frame after command execution
Describe the following Arma 3 code: diag_captureSlowFrame["total",0.003];
Describe the following Arma 3 code: private_result=diag_codePerformance[{private_a=123;},0,10000];
Describe the following Arma 3 code: private_frameTime=diag_deltaTime;
Describe the following Arma 3 code: diag_drawMode"FireGeometry";sleep5;diag_drawMode"Normal";
Describe the following Arma 3 code: diag_dumpCalltraceToLog;/* outputs:
Callstack:"
14:17:06 "    [] L1 ()"
14:17:06 "    [] L25 (A3\functions_f\Debug\fn_debugConsoleExec.sqf)"
14:17:06 "        _this:[{st = 15 / 0;}]"
14:17:06 "    [] L0 ()"
14:17:06 "    [] L25 (A3\functions_f\Debug\fn_debugConsoleExec.sqf)"
14:17:06 "        _x:any"
14:17:06 "    [] L1 ()"
14:17:06 "        _this:[]"
14:17:06 "CALLSTACK END;;;
*/
Describe the following Arma 3 code: diag_dumpScriptAssemblyBIS_fnc_taskCreate;
Describe the following Arma 3 code: private_terrainSynth=diag_dumpTerrainSynth;
Describe the following Arma 3 code: diag_dynamicSimulationEnd"dynSimDebugData";// Creates a file called "dynSimDebugData_runtimelog.txt"
Describe the following Arma 3 code: diag_dynamicSimulationStart;
Describe the following Arma 3 code: "All"diag_enabletrue;
Describe the following Arma 3 code: "Animation"diag_enabletrue;diag_enabled"Animation";// returns true
Describe the following Arma 3 code: diag_exportConfig["O:/config.cpp",configFile];
Describe the following Arma 3 code: diag_exportTerrainSVG["C:\Users\USERNAME\Desktop\Stratis_Map.svg",true,true,true,true,true,false];// replace USERNAME with your username!
Describe the following Arma 3 code: diag_logdiag_fps;
Describe the following Arma 3 code: _minfps=diag_fpsMin;
Describe the following Arma 3 code: _currFrameNo=diag_frameNo;
Describe the following Arma 3 code: private_terrainGrid=diag_getTerrainGrid;
Describe the following Arma 3 code: private_h=diag_getTerrainHeightpositionplayer;
Describe the following Arma 3 code: _worldPosparams["_x","_y"];[floor(_x/diag_getTerrainGrid),floor(_y/diag_getTerrainGrid)];
Describe the following Arma 3 code: diag_lightNewLoad"o:\lighting.txt";
Describe the following Arma 3 code: diag_list"toggle";
Describe the following Arma 3 code: diag_logtime;
Describe the following Arma 3 code: diag_logSlowFrame['total',0.3];
Describe the following Arma 3 code: diag_mergeConfigFile["O:\Arma3\A3\Stuff_F\config.cpp"]
Describe the following Arma 3 code: diag_recordTurretLimitstrue;
Describe the following Arma 3 code: diag_resetShapes;
Describe the following Arma 3 code: []spawn{systemChatstrdiag_scope;// 0call{call{systemChatstrdiag_scope;// 2isNil{systemChatstrdiag_scope;// 0call{systemChatstrdiag_scope;// 1};};};};};
Describe the following Arma 3 code: diag_setLightNew"sunOrMoon = 1; diffuse[] = { 0, 0, 0, 0 }; diffuseCloud[] = { 0, 0, 0, 0 }; ambient[] = { 0, 0, 0, 0 }; ... ";
Describe the following Arma 3 code: private_fnc_flattenTerrain={params["_start","_a","_b","_h"];for"_xStep"from0to_ado{for"_yStep"from0to_bdo{_startvectorAdd[_xStep,_yStep,0]diag_setTerrainHeight_h;};};};private_desiredTerrainHeight=150;[getPosWorldplayer,50,50,_desiredTerrainHeight]spawn_fnc_flattenTerrain;
Describe the following Arma 3 code: params["_functionName","_lineNumber","_scopeName","_variablesHashmap"];
Describe the following Arma 3 code: // Measure execution time of a script_start=diag_tickTime;// code_stop=diag_tickTime;diag_logformat["%1",_stop-_start];
Describe the following Arma 3 code: diag_toggle"Animation";// enablediag_toggle"Animation";// disable
Describe the following Arma 3 code: echo"Text in logfile";
Describe the following Arma 3 code: enableDiagLegendfalse;
Describe the following Arma 3 code: exportJIPMessages"myFileNameWithoutExtension";
Describe the following Arma 3 code: private_cellWidth=getTerrainInfo#2;getTerrainHeightASL(_posapply{_cellWidth*round(_x/_cellWidth)});
Describe the following Arma 3 code: private_terrainInfo=getTerrainInfo;// Stratis: [32,256,4,2048,0]; Altis: [30,1024,7.5,4096,0]
Describe the following Arma 3 code: _state=isFilePatchingEnabled;
Describe the following Arma 3 code: logEntities;
Describe the following Arma 3 code: _handle=logNetwork["myLog.txt",[""]];
Describe the following Arma 3 code: logNetworkTerminate_someHandle;
Describe the following Arma 3 code: setCustomMissionData["someData","someMoreData"];
Describe the following Arma 3 code: private_fnc_flattenTerrain={params["_start","_a","_b","_h"];private_newPositions=[];for"_xStep"from0to_ado{for"_yStep"from0to_bdo{private_newHeight=_startvectorAdd[_xStep,_yStep,0];_newHeightset[2,_h];_newPositionspushBack_newHeight;};};_newPositions;};private_desiredTerrainHeight=150;private_positionsAndHeights=[getPosWorldplayer,50,50,_desiredTerrainHeight]call_fnc_flattenTerrain;setTerrainHeight[_positionsAndHeights,true];
Describe the following Arma 3 code: ?(cadetMode):_AIsoldiersetSkill0.1
Describe the following Arma 3 code: value=difficulty;
Describe the following Arma 3 code: hintstr(difficultyEnabled"armor");
Describe the following Arma 3 code: _rtdOn=difficultyEnabledRTD;
Describe the following Arma 3 code: hintstr(difficultyOption"friendlyTags");
Describe the following Arma 3 code: disableMapIndicators[true,true,false,false];
Describe the following Arma 3 code: private_previousSettings=forceCadetDifficulty[true,false];
Describe the following Arma 3 code: hintCadet"Press W to move forward";
Describe the following Arma 3 code: hintstrisInstructorFigureEnabled;
Describe the following Arma 3 code: hintstrisTutHintsEnabled;
Describe the following Arma 3 code: private_number=missionDifficulty;
Describe the following Arma 3 code: hintstrcanTriggerDynamicSimulationplayer;
Describe the following Arma 3 code: diag_dynamicSimulationEnd"dynSimDebugData";// Creates a file called "dynSimDebugData_runtimelog.txt"
Describe the following Arma 3 code: diag_dynamicSimulationStart;
Describe the following Arma 3 code: hintstrdynamicSimulationDistance"Prop";
Describe the following Arma 3 code: hintstrdynamicSimulationDistanceCoef"IsMoving";
Describe the following Arma 3 code: hintstrdynamicSimulationEnabled_myObject;
Describe the following Arma 3 code: hintstrdynamicSimulationSystemEnabled;
Describe the following Arma 3 code: _myObjectenableDynamicSimulationtrue;
Describe the following Arma 3 code: enableDynamicSimulationSystemtrue;
Describe the following Arma 3 code: "Group"setDynamicSimulationDistance1000;
Describe the following Arma 3 code: "IsMoving"setDynamicSimulationDistanceCoef3;
Describe the following Arma 3 code: playertriggerDynamicSimulationfalse;
Describe the following Arma 3 code: add3DENConnection["RandomStart",get3DENSelected"Object","marker_0"];// Set random start on marker "marker_0" for all selected objects.
Describe the following Arma 3 code: eh=add3DENEventHandler["onUndo",{systemChat"Zip..."}];
Describe the following Arma 3 code: _myLayer=-1add3DENLayer"Enemy Base";_myLayerFort=_myLayeradd3DENLayer"Fortifications";_myLayerPatrol=_myLayeradd3DENLayer"Patrols";
Describe the following Arma 3 code: systemChatstrall3DENEntities;
Describe the following Arma 3 code: 0clear3DENAttribute"name";
Describe the following Arma 3 code: clear3DENInventoryget3DENSelected"Object";
Describe the following Arma 3 code: collect3DENHistory{_logic=create3DENEntity["Logic","Logic",positionplayer];add3DENConnection["Sync",[_logic],player];};// Creates a logic and connects it to player in one history step.
Describe the following Arma 3 code: myComposition=create3DENComposition[configFile>>"CfgGroups">>"West">>"BLU_F">>"Infantry">>"BUS_InfSquad",screenToWorld[0.5,0.5]];
Describe the following Arma 3 code: dude1=create3DENEntity["Object","B_Soldier_F",screenToWorld[0.5,0.5]];
Describe the following Arma 3 code: if(current3DENOperation=="Move")then{hint"Moving";};
Describe the following Arma 3 code: delete3DENEntities(all3DENEntitiesselect0);// Removes all objects
Describe the following Arma 3 code: do3DENAction"MissionSave";
Describe the following Arma 3 code: edit3DENMissionAttributes"Multiplayer";
Describe the following Arma 3 code: if(get3DENActionState"ToggleMap"==1)then{systemChat"Editor map is open!"};
Describe the following Arma 3 code: // returns variable name of the object under cursorsystemChatstr((get3DENMouseOverselect1)get3DENAttribute"name");
Describe the following Arma 3 code: // set exact yaw, pitch, and roll_y=45;_p=-80;_r=0;get3DENCamerasetVectorDirAndUp[[sin_y*cos_p,cos_y*cos_p,sin_p],[[sin_r,-sin_p,cos_r*cos_p],-_y]callBIS_fnc_rotateVector2D];
Describe the following Arma 3 code: get3DENConnections_trigger;// Can return [["WaypointActivation",[B Alpha 4-5,0]]]
Describe the following Arma 3 code: myEntity=get3DENEntity1;
Describe the following Arma 3 code: myID=get3DENEntityIDplayer;
Describe the following Arma 3 code: _currentIncrement=get3DENGrid"t";
Describe the following Arma 3 code: if(get3DENIconsVisibleselect0)then{hint"Icons are visible in the map.";};
Describe the following Arma 3 code: _myLayer=-1add3DENLayer"CTRG";playerset3DENLayer_myLayer;_entities=get3DENLayerEntities_myLayer;
Describe the following Arma 3 code: if(get3DENLinesVisibleselect0)then{hint"Lines are visible in the map.";};
Describe the following Arma 3 code: systemChatstr("Multiplayer"get3DENMissionAttribute"respawn");
Describe the following Arma 3 code: systemChatstrget3DENMouseOver;// returns e.g ["Object", B Alpha 1-1:1]
Describe the following Arma 3 code: get3DENSelected"";/*
[
	[B Alpha 2-1:1],				// objects
	[B Alpha 2-1],					// groups
	[164494: <no shape>],			// triggers
	[<No center> Charlie 1-2:4],	// logic
	[[B Alpha 2-1,0]],				// waypoints
	["Hotel_Whiskey"]				// markers
]
*/
Describe the following Arma 3 code: private_base=getMissionLayerEntities"Base";
Describe the following Arma 3 code: ifis3DENthen{systemChat"Welcome to Eden Editor!"};
Describe the following Arma 3 code: ifis3DENMultiplayerthen{systemChat"You are hosting a test server!"};
Describe the following Arma 3 code: ifis3DENPreviewthen{systemChat"Welcome to Eden Editor Preview!"};
Describe the following Arma 3 code: move3DENCamera[getPosASLplayer,true];
Describe the following Arma 3 code: remove3DENConnection["RandomStart",get3DENSelected"Object","marker_0"];// Remove random start on marker "marker_0" from all selected objects.
Describe the following Arma 3 code: eh=add3DENEventHandler["onUndo",{systemChat"Zip..."}];remove3DENEventHandler["onUndo",eh];
Describe the following Arma 3 code: _myLayer=-1add3DENLayer"Enemy Base";remove3DENLayer_myLayer;
Describe the following Arma 3 code: removeAll3DENEventHandlers"onUndo";
Describe the following Arma 3 code: save3DENInventory[_soldier1,_soldier2];
Describe the following Arma 3 code: playerset3DENAttribute["allowDamage",false];// Mark player as invincible
Describe the following Arma 3 code: // Set all selected objects as playableset3DENAttributes[[get3DENSelected"Object","ControlMP",true]];
Describe the following Arma 3 code: set3DENGrid["t",100];// 100m movement increment
Describe the following Arma 3 code: set3DENIconsVisible[false,false];// Hide all icons
Describe the following Arma 3 code: _myLayer=-1add3DENLayer"CTRG";playerset3DENLayer_myLayer;
Describe the following Arma 3 code: set3DENLinesVisible[false,false];// Hide all lines
Describe the following Arma 3 code: [get3DENSelected"logic"select0]set3DENLogicType"MiscOR_F";
Describe the following Arma 3 code: "Multiplayer"set3DENMissionAttribute["respawn",3];// Set respawn type to 3
Describe the following Arma 3 code: // set respawn type to 3 and respawn delay to 10 secondsset3DENMissionAttributes[["Multiplayer","respawn",3],["Multiplayer","respawnDelay",10]];
Describe the following Arma 3 code: set3DENModelsVisible[true,true];
Describe the following Arma 3 code: [get3DENMouseOverselect1]set3DENObjectType"B_crew_F";// turns object under cursor into a blufor crewman
Describe the following Arma 3 code: set3DENSelected[0,5,3,6,7,12];
Describe the following Arma 3 code: private_airTemp=ambientTemperatureselect0;
Describe the following Arma 3 code: // in Arma 3dateparams["_year","_month","_day","_hours","_minutes"];// pre Arma 3_now=date;// [2014,10,30,2,30] a.k.a Oct. 30th, 2:30am_year=_nowselect0;_month=_nowselect1;_day=_nowselect2;_hours=_nowselect3;_minutes=_nowselect4;
Describe the following Arma 3 code: 1/365=0.00273973
Describe the following Arma 3 code: dayTime;// returns 16.5 given it is 16:30 (4.30pm) in game
Describe the following Arma 3 code: enableEnvironmentfalse;// identical to enableEnvironment [false, false]
Describe the following Arma 3 code: enableTraffictrue;
Describe the following Arma 3 code: _enabled=environmentEnabled;
Describe the following Arma 3 code: _foglevel=fog;
Describe the following Arma 3 code: _level=fogForecast;
Describe the following Arma 3 code: private_fog=fogParams;
Describe the following Arma 3 code: 0setOvercast1;0setRain1;forceWeatherChange;Forceimmediatechangeoverridingsmoothtransition
Describe the following Arma 3 code: _arr=getObjectViewDistance;
Describe the following Arma 3 code: _value=getShadowDistance;
Describe the following Arma 3 code: _terrainGrid=getTerrainGrid;
Describe the following Arma 3 code: if(getTIParametersget"OutputRangeStart"==0.1)then{hint"default Start"};
Describe the following Arma 3 code: _gustsValue=gusts;
Describe the following Arma 3 code: currentHumidity=humidity;
Describe the following Arma 3 code: initAmbientLife;
Describe the following Arma 3 code: _lightningsVal=lightnings;
Describe the following Arma 3 code: _intensity=moonIntensity;
Describe the following Arma 3 code: _currentMoonPhase=moonPhasedate;
Describe the following Arma 3 code: _seconds=nextWeatherChange;
Describe the following Arma 3 code: setDatenumberToDate[2008,0.5324];// sets date to [2008,7,13,7,49]
Describe the following Arma 3 code: _cloudLevel=overcast;
Describe the following Arma 3 code: _forecast=overcastForecast;
Describe the following Arma 3 code: _rainLevel=rain;
Describe the following Arma 3 code: private_intensity=rainbow;
Describe the following Arma 3 code: private_rainParams=rainParams;
Describe the following Arma 3 code: setDate[1986,2,25,16,0];// 4:00pm February 25, 1986
Describe the following Arma 3 code: 15setFog0.5;
Describe the following Arma 3 code: 60setGusts0.75;
Describe the following Arma 3 code: setHumidity1;
Describe the following Arma 3 code: 1800setLightnings0.7;
Describe the following Arma 3 code: setLocalWindParams[10,5];
Describe the following Arma 3 code: setObjectViewDistance2000;
Describe the following Arma 3 code: 50setOvercast0.5;
Describe the following Arma 3 code: 60setRain1;
Describe the following Arma 3 code: 360setRainbow1;
Describe the following Arma 3 code: setShadowDistance200;
Describe the following Arma 3 code: setSimulWeatherLayers0;// Very flat clouds
Describe the following Arma 3 code: setTerrainGrid12.5;
Describe the following Arma 3 code: setTimeMultiplier60;
Describe the following Arma 3 code: setTIParameter["OutputRangeStart",0];setTIParameter["OutputRangeWidth",1];
Describe the following Arma 3 code: setTrafficDensity[40,31000,32000,30000,32000];
Describe the following Arma 3 code: setTrafficDistance1000;
Describe the following Arma 3 code: setTrafficGap[50,31000,32500,28000,32000];
Describe the following Arma 3 code: setTrafficSpeed[50,_xMin,_xMax,_zMin,_zMax];
Describe the following Arma 3 code: setViewDistance2250;
Describe the following Arma 3 code: 180setWaves.5;
Describe the following Arma 3 code: setWind[10,10,true];
Describe the following Arma 3 code: 60setWindDir180;
Describe the following Arma 3 code: 1800setWindForce0.5;
Describe the following Arma 3 code: 60setWindStr0.8;// set the wind strength to 0.8 gradually over the next 60 seconds
Describe the following Arma 3 code: simulCloudDensitygetPosplayer;
Describe the following Arma 3 code: private_posPlayer=getPosplayer;private_posAbovePlayer=+_posPlayer;_posAbovePlayerset[2,200];simulCloudOcclusion[_posPlayer,_posAbovePlayer];
Describe the following Arma 3 code: simulInCloudsgetPosplayer;
Describe the following Arma 3 code: simulSetHumidity1;
Describe the following Arma 3 code: simulWeatherSync;
Describe the following Arma 3 code: skipTime5;
Describe the following Arma 3 code: private_transitionState=sunOrMoon;
Describe the following Arma 3 code: _multiplier=timeMultiplier;
Describe the following Arma 3 code: hint("my view distance is "+strviewDistance+" meters");
Describe the following Arma 3 code: waveIntensity=waves;
Describe the following Arma 3 code: _windArray=wind;
Describe the following Arma 3 code: if(windDir<45||windDir>315)then{hint"I feel a southern wind";// wind going from South to North};
Describe the following Arma 3 code: 10setWindStr(0.5*windStr);
Describe the following Arma 3 code: eh=add3DENEventHandler["onUndo",{systemChat"Zip..."}];
Describe the following Arma 3 code: thisaddEventHandler["Killed",{params["_unit","_killer"];systemChatformat["%1 has been killed by %2.",_unit,_killer];}];
Describe the following Arma 3 code: _id=addMissionEventHandler["PlayerDisconnected",{systemChatstr_this}];
Describe the following Arma 3 code: _index=playeraddMPEventHandler["MPKilled",{_thisexecVM"playerKilled.sqf";}];
Describe the following Arma 3 code: private_ehID=addMusicEventHandler["MusicStart",{hintstr_this}];
Describe the following Arma 3 code: "publicThis"addPublicVariableEventHandler{hintformat["%1 has been updated to: %2",_thisselect0,_thisselect1]};
Describe the following Arma 3 code: private_ehId=addUserActionEventHandler["ReloadMagazine","Activate",{systemChat"reloading!";}];
Describe the following Arma 3 code: _mapctrlAddEventHandler["draw","_this call BIS_fnc_strategicMapOpen_draw"];
Describe the following Arma 3 code: _ctrlButtonctrlRemoveAllEventHandlers"ButtonDown";
Describe the following Arma 3 code: _mapctrlRemoveEventHandler["Draw",_id];
Describe the following Arma 3 code: _controlctrlSetEventHandler["KeyDown",""];
Describe the following Arma 3 code: diag_allMissionEventHandlers;/*
returns:
[
	"Ended",0,
	"SelectedActionPerformed",0,
	"SelectedRotorLibActionPerformed",0,
	"SelectedActionChanged",0,
	"SelectedRotorLibActionChanged",0,
	"ControlsShifted",0,
	"Draw3D",1,
	"Loaded",0,
	"HandleDisconnect",0,
	"EntityRespawned",0,
	"EntityKilled",0,
	"MapSingleClick",0,
	"HCGroupSelectionChanged",0,
	"CommandModeChanged",0,
	"PlayerConnected",0,
	"PlayerDisconnected",0,
	"TeamSwitch",0,
	"GroupIconClick",0,
	"GroupIconOverEnter",0,
	"GroupIconOverLeave",0,
	"EachFrame",0,
	"PreloadStarted",0,
	"PreloadFinished",0,
	"Map",0,
	"PlayerViewChanged",0,
	"BuildingChanged",0,
	"MPEnded",0,
	"HandleAccTime",0,
	"ExtensionCallback",0
]
*/
Describe the following Arma 3 code: moduleName_keyDownEHId=findDisplay46displayAddEventHandler["KeyDown","hint str _this;"];
Describe the following Arma 3 code: findDisplay46displayRemoveAllEventHandlers"KeyDown";
Describe the following Arma 3 code: findDisplay46displayRemoveEventHandler["keyDown",5];
Describe the following Arma 3 code: _controldisplaySetEventHandler["KeyDown",""];
Describe the following Arma 3 code: _mapeditorSetEventHandler["SelectObject",""];
Describe the following Arma 3 code: private_info=playergetEventHandlerInfo["MPKilled",1];// object EH
Describe the following Arma 3 code: params["_target","_caller","_index","_engineName","_text","_priority","_showWindow","_hideOnUse","_shortcut","_visibleMenu","_eventName"];
Describe the following Arma 3 code: onBriefingGear"GearVoiceOver";
Describe the following Arma 3 code: onBriefingGroup"GroupVoiceOver";
Describe the following Arma 3 code: onBriefingNotes"NotesVoiceOver";
Describe the following Arma 3 code: onBriefingPlan"PlanVoiceOver";
Describe the following Arma 3 code: onBriefingTeamSwitch"TeamSwitchVoiceOver";
Describe the following Arma 3 code: //Examples in-use can be found in://ca\modules\HC\data\scripts\HC_GUI.sqf//A3\modules_f\HC\data\scripts\HC_GUI.sqf
Describe the following Arma 3 code: onEachFrame{hintSilentstrgetPosWorldplayer};// hints position every frame
Describe the following Arma 3 code: onGroupIconClick{// passed values for _this are:params["_is3D","_group","_wpID","_posX","_posY","_shift","_ctrl","_alt"];// before Arma 3_is3D=_thisselect0;_group=_thisselect1;_wpID=_thisselect2;_RMB=_thisselect3;_posx=_thisselect4;_posy=_thisselect5;_shift=_thisselect6;_ctrl=_thisselect7;_alt=_thisselect8;_message=format["____ Info ____"];{_message=_message+format["\n %1",_x]}forEach_this;hint_message;};
Describe the following Arma 3 code: onGroupIconOverEnter{// passed values for _this are:params["_is3D","_group","_wpID","_posX","_posY","_shift","_ctrl","_alt"];// before Arma 3_is3D=_thisselect0;_group=_thisselect1;_wpID=_thisselect2;_posx=_thisselect3;_posy=_thisselect4;_shift=_thisselect5;_ctrl=_thisselect6;_alt=_thisselect7;_message=format["____ Info ____"];{_message=_message+format["\n %1",_x]}forEach_this;hint_message;};
Describe the following Arma 3 code: onGroupIconOverLeave{// passed values for _this are:params["_is3D","_group","_wpID","_posX","_posY","_shift","_ctrl","_alt"];// before Arma 3_is3D=_thisselect0;_group=_thisselect1;_wpID=_thisselect2;_posx=_thisselect3;_posy=_thisselect4;_shift=_thisselect5;_ctrl=_thisselect6;_alt=_thisselect7;_message=format["____ Info ____"];{_message=_message+format["\n %1",_x]}forEach_this;hint_message;};
Describe the following Arma 3 code: onHCGroupSelectionChanged{if(_isSelected)then{hintformat["Group %1 has been selected.",_group];}else{hintformat["Group %1 has been deselected.",_group];};};
Describe the following Arma 3 code: onMapSingleClick"'SoldierWB' createUnit [_pos, group player]; true";
Describe the following Arma 3 code: onPlayerConnected"[_id, _name] execVM 'PlayerConnected.sqf';";
Describe the following Arma 3 code: onPlayerDisconnected{diag_log[_id,_uid,_name]};
Describe the following Arma 3 code: onPreloadFinished{TAG_ReceivingScreenDone=true};
Describe the following Arma 3 code: onPreloadStarted{diag_log"preload started"};
Describe the following Arma 3 code: onTeamSwitch{[_from,_to]execVM"myTeamSwitchScript.sqf";};
Describe the following Arma 3 code: eh=add3DENEventHandler["onUndo",{systemChat"Zip..."}];remove3DENEventHandler["onUndo",eh];
Describe the following Arma 3 code: removeAll3DENEventHandlers"onUndo";
Describe the following Arma 3 code: playerremoveAllEventHandlers"Killed";
Describe the following Arma 3 code: removeAllMissionEventHandlers"Loaded";
Describe the following Arma 3 code: removeAllMusicEventHandlers"MusicStart";
Describe the following Arma 3 code: removeAllUserActionEventHandlers["Reload","Activate"];
Describe the following Arma 3 code: playerremoveEventHandler["Killed",0];
Describe the following Arma 3 code: private_eventHandlerId=addMissionEventHandler["Ended",{diag_log"mission complete";}];// ...removeMissionEventHandler["Ended",_eventHandlerId];
Describe the following Arma 3 code: playerremoveMPEventHandler["MPKilled",0];
Describe the following Arma 3 code: removeMusicEventHandler["MusicStart",12];
Describe the following Arma 3 code: removeUserActionEventHandler["Reload","Activate",_reloadUAEH];
Describe the following Arma 3 code: _ehID=setMusicEventHandler["MusicStart","hint str _this"];
Describe the following Arma 3 code: _flag=flag_soldier;
Describe the following Arma 3 code: flagAnimationPhase_flag1;
Describe the following Arma 3 code: _person=flagOwner_flagOne;
Describe the following Arma 3 code: _flagSide=flagSideflag;
Describe the following Arma 3 code: _flagTexture=flagTexture_flag1;
Describe the following Arma 3 code: playerforceFlagTexture"\A3\Data_F\Flags\Flag_red_CO.paa";
Describe the following Arma 3 code: getForcedFlagTextureplayer;
Describe the following Arma 3 code: _flag1setFlagAnimationPhase0.5;
Describe the following Arma 3 code: _flag1setFlagOwner_soldier1;
Describe the following Arma 3 code: _flag1setFlagSideeast;
Describe the following Arma 3 code: _flagEsetFlagTexture"\ca\misc\data\sever_vlajka.paa";
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: clearOverlay_map,;
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: collapseObjectTree_map,;
Describe the following Arma 3 code: commitOverlay_map,;
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: _mapeditorSetEventHandler["SelectObject",""];
Describe the following Arma 3 code: // returns string "[1009.0351, 1319.4928]"(findDisplay128displayCtrl51)getObjectArgument["_unit_1","POSITION"]// returns array [1009.0351, 1319.4928](findDisplay128displayCtrl51)evalObjectArgument["_unit_1","POSITION"]
Describe the following Arma 3 code: _mapexecEditorScript["_team_1","create"];
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: _fromEditor=fromEditor_member;
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: // returns string "[1009.0351, 1319.4928]"(findDisplay128displayCtrl51)getObjectArgument["_unit_1","POSITION"]// returns array [1009.0351, 1319.4928](findDisplay128displayCtrl51)evalObjectArgument["_unit_1","POSITION"]
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: (findDisplay128displayCtrl51)getObjectProxy"_unit_1"// returns the object 'B 1-1-A:1 (Sean Johnson)'
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: _isRealTime=isRealTime_map;
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: findDisplay12lookAtPos[0,0,0];
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: saveOverlay_map;
Describe the following Arma 3 code: _selObjects=selectedEditorObjects_map;// result can be: ["_vehicle_0","_vehicle_9","_vehicle_11"]
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: _mapsetEditorObjectScope[[],"vehicle","side effectiveCommander _x != side player","HIDE",false];
Describe the following Arma 3 code: _teamMembersetFromEditortrue;
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: _mapsetObjectProxy["_group_0",vehicle(leader_group)];
Describe the following Arma 3 code: _mapsetVisibleIfTreeCollapsed["_unit_0",true];
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: updateObjectTree_ctrlMap;
Describe the following Arma 3 code: {leader_xsideChat"Go ! Go ! Go !"}forEachallGroups;
Describe the following Arma 3 code: _group1allowFleeing0;
Describe the following Arma 3 code: _group=assignedGroupvehicleplayer;
Describe the following Arma 3 code: _vehicles=assignedVehiclesgroupplayer;
Describe the following Arma 3 code: _soldier2assignTeam"RED";
Describe the following Arma 3 code: if(notattackEnabled_soldier)then{_soldiersetCombatMode"Careless"};
Describe the following Arma 3 code: unit1setCombatBehaviour"CARELESS";combatBehaviourunit1;// "CARELESS"
Describe the following Arma 3 code: if(combatMode_grp1=="BLUE")then{_grp1setCombatMode"GREEN"};
Describe the following Arma 3 code: _soldier1commandMovegetMarkerPos"Marker1";
Describe the following Arma 3 code: commandStop_soldier1;
Describe the following Arma 3 code: _ESoldier1commandTarget_WSoldier1;
Describe the following Arma 3 code: private_group=createGroupeast;
Describe the following Arma 3 code: deleteGroup_group;
Describe the following Arma 3 code: _groupdeleteGroupWhenEmptytrue;
Describe the following Arma 3 code: dissolveTeam"RED";
Describe the following Arma 3 code: _group1enableAttacktrue;
Describe the following Arma 3 code: soldier1forgetTargetsoldier2;
Describe the following Arma 3 code: if(formationgroupplayer=="wedge")then{hint"this is the default formation"};
Describe the following Arma 3 code: _degrees=formationDirection_unit;
Describe the following Arma 3 code: _drivers=formationMembers_person;
Describe the following Arma 3 code: _currentTask=formationTask_unit;
Describe the following Arma 3 code: _playerGrp=groupplayer;
Describe the following Arma 3 code: _group=groupFromNetId"4:45";
Describe the following Arma 3 code: _name=groupIdgroupplayer;// e.g "B Alpha 1-1"
Describe the following Arma 3 code: private_allBluforGroups=groupsblufor;// equivalent of allGroups select { side _x == blufor };
Describe the following Arma 3 code: grpNull==grpNull;// falseisNullgrpNull;// truegrpNullisEqualTogrpNull;// true
Describe the following Arma 3 code: private_players=callBIS_fnc_listPlayers;private_indices=_playersinAreaArrayIndexes_marker;{private_player=_playersselect_x;["You are in the marker!"]remoteExec["hint",_player];}forEach_indices;
Describe the following Arma 3 code: _isLeader=isFormationLeaderplayer;
Describe the following Arma 3 code: _isMarked=isGroupDeletedWhenEmpty_group;
Describe the following Arma 3 code: [_unitOne,_unitTwo]joinplayer;
Describe the following Arma 3 code: playerjoinAs[_group,4];
Describe the following Arma 3 code: playerjoinAsSilent[_group,4];
Describe the following Arma 3 code: [_unitOne,_unitTwo]joinSilent(groupplayer);
Describe the following Arma 3 code: leadergroupplayer==leaderplayer;
Describe the following Arma 3 code: leaveVehicle=un-addVehicle+unassignVehicleforEachcrew
Describe the following Arma 3 code: onBriefingGroup"GroupVoiceOver";
Describe the following Arma 3 code: _grpsetFormDirgetDirleader_grp;
Describe the following Arma 3 code: groupplayerselectLeaderplayer;
Describe the following Arma 3 code: _group1setBehaviour"SAFE";
Describe the following Arma 3 code: _group1setBehaviourStrong"SAFE";
Describe the following Arma 3 code: unit1setCombatBehaviour"SAFE";
Describe the following Arma 3 code: _group1setCombatMode"BLUE";
Describe the following Arma 3 code: _groupOnesetFormation"LINE";
Describe the following Arma 3 code: _group1setFormDir180;
Describe the following Arma 3 code: groupplayersetGroupId["Some name for the group"];hintgroupIdgroupplayer;// "Some name for the group"playersideChat"lalala";// Some name for the group (KK): "lalala"
Describe the following Arma 3 code: groupplayersetGroupIdGlobal["PAPA BEAR"];hintgroupIdgroupplayer;// "PAPA BEAR"
Describe the following Arma 3 code: _groupOnesetSpeedMode"LIMITED";
Describe the following Arma 3 code: _speed=speedModegroupplayer;
Describe the following Arma 3 code: unassignTeam_soldier2;
Describe the following Arma 3 code: _myUnitCount=countunitsplayer;
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: // create main folderdisableSerialization;private_ctrlMenuStrip=findDisplay313displayCtrl120;private_indexMain=_ctrlMenuStripmenuAdd[[],"Custom Tools"];// create first subentry which is not checkable but has an actionprivate_indexUncheckable=_ctrlMenuStripmenuAdd[[_indexMain],"This entry can not be checked"];_ctrlMenuStripmenuSetAction[[_indexMain,_indexUncheckable],"systemChat 'Hello World!'"];// create second subentry which is checkable and has an actionprivate_indexCheckable=_ctrlMenuStripmenuAdd[[_indexMain],"This entry is checkable"];_ctrlMenuStripmenuSetAction[[_indexMain,_indexCheckable],"systemChat 'Hello World!'"];_ctrlMenuStripmenuSetCheck[[_indexMain,_indexCheckable],true];// create third subentry which shows an image and has an actionprivate_indexPicture=_ctrlMenuStripmenuAdd[[_indexMain],"This entry has a picture"];_ctrlMenuStripmenuSetAction[[_indexMain,_indexPicture],"systemChat 'Hello World!'"];_ctrlMenuStripmenuSetPicture[[_indexMain,_indexPicture],"\a3\modules_f\data\iconunlock_ca.paa"];// create a fourth entry which will destroy itself once clickedprivate_indexDelete=_ctrlMenuStripmenuAdd[[_indexMain],"This entry will be deleted once clicked"];_ctrlMenuStripmenuSetAction[[_indexMain,_indexDelete],"findDisplay 313 displayCtrl 120 menuDelete (menuHover (findDisplay 313 displayCtrl 120)); systemChat 'Entry gone!'"];// create a fifth entry which will return its data once clickedprivate_indexData=_ctrlMenuStripmenuAdd[[_indexMain],"This entry will print its data to system chat when clicked"];_ctrlMenuStripmenuSetData[[_indexMain,_indexData],"<nowiki>[</nowiki>objNull,'Some String',true]"];_ctrlMenuStripmenuSetAction[[_indexMain,_indexData],"systemChat (findDisplay 313 displayCtrl 120 menuData (menuHover (findDisplay 313 displayCtrl 120)));"];
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: 21cutText["Hello World!","PLAIN",2];hintstractiveTitleEffectParams21;// ["TXT", "PLAIN", 2, true]
Describe the following Arma 3 code: cutText["Hello World!","PLAIN",2];hintstrallActiveTitleEffects;// [0]
Describe the following Arma 3 code: _allCtrls=allControlsfindDisplay46;
Describe the following Arma 3 code: private_layerNum="TAG_myLayerName"cutFadeOut0;
Describe the following Arma 3 code: private_iguiDisplays=uiNamespacegetVariable["IGUI_displays",[]];
Describe the following Arma 3 code: buttonSetAction[100,{playerexec"reply.sqs"}]_action=buttonAction100;// Returns { player exec "reply.sqs" }
Describe the following Arma 3 code: buttonSetAction[100,"player exec ""reply.sqs"""];
Describe the following Arma 3 code: _checked=cbChecked_myCheckBox;
Describe the following Arma 3 code: _myCheckBoxcbSetCheckedtrue;
Describe the following Arma 3 code: #define IDC_OK1// emulate "Ok" button#define IDC_CANCEL2// emulate "Cancel" button
Describe the following Arma 3 code: _displaycloseDisplay1;
Describe the following Arma 3 code: if(_myCtrlisEqualTocontrollNull)then{hint"_myCtrl is null!";};
Describe the following Arma 3 code: _control=_controlsGroupcontrolsGroupCtrl101;
Describe the following Arma 3 code: private_ok=createDialog"RscDisplayGame";if(!_ok)then{hint"Dialog could not be opened!"};
Describe the following Arma 3 code: findDisplay46createDisplay"RscCredits";
Describe the following Arma 3 code: playeraction["Gear",player];
Describe the following Arma 3 code: _ChildDisplay=_RootdisplaycreateMissionDisplay"Tutorial";
Describe the following Arma 3 code: findDisplay46createMPCampaignDisplay"Apex";
Describe the following Arma 3 code: ctrlActivate_control;
Describe the following Arma 3 code: private_ctrl=_myDisplayctrlAt[0.5,0.5];
Describe the following Arma 3 code: _ctrlDelay=ctrlAutoScrollDelay_ctrlGroup;
Describe the following Arma 3 code: _ctrlRewind=ctrlAutoScrollRewind_ctrlGroup;
Describe the following Arma 3 code: _ctrlSpeed=ctrlAutoScrollSpeed_ctrlGroup;
Describe the following Arma 3 code: ctrlBackgroundColor_control;
Describe the following Arma 3 code: ctrlChecked_control;
Describe the following Arma 3 code: _className=findDisplay12getVariable["BIS_fnc_initDisplay_configClass",""];// "RscDiary"
Describe the following Arma 3 code: _controlctrlCommit2;// make animation last approx. 2 seconds
Describe the following Arma 3 code: _done=ctrlCommitted_control;
Describe the following Arma 3 code: _displayctrlCreate["RscText",1234];
Describe the following Arma 3 code: ctrlDelete((findDisplay20000)displayCtrl20001);
Describe the following Arma 3 code: ctrlEnable[100,false];
Describe the following Arma 3 code: if!(ctrlEnabled100)then{ctrlEnable[100,true];};
Describe the following Arma 3 code: _scale=ctrlFade_control;
Describe the following Arma 3 code: ctrlFontHeight_control;
Describe the following Arma 3 code: ctrlForegroundColor_control;
Describe the following Arma 3 code: ctrlIDC_ctrl;
Describe the following Arma 3 code: ctrlIDDfindDisplay46;//46
Describe the following Arma 3 code: _display=ctrlParent_control;
Describe the following Arma 3 code: _ctrlCombo=_ctrlcontrolsGroupCtrl100;// controlctrlParentControlsGroup_ctrlCombo;// parent control group (_ctrl)
Describe the following Arma 3 code: private_scrollvalues=ctrlScrollValues_ctrl;
Describe the following Arma 3 code: _controlctrlSetActiveColor[1,0,0,1];
Describe the following Arma 3 code: _controlctrlSetAngle[25,0.5,0.5];
Describe the following Arma 3 code: _ctrlGroupctrlSetAutoScrollDelay5;
Describe the following Arma 3 code: _ctrlGroupctrlSetAutoScrollRewindtrue;
Describe the following Arma 3 code: _ctrlGroupctrlSetAutoScrollSpeed0.1;
Describe the following Arma 3 code: _controlctrlSetBackgroundColor[1,0,0,1];
Describe the following Arma 3 code: _controlctrlSetCheckedtrue;
Describe the following Arma 3 code: _controlctrlSetDisabledColor[0.5,0.5,0.5,0.5];
Describe the following Arma 3 code: _controlctrlSetFade1;_controlctrlCommit5;
Describe the following Arma 3 code: ctrlSetFocus_control;
Describe the following Arma 3 code: _controlctrlSetFont"TahomaB";
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: _controlctrlSetForegroundColor[1,0,0,1];
Describe the following Arma 3 code: _ctrlGrpctrlSetScrollValues[-1,0.5];
Describe the following Arma 3 code: _controlctrlSetShadow1;
Describe the following Arma 3 code: _controlctrlSetStructuredTextparseText"First line<img image=data\isniper.paa /><br />Second line"
Describe the following Arma 3 code: ctrlSetText[100,"Hello world"];// for Dialogs
Describe the following Arma 3 code: _controlctrlSetTextColor[1,0,0,1];
Describe the following Arma 3 code: _ctrlTextctrlSetTextColorSecondary[1,0.5,0.1,0.5];
Describe the following Arma 3 code: _ctrlTextctrlSetTextSecondary"Hello World!";
Describe the following Arma 3 code: _controlctrlSetTextSelection[5,10];
Describe the following Arma 3 code: _controlctrlSetTooltip"tooltip";
Describe the following Arma 3 code: _controlctrlSetTooltipColorBox[1,0,0,1];
Describe the following Arma 3 code: _controlctrlSetTooltipColorShade[1,0,0,1];
Describe the following Arma 3 code: _controlctrlSetTooltipColorText[1,0,0,1];
Describe the following Arma 3 code: private_previousMaxWidth=_myControlctrlSetTooltipMaxWidth(SafeZoneW/2);
Describe the following Arma 3 code: _controlctrlSetURL"http://arma3.com/";
Describe the following Arma 3 code: _controlctrlSetURLOverlayMode1;
Describe the following Arma 3 code: _shadow=ctrlShadow_control;
Describe the following Arma 3 code: ctrlShow[100,false];
Describe the following Arma 3 code: _bool=ctrlShown_ctrl;
Describe the following Arma 3 code: private_ctrlStyle=ctrlStyle_myControl;private_bitFlags=_ctrlStylecallBIS_fnc_bitflagsToArray;if(2in_bitFlags)then{hint"This control has centered text!";};
Describe the following Arma 3 code: _text=ctrlText100;
Describe the following Arma 3 code: ctrlTextColor_control;
Describe the following Arma 3 code: _h=ctrlTextHeight_ctrl;
Describe the following Arma 3 code: _secondaryText=ctrlTextSecondary_ctrlText;
Describe the following Arma 3 code: ctrlTextSelection_control;//[0, 11, "Hello World"];
Describe the following Arma 3 code: private_w=ctrlTextWidth_ctrl;
Describe the following Arma 3 code: ctrlTooltip_control;
Describe the following Arma 3 code: _type=ctrlType_rscEdit;// 2
Describe the following Arma 3 code: private_ctrlUrl=ctrlURL_control;// e.g. "http://arma3.com/"
Describe the following Arma 3 code: _mode=ctrlURLOverlayMode_control;// e.g. 0
Describe the following Arma 3 code: _bool=ctrlVisible100;
Describe the following Arma 3 code: 0cutFadeOut2;
Describe the following Arma 3 code: cutObj["TVSet","PLAIN"];cutObj["TVSet","PLAIN",2]
Describe the following Arma 3 code: ("TAG_myLayer"callBIS_fnc_rscLayer)cutRsc["myRsc","PLAIN"];"TAG_myLayer"cutRsc["myRsc","PLAIN"];
Describe the following Arma 3 code: cutText["","BLACK OUT"];cutText["Hello World!","PLAIN",2];
Describe the following Arma 3 code: if(!dialog)then{createDialog"Dialog1";};
Describe the following Arma 3 code: _display=findDisplay46;_displayspawn{hintstr_this;};// would raise a serialization error[_display]spawn{hintstr(_thisselect0);};// OK
Describe the following Arma 3 code: _display=displayChildfindDisplay313;// display #46
Describe the following Arma 3 code: _displayControl=_ParentDisplaydisplayCtrl101;
Describe the following Arma 3 code: displayNull==displayNull;// falseisNulldisplayNull;// truedisplayNullisEqualTodisplayNull;// true
Describe the following Arma 3 code: _display=displayParentfindDisplay49;// Display #46
Describe the following Arma 3 code: private_displayName=displayUniqueName_myDisplay;
Describe the following Arma 3 code: displayUpdate_myDisplay;
Describe the following Arma 3 code: []spawn{waitUntil{!isNullfindDisplay46};hint"Mission Display is now available!";};
Describe the following Arma 3 code: private_focusedCtrl=focusedCtrlfindDisplay12;
Describe the following Arma 3 code: ammo=gearIDCAmmoCount_control;
Describe the following Arma 3 code: ammo=gearSlotAmmoCount_control;
Describe the following Arma 3 code: gearSlotData_myControl;
Describe the following Arma 3 code: _textWidth="Hello World"getTextWidth["PuristaMedium",0.03];
Describe the following Arma 3 code: getUserMFDText_vehicle;
Describe the following Arma 3 code: _controlhtmlLoad"briefing.html";
Describe the following Arma 3 code: hintcomposeText["Image: ",image"\a3\Data_f\Flags\flag_Altis_co.paa"];
Describe the following Arma 3 code: _overlayEnabled=isSteamOverlayEnabled;
Describe the following Arma 3 code: if(isUIContext)then{hint"UI control event"};
Describe the following Arma 3 code: lbTooltip[1,1];
Describe the following Arma 3 code: _ok=preloadTitleObj["BISLogo","PLAIN"];
Describe the following Arma 3 code: _ok=preloadTitleRsc["BIS","PLAIN"];
Describe the following Arma 3 code: _progress=progressPosition_control;
Describe the following Arma 3 code: _controlprogressSetPosition0.5;
Describe the following Arma 3 code: _vehiclesetUserMFDText[0,"some text"];
Describe the following Arma 3 code: _slidepos1=sliderPosition105;
Describe the following Arma 3 code: sliderRange_ctrlSliderparams["_minValue","_maxValue"];
Describe the following Arma 3 code: _ctrlSlidersliderSetPosition50;
Describe the following Arma 3 code: sliderSetRange[101,0,100];
Describe the following Arma 3 code: sliderSetSpeed[101,0.5,2];
Describe the following Arma 3 code: sliderSpeed_ctrlSliderparams["_min","_max"];
Describe the following Arma 3 code: titleCut["Hello, how are you?","Plain Down",3];
Describe the following Arma 3 code: titleText["Hi","plain"];titleFadeOut2;
Describe the following Arma 3 code: titleObj["BISLogo","PLAIN"];
Describe the following Arma 3 code: titleRsc["BIS","PLAIN"];
Describe the following Arma 3 code: titleText["Show this text","PLAIN"];
Describe the following Arma 3 code: uiNamespacesetVariable["LIB_interruptDisplay",_display];
Describe the following Arma 3 code: 5+3// returns  8-5+-3// returns -8
Describe the following Arma 3 code: private_arr=[1,2,3,4,5,6,7,8,9,0]apply{[1,0]select(_x%2==0)};// [1,0,1,0,1,0,1,0,1,0]
Describe the following Arma 3 code: count[0,0,1,2];// returns 4countunitsgroupplayer;// returns number of units in player group
Describe the following Arma 3 code: private_myHashMap=createHashMap;
Describe the following Arma 3 code: createHashMapFromArray[["a",1],["b",2],["c",3]];
Describe the following Arma 3 code: private_declaration=[["#flags",["sealed"]],["#create",{hint"Hello!"}],["#clone",{hint"We were copied!"}],["#delete",{hint"Goodbye"}],["#str",{"My HashMap Object"}],["Method",{hint"Method has been called"}]];private_hashMapObject=createhashMapObject_declaration;// hints "Hello!"_hashMapObjectcall["Method"];// hints "Method has been called"hintstr_hashMapObject;// hints "My HashMap Object"private_shallowCopy=_hashMapObject;// no hintprivate_deepCopy=+_hashMapObject;// hints "We were copied!"// at the end of the scope, _hashMapObject is deleted and hints "Goodbye"
Describe the following Arma 3 code: _arr=[1,2,3];_rem=_arrdeleteAt1;hintstr[_rem,_arr];// [2, [1, 3]]
Describe the following Arma 3 code: // SQF{_xsetDamage1}forEachunitsplayer;
Describe the following Arma 3 code: private_myValue=_myHashMapget"a";
Describe the following Arma 3 code: private_myValue=_myHashMapgetOrDefault["a","Not Found!"];
Describe the following Arma 3 code: _hashmapgetOrDefaultCall[123,{systemChat"The key 123 does not exist and will be created and assigned 345";345},true]
Describe the following Arma 3 code: private_valueHash=hashValue"Hello There";
Describe the following Arma 3 code: 1in[0,1,2];// true
Describe the following Arma 3 code: "Test"insert[0,"Radio"];// returns "RadioTest""Test"insert[2,"Radio"];// returns "TeRadiost""Test"insert[-1,"Radio"];// returns "TestRadio"
Describe the following Arma 3 code: keys_myHashMap;
Describe the following Arma 3 code: _hashMapmerge_otherHashMap;
Describe the following Arma 3 code: _arrayOneset[0,"Hello"];
Describe the following Arma 3 code: hintformat["%1",toArray"AaŒ"];// Returns "[65,97,338]"
Describe the following Arma 3 code: private_values=values_myHashMap;
Describe the following Arma 3 code: groupNameaddGroupIcon["b_inf",[offsetX,offsetY]];
Describe the following Arma 3 code: clearGroupIcons(groupplayer);
Describe the following Arma 3 code: _grpIconId=_groupgetVariable"BIS_MARTA_ICON_TYPE";_grpIcon=_groupgetGroupIcon_grpIconId;
Describe the following Arma 3 code: _iconParams=getGroupIconParamsgroupplayer;
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: hintstrgroupIconSelectable;
Describe the following Arma 3 code: hintstrgroupIconsVisible;
Describe the following Arma 3 code: hcAllGroupsplayer;
Describe the following Arma 3 code: playerhcGroupParamssomeGroup;
Describe the following Arma 3 code: _leader=hcLeadergroupName;
Describe the following Arma 3 code: hcRemoveAllGroupsplayer;
Describe the following Arma 3 code: playerhcRemoveGroupBIS_group;
Describe the following Arma 3 code: array=hcSelectedunit;
Describe the following Arma 3 code: playerhcSelectGroup[group_1,group_2];
Describe the following Arma 3 code: unithcSetGroup[group,"HQ","teamred"];
Describe the following Arma 3 code: hcShowBartrue;
Describe the following Arma 3 code: if(hcShownBar)then{hint"HC bar is active";};
Describe the following Arma 3 code: //Examples in-use can be found in://ca\modules\HC\data\scripts\HC_GUI.sqf//A3\modules_f\HC\data\scripts\HC_GUI.sqf
Describe the following Arma 3 code: onGroupIconClick{// passed values for _this are:params["_is3D","_group","_wpID","_posX","_posY","_shift","_ctrl","_alt"];// before Arma 3_is3D=_thisselect0;_group=_thisselect1;_wpID=_thisselect2;_RMB=_thisselect3;_posx=_thisselect4;_posy=_thisselect5;_shift=_thisselect6;_ctrl=_thisselect7;_alt=_thisselect8;_message=format["____ Info ____"];{_message=_message+format["\n %1",_x]}forEach_this;hint_message;};
Describe the following Arma 3 code: onGroupIconOverEnter{// passed values for _this are:params["_is3D","_group","_wpID","_posX","_posY","_shift","_ctrl","_alt"];// before Arma 3_is3D=_thisselect0;_group=_thisselect1;_wpID=_thisselect2;_posx=_thisselect3;_posy=_thisselect4;_shift=_thisselect5;_ctrl=_thisselect6;_alt=_thisselect7;_message=format["____ Info ____"];{_message=_message+format["\n %1",_x]}forEach_this;hint_message;};
Describe the following Arma 3 code: onGroupIconOverLeave{// passed values for _this are:params["_is3D","_group","_wpID","_posX","_posY","_shift","_ctrl","_alt"];// before Arma 3_is3D=_thisselect0;_group=_thisselect1;_wpID=_thisselect2;_posx=_thisselect3;_posy=_thisselect4;_shift=_thisselect5;_ctrl=_thisselect6;_alt=_thisselect7;_message=format["____ Info ____"];{_message=_message+format["\n %1",_x]}forEach_this;hint_message;};
Describe the following Arma 3 code: onHCGroupSelectionChanged{if(_isSelected)then{hintformat["Group %1 has been selected.",_group];}else{hintformat["Group %1 has been deselected.",_group];};};
Describe the following Arma 3 code: _targetremoveGroupIcon(_targetgetvariable"hc_attackicon");
Describe the following Arma 3 code: _targetsetGroupIcon[_icon,"hc_selectedEnemy"];_targetsetGroupIcon[_icon,"flag"];_groupsetGroupIcon[_icon,_iconsClass,_offset];
Describe the following Arma 3 code: _grpsetGroupIconParams[[0.9,0,0,1],"The Group",1.25,false];
Describe the following Arma 3 code: setGroupIconsSelectabletrue;
Describe the following Arma 3 code: setGroupIconsVisible[true,true];(groupplayer)addGroupIcon["b_inf",[0,0]];
Describe the following Arma 3 code: playeraction["SitDown",player];
Describe the following Arma 3 code: _actions=actionIDsplayer;
Describe the following Arma 3 code: actionKeys"Watch";// 24
Describe the following Arma 3 code: actionKeysEx"Watch";// [[[24, "KEYBOARD"], [], false]]
Describe the following Arma 3 code: _text=actionKeysImages"ReloadMagazine";
Describe the following Arma 3 code: _list=actionKeysNames"ReloadMagazine";// "R"
Describe the following Arma 3 code: _actionList=actionKeysNamesArray"ReloadMagazine";
Describe the following Arma 3 code: actionName"ReloadMagazine";// returns "Reload"
Describe the following Arma 3 code: ["","",nil,1.5,true,true,"","",50,false,"","","",""]
Describe the following Arma 3 code: params["_target","_caller","_actionId","_arguments"];
Describe the following Arma 3 code: waitUntil{sleep0.1;commandingMenu=="RscStatus"};hint"Press 4, I'm bleeding !";
Describe the following Arma 3 code: disableUserInputtrue;// cutscenedisableUserInputfalse;
Describe the following Arma 3 code: private_iconWidth=(safeZoneW/2)/getNumber(configFile>>"CfgInGameUI">>"Cursor">>"activeWidth");private_iconHeight=(safeZoneH/2)/getNumber(configFile>>"CfgInGameUI">>"Cursor">>"activeHeight");
Describe the following Arma 3 code: addMissionEventHandler["Draw3D",{drawLaser[eyePosplayervectorAdd[0,0,0.1],getCameraViewDirectionplayer,[1000,0,0],// Bright red[],5,20,-1,false];}];
Describe the following Arma 3 code: onEachFrame{drawLine3D[getPosplayer,getPoscursorTarget,[1,1,1,1]];};
Describe the following Arma 3 code: _forceMapForced=forcedMapselect0;_openMapForced=forcedMapselect1;
Describe the following Arma 3 code: forceMaptrue;
Describe the following Arma 3 code: getUserMFDValuevehicleplayer;// user0 in MFD will return 1
Describe the following Arma 3 code: _selectedUnits=groupSelectedUnitsplayer;
Describe the following Arma 3 code: {playergroupSelectUnit[_x,false];}forEach(groupSelectedUnitsplayer);
Describe the following Arma 3 code: // outputs the following:// Press W to move forward.// Press S to move backwards.hint"Press W to move forward.\nPress S to move backwards."
Describe the following Arma 3 code: hintC"Press W to move forward";
Describe the following Arma 3 code: hintCadet"Press W to move forward";
Describe the following Arma 3 code: hintSilentformat["Hello, %1!",nameplayer];
Describe the following Arma 3 code: HUDMovementLevels;// returns e.g [0,0,0,0,0,0,[0,0,0]]
Describe the following Arma 3 code: params["_target","_caller","_index","_engineName","_text","_priority","_showWindow","_hideOnUse","_shortcut","_visibleMenu","_eventName"];
Describe the following Arma 3 code: inputAction"leanLeft";
Describe the following Arma 3 code: onEachFrame{hintSilentstrinputController13};
Describe the following Arma 3 code: onEachFrame{hintSilentstrinputMouse1};
Describe the following Arma 3 code: if(isActionMenuVisible)then{hint"Scroll menu is opened"};
Describe the following Arma 3 code: playerlinkItem"ItemGPS";private_success=openGPStrue;
Describe the following Arma 3 code: openMaptrue;
Describe the following Arma 3 code: playerremoveAction0;
Describe the following Arma 3 code: removeAllActionsplayer;
Describe the following Arma 3 code: setCompassOscillation[rad90,1,1];
Describe the following Arma 3 code: setHUDMovementLevels[20,30,-1,-1,0.23,2.1,[0,0,0]];
Describe the following Arma 3 code: 1setRadioMsg"Click meeeeeeeeee";//changes title of radio Alpha
Describe the following Arma 3 code: _id=playeraddAction["Hello",""];playersetUserActionText[_id,"Good Bye"];
Describe the following Arma 3 code: BIS_PlanesetUserMFDValue[0,1];// user0 in MFD will return 1
Describe the following Arma 3 code: showCommandingMenu"";
Describe the following Arma 3 code: showCompassfalse;
Describe the following Arma 3 code: showGPStrue;
Describe the following Arma 3 code: showHUDfalse;
Describe the following Arma 3 code: if(shownCompass)then{hint"You have Compass enabled"};
Describe the following Arma 3 code: if(shownGPS)then{hint"You have GPS reciever enabled"};
Describe the following Arma 3 code: _hudStatus=shownHUD;
Describe the following Arma 3 code: if(shownPad)then{hint"You have Notepad enabled."};
Describe the following Arma 3 code: if(shownRadio)then{hint"You have Radio enabled."};
Describe the following Arma 3 code: _state=shownScoretable;
Describe the following Arma 3 code: hintformat["Your ID is %1",["off","on"]selectshownWarrant];
Describe the following Arma 3 code: if(shownWatch)then{hint"You have Watch enabled"};
Describe the following Arma 3 code: showPadfalse;
Describe the following Arma 3 code: showRadiofalse;
Describe the following Arma 3 code: showScoretable1;
Describe the following Arma 3 code: showWarranttrue;
Describe the following Arma 3 code: showWatchfalse;
Describe the following Arma 3 code: disableUserInput!userInputDisabled;
Describe the following Arma 3 code: if(visibleCompass)then{hint"Compass is visible"};
Describe the following Arma 3 code: if(visibleGPS)then{hint"GPS is visible"};
Describe the following Arma 3 code: if(visibleMap)then{hint"You're showing the map !"};
Describe the following Arma 3 code: _visible=visibleScoretable;
Describe the following Arma 3 code: if(visibleWatch)then{hint"Watch is visible"};
Describe the following Arma 3 code: leaderboardDeInit"TT01";
Describe the following Arma 3 code: leaderboardGetRows"TT01";
Describe the following Arma 3 code: leaderboardInit"TT01";
Describe the following Arma 3 code: leaderboardRequestRowsFriends"TT01";
Describe the following Arma 3 code: _isGettingValues=leaderboardRequestRowsGlobal["TT01",0,10];
Describe the following Arma 3 code: _isGettingValues=leaderboardRequestRowsGlobalAroundUser["TT01",-5,10];
Describe the following Arma 3 code: leaderboardsRequestUploadScore["TT01",1234,[5,6,7,8]];
Describe the following Arma 3 code: leaderboardsRequestUploadScoreKeepBest["TT01",1234,[5,6,7,8]];
Describe the following Arma 3 code: leaderboardState"TT01";
Describe the following Arma 3 code: private_apertureParams=apertureParams;
Describe the following Arma 3 code: diag_lightNewLoad"o:\lighting.txt";
Describe the following Arma 3 code: diag_setLightNew"sunOrMoon = 1; diffuse[] = { 0, 0, 0, 0 }; diffuseCloud[] = { 0, 0, 0, 0 }; ambient[] = { 0, 0, 0, 0 }; ... ";
Describe the following Arma 3 code: addMissionEventHandler["Draw3D",{drawLaser[eyePosplayervectorAdd[0,0,0.1],getCameraViewDirectionplayer,[1000,0,0],// Bright red[],5,20,-1,false];}];
Describe the following Arma 3 code: _groupenableGunLightsfalse;
Describe the following Arma 3 code: getLighting;// returns [[0.646753,0.781818,1],28526.2,[-0.0167152,0.211598,-0.977214],0]
Describe the following Arma 3 code: getLightingAtplayer;// returns [[1,1,1], 0.5, [0,0,0], 0]
Describe the following Arma 3 code: _collisionLightOn=isCollisionLightOnheli;
Describe the following Arma 3 code: playerisIRLaserOncurrentWeaponplayer;
Describe the following Arma 3 code: _headlightsOn=isLightOnvehicleplayer;
Describe the following Arma 3 code: myLightlightAttachObject[myVehicle,[-0.5,-0.25,1]];
Describe the following Arma 3 code: lightDetachObject_light;
Describe the following Arma 3 code: if(lightIsOnnearestObject[player,"StreetLamp"]=="ON")then{hint"nightime";};
Describe the following Arma 3 code: setAperture0.3;
Describe the following Arma 3 code: setApertureNew[0.3,0.2,0.1,1];
Describe the following Arma 3 code: helisetCollisionLighttrue;
Describe the following Arma 3 code: myLightsetLightAmbient[0.5,0,0];// produces red light around the origin source
Describe the following Arma 3 code: myLightsetLightAttenuation[2,4,4,0,9,10];
Describe the following Arma 3 code: myLightsetLightBrightness2;
Describe the following Arma 3 code: myLightsetLightColor[0.5,0,0];// produces red
Describe the following Arma 3 code: _lightsetLightConePars[90,45,1];
Describe the following Arma 3 code: myLightsetLightDayLighttrue;
Describe the following Arma 3 code: myLightsetLightFlareMaxDistance500;
Describe the following Arma 3 code: myLightsetLightFlareSize5;
Describe the following Arma 3 code: myLightsetLightIntensity4;
Describe the following Arma 3 code: myLightsetLightIRtrue;// visible with NVG only!
Describe the following Arma 3 code: myLightsetLightUseFlaretrue;
Describe the following Arma 3 code: _lightsetLightVolumeShape["a3\data_f\VolumeLightFlashlight.p3d",[1,1,1]];
Describe the following Arma 3 code: carsetPilotLighttrue;
Describe the following Arma 3 code: (object12345)switchLight"OFF";
Describe the following Arma 3 code: myLocationattachObjectplayer;
Describe the following Arma 3 code: _shortName=classNamemyLocation;
Describe the following Arma 3 code: _location=createLocation["NameVillage",[4035,2151,10],100,100];
Describe the following Arma 3 code: deleteLocationmyLocation;
Describe the following Arma 3 code: playersetDir90;_d=directionplayer;//returns 90
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: _locationImportance=importancemyLocation;
Describe the following Arma 3 code: 1in[0,1,2];// true
Describe the following Arma 3 code: _playerIsInside=playerinArea_myTrigger;
Describe the following Arma 3 code: vehiclesinAreaArraymyTrigger;
Describe the following Arma 3 code: private_players=callBIS_fnc_listPlayers;private_indices=_playersinAreaArrayIndexes_marker;{private_player=_playersselect_x;["You are in the marker!"]remoteExec["hint",_player];}forEach_indices;
Describe the following Arma 3 code: locationNull==locationNull;// falseisNulllocationNull;// truelocationNullisEqualTolocationNull;// true
Describe the following Arma 3 code: _locationPos=locationPositionmyLocation;
Describe the following Arma 3 code: _name=nameplayer;
Describe the following Arma 3 code: _nearestCity=nearestLocation[getPosplayer,"nameCity"];
Describe the following Arma 3 code: _nearbyLocations=nearestLocations[positionplayer,["RockArea","VegetationFir"],100];
Describe the following Arma 3 code: _location=nearestLocationWithDubbingplayer;
Describe the following Arma 3 code: _isRect=rectangularmyLocation;
Describe the following Arma 3 code: _location=createLocation["VegetationPalm",getPosplayer,200,200];_locationsetText"Benargee's Palm Tree";_locationsetDirection45;
Describe the following Arma 3 code: myLocationsetImportance2;
Describe the following Arma 3 code: myLocationsetName"My Location Name";
Describe the following Arma 3 code: myLocationsetPositiongetPosATLplayer;
Describe the following Arma 3 code: myLocationsetRectangulartrue;
Describe the following Arma 3 code: _myLocationsetSideresistance;
Describe the following Arma 3 code: myLocationsetSize[10,30];
Describe the following Arma 3 code: _locationsetSpeech"SomeSpeech";
Describe the following Arma 3 code: myLocationsetText"Rahmadi Village";
Describe the following Arma 3 code: myLocationsetType"RockArea";
Describe the following Arma 3 code: _locSize=sizemyLocation;
Describe the following Arma 3 code: _stxt2=text"Hello world.";
Describe the following Arma 3 code: _locationType=typemyLocation;
Describe the following Arma 3 code: _forceMapForced=forcedMapselect0;_openMapForced=forcedMapselect1;
Describe the following Arma 3 code: forceMaptrue;
Describe the following Arma 3 code: _offset=getElevationOffset;
Describe the following Arma 3 code: getObjectID_tree;
Describe the following Arma 3 code: mapAnimAdd[1,0.1,markerPos"anim1"];mapAnimCommit;
Describe the following Arma 3 code: mapAnimClear;
Describe the following Arma 3 code: mapAnimCommit;
Describe the following Arma 3 code: private_isDone=mapAnimDone;
Describe the following Arma 3 code: _gridPos=mapGridPositionplayer;
Describe the following Arma 3 code: onMapSingleClick"'SoldierWB' createUnit [_pos, group player]; true";
Describe the following Arma 3 code: openMaptrue;
Describe the following Arma 3 code: showMapfalse;
Describe the following Arma 3 code: if(shownMap)then{hint"You have Map enabled"};
Describe the following Arma 3 code: if(visibleMap)then{hint"You're showing the map !"};
Describe the following Arma 3 code: _markers=allMapMarkers;
Describe the following Arma 3 code: _marker=createMarker["markername",player];// Not visible yet._markersetMarkerType"hd_dot";// Visible.
Describe the following Arma 3 code: _marker=createMarkerLocal["Marker1",positionplayer];
Describe the following Arma 3 code: deleteMarker"Marker1";
Describe the following Arma 3 code: deleteMarkerLocal"Marker1";
Describe the following Arma 3 code: "MarkerOne"setMarkerColor"ColorBlack";_color=getMarkerColor"MarkerOne";// returns "ColorBlack"
Describe the following Arma 3 code: _mPos1=getMarkerPos"markerOne";
Describe the following Arma 3 code: "MarkerOne"setMarkerSize[100,200];_size=getMarkerSize"MarkerOne";//returns [100,200]
Describe the following Arma 3 code: if(getMarkerType"Marker1"=="")then{hint"Marker1 is not an icon!"};
Describe the following Arma 3 code: getPlayerIDplayer;
Describe the following Arma 3 code: _playerIsInside=playerinArea_myTrigger;
Describe the following Arma 3 code: vehiclesinAreaArraymyTrigger;
Describe the following Arma 3 code: private_players=callBIS_fnc_listPlayers;private_indices=_playersinAreaArrayIndexes_marker;{private_player=_playersselect_x;["You are in the marker!"]remoteExec["hint",_player];}forEach_indices;
Describe the following Arma 3 code: AlphaMarker=markerAlpha"myMarker";
Describe the following Arma 3 code: if(markerBrush"Marker1"=="Solid")then{hint"Marker1 is solid!"};
Describe the following Arma 3 code: markerChannel"marker_1";
Describe the following Arma 3 code: if(markerColor"Marker1"=="ColorRed")then{hint"Marker1 is red!"};
Describe the following Arma 3 code: _mPos=markerDir"markerOne";
Describe the following Arma 3 code: markerDrawPriority"MarkerOne"
Describe the following Arma 3 code: markerPolyline"_USER_DEFINED #0/0/1";// returns your first polyline's data in Singleplayer
Describe the following Arma 3 code: _mPos1=markerPos"markerOne";
Describe the following Arma 3 code: private_shadowEnabled=markerShadow_myMarker;
Describe the following Arma 3 code: if(markerShape"Marker1"=="RECTANGLE")then{hint"Marker1 is a rectangle!"};
Describe the following Arma 3 code: _mSize=markerSize"Marker1";
Describe the following Arma 3 code: hintformat["Marker Text: %1",markerText"Marker1"];
Describe the following Arma 3 code: if(markerType"Marker1"=="")then{hint"Marker1 is not an icon!"};
Describe the following Arma 3 code: "my_marker"setMarkerAlpha0.5;
Describe the following Arma 3 code: "my_marker"setMarkerAlphaLocal0.5;
Describe the following Arma 3 code: "Marker1"setMarkerBrush"DIAGGRID";
Describe the following Arma 3 code: "Marker1"setMarkerBrushLocal"DiagGrid";
Describe the following Arma 3 code: "MarkerOne"setMarkerColor"ColorBlack";
Describe the following Arma 3 code: "MarkerOne"setMarkerColorLocal"ColorBlack";
Describe the following Arma 3 code: "Marker1"setMarkerDir90;
Describe the following Arma 3 code: "Marker1"setMarkerDirLocal90;
Describe the following Arma 3 code: "MarkerOne"setMarkerDrawPriority0.5;
Describe the following Arma 3 code: countpath>=4&&countpathmod2==0;// true → valid path
Describe the following Arma 3 code: "marker_1"setMarkerShape"polyline";private_return=[];for"_i"from0to100step0.1do{_returnpushBack(_i+getPosplayer#0);_returnpushBack((sin(_i*10))*10+getPosplayer#1);};"marker_1"setMarkerPolylineLocal_return;
Describe the following Arma 3 code: "MarkerOne"setMarkerPosgetMarkerPos"MarkerTwo";
Describe the following Arma 3 code: "MarkerOne"setMarkerPosLocalgetMarkerPos"MarkerTwo";
Describe the following Arma 3 code: _myMarkersetMarkerShadowtrue;// enable shadow
Describe the following Arma 3 code: _myMarkersetMarkerShadowLocaltrue;// enable shadow
Describe the following Arma 3 code: "Marker1"setMarkerShape"RECTANGLE";
Describe the following Arma 3 code: "Marker1"setMarkerShapeLocal"RECTANGLE";
Describe the following Arma 3 code: "MarkerOne"setMarkerSize[100,200];
Describe the following Arma 3 code: "MarkerOne"setMarkerSizeLocal[100,200];
Describe the following Arma 3 code: "Marker1"setMarkerText"You are here.";
Describe the following Arma 3 code: "Marker1"setMarkerTextLocal"You are here.";
Describe the following Arma 3 code: "MarkerOne"setMarkerType"Warning";
Describe the following Arma 3 code: "MarkerOne"setMarkerTypeLocal"Warning";
Describe the following Arma 3 code: private_isAlive=aliveplayer;if(!_isAlive)then{hint"The player is dead!";};
Describe the following Arma 3 code: 5+3// returns  8-5+-3// returns -8
Describe the following Arma 3 code: _result=10-7;// result is 3
Describe the following Arma 3 code: if(_counter!=4)then{hint"The counter is not equal to the number 4";};
Describe the following Arma 3 code: 4.5%3// result is 1.5
Describe the following Arma 3 code: private_allEnemiesKilled=true;if(aliveplayer&&_allEnemiesKilled)then{hint"you win !";};
Describe the following Arma 3 code: _percentage=0.5*100;
Describe the following Arma 3 code: _result=15/3;// result is 5
Describe the following Arma 3 code: if(player==leadergroupplayer)then{hint"You are the leader of your group.";}else{hint"Someone else is the boss";};
Describe the following Arma 3 code: if(fueltruck1>0)then{hint"Truck1 has some fuel left.";};
Describe the following Arma 3 code: if(fueltruck1>=0.5)then{hint"Truck1 has at least half a tank of fuel left."};
Describe the following Arma 3 code: _test=1<2;// true
Describe the following Arma 3 code: if(fueltruck1<=0)then{hint"Truck1 has no fuel left."};
Describe the following Arma 3 code: if(OBJ1||_enemycount==0)then{hint"you win !"};
Describe the following Arma 3 code: 5^2// 5², result is 25
Describe the following Arma 3 code: _n=abs-3;// Returns 3
Describe the following Arma 3 code: if((notisNullplayer)and(aliveplayer)and(_enemycount==0))then{hint"you win !";};
Describe the following Arma 3 code: for"_i"from0to1step0.05do{createVehicle["Sign_Sphere10cm_F",(_ibezierInterpolation[playermodelToWorld[0,0,0],playermodelToWorld[0,2,2],playermodelToWorld[2,0,2],playermodelToWorld[0,0,4]]),[],0,"CAN_COLLIDE"];};
Describe the following Arma 3 code: ceil5.25;// Result is 6
Describe the following Arma 3 code: decayGraphValues[[1,2,3,4,5],[1,4,9,16,25],0.3];// returns [1,2,3,4.8,7.5]
Describe the following Arma 3 code: _e=exp1;// Returns e (2.7182...)
Describe the following Arma 3 code: _var=false;systemChatstr_var;// false
Describe the following Arma 3 code: finite123;// returns true
Describe the following Arma 3 code: floor5.1;// result is  5floor5.999;// result is  5floor-2.01;// result is -3floor-2.99;// result is -3
Describe the following Arma 3 code: private_minX=0;private_maxX=10;private_minY=0;private_maxY=100;private_count=11;private_random=0;getGraphValues[[_minX,_maxX,_minY,_maxY,_count,_random],0,5,1,10,2,100,3,50,4,30,5,100,6,10,7,50,8,75,9,100,10,100];/*
	returns [[0.05, 0.1, 1, 0.5, 0.3, 1, 0.1, 0.5, 0.75, 1, 1], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]
	supposedly [array of 1-based Y values, array of X values]
*/
Describe the following Arma 3 code: // Say given range is 0 to 1 and wanted range is 0 to 100 (percent calculation). Given value 0.55 then will be 55linearConversion[0,1,0.55,0,100];// but if given value is 1.1 it will return 110linearConversion[0,1,1.1,0,100,false];// or if clipping is true it will return 100linearConversion[0,1,1.1,0,100,true];
Describe the following Arma 3 code: _nlog=ln10;
Describe the following Arma 3 code: _log=log10;
Describe the following Arma 3 code: [[2],[2]]matrixMultiply[[3]]/* returns
[
	[6],
	[6]
] */
Describe the following Arma 3 code: matrixTranspose[[1,2,3],[3,1,2],[2,3,1]];/* returns
[
	[1,3,2],
	[2,1,3],
	[3,2,1]
] */
Describe the following Arma 3 code: 3max2;// Result is 3
Describe the following Arma 3 code: 3min2// Result is 2
Describe the following Arma 3 code: _remaining=5mod2;// returns 1, as 5 divided by 2 is 2 &times; 2 + 1
Describe the following Arma 3 code: notfalse;// returns true
Describe the following Arma 3 code: if(_obj1or(_enemycount==0)or(notalive_enemyGeneral))then{hint"you win !";};
Describe the following Arma 3 code: _rNumber=random1;
Describe the following Arma 3 code: round5.25;// returns 5
Describe the following Arma 3 code: private_squareRoot=sqrt9;// returns 3
Describe the following Arma 3 code: 123toFixed2;// "123.00"
Describe the following Arma 3 code: _var=true;systemChatstr_var;// trueif(_var)then{hint"_var is true!";};
Describe the following Arma 3 code: playeraddOwnedMine_superMine;
Describe the following Arma 3 code: hintformat["there are %1 mines total",countallMines];
Describe the following Arma 3 code: _mine=createMine["APERSMine",ASLToAGLgetPosASLplayer,[],3];
Describe the following Arma 3 code: detectedMineswest;
Describe the following Arma 3 code: _mines=getAllOwnedMinesplayer;
Describe the following Arma 3 code: if(mineActive_mine)then{hint"BOOM!"};
Describe the following Arma 3 code: (allMinesselect0)mineDetectedBywest;
Describe the following Arma 3 code: removeAllOwnedMinesplayer;
Describe the following Arma 3 code: playerremoveOwnedMineSuperMine;
Describe the following Arma 3 code: westrevealMine_mine;
Describe the following Arma 3 code: activateKey"Mission04Key";
Describe the following Arma 3 code: dayTime;// returns 16.5 given it is 16:30 (4.30pm) in game
Describe the following Arma 3 code: deActivateKey"Mission04Key";
Describe the following Arma 3 code: enableEndDialog;
Describe the following Arma 3 code: enableSavingfalse;// saving disabled, does autosave - same as [false, true]enableSavingtrue;// saving enabled, does not autosave - same as [true, false]enableSaving[false,false];// saving disabled, does not autosaveenableSaving[false,true];// saving disabled, does autosaveenableSaving[true,false];// saving enabled, doesn't autosaveenableSaving[true,true];// saving enabled, does autosave
Describe the following Arma 3 code: endMission"END1";
Describe the following Arma 3 code: _min=(ceil(estimatedEndServerTime-serverTime)/60);
Describe the following Arma 3 code: estimatedTimeLeft600;// 10 min
Describe the following Arma 3 code: failMission"LOSER";
Describe the following Arma 3 code: forceEnd;// in an ending trigger to ensure no camera is delaying mission ending
Describe the following Arma 3 code: _header=getMissionConfig"Header";
Describe the following Arma 3 code: _respawnDelay=getMissionConfigValue["respawnDelay",0];
Describe the following Arma 3 code: _usedDLCs=getMissionDLCs;// returns e.g ["Orange","Enoch","Expansion","Heli","Contact","Mark","Argo","Jets"]
Describe the following Arma 3 code: private_base=getMissionLayerEntities"Base";
Describe the following Arma 3 code: getMissionLayers;// ["Electronics","Camp Endurance","UGV Workstation","Comments","Extraction Air","Comments","Extraction Ground","Extraction","test"]
Describe the following Arma 3 code: // returns e.g "C:\Users\Username\Documents\Arma 3\missions\MissionName.Altis\icons\myIcon.paa"private_path=getMissionPath"icons\myIcon.paa";private_path=getMissionPath"\icons\myIcon.paa";// leading \ is also fine
Describe the following Arma 3 code: ;iftestingonEveron,getWorldwillreturn"eden"hintgetWorld
Describe the following Arma 3 code: _active=isKeyActive"Mission04Key";
Describe the following Arma 3 code: []spawn{saveGame;waitUntil{!isSaving};systemChat"Game Saving Is Done!";};
Describe the following Arma 3 code: if(isSteamMission)then{hint"Thank you for subscribing to my mission on Steam!";}else{hint"Thank you for downloading my mission off the Internet!";};
Describe the following Arma 3 code: campaignConfigFile>>"Campaign"/<battle>/<mission>/"lives"
Describe the following Arma 3 code: _ok=playerloadStatus"playerState";
Describe the following Arma 3 code: markAsFinishedOnSteam;endMission"END1";
Describe the following Arma 3 code: private_number=missionDifficulty;
Describe the following Arma 3 code: private_endInfo=missionEnd;
Describe the following Arma 3 code: hintformat["You are playing mission ""%1""",missionName];
Describe the following Arma 3 code: hintformat["You are playing mission ""%1""",missionNameSource];
Describe the following Arma 3 code: setDate(missionStartselect[0,5]);
Describe the following Arma 3 code: _version=missionVersion;
Describe the following Arma 3 code: saveGame;
Describe the following Arma 3 code: playersaveStatus"playerstate";
Describe the following Arma 3 code: if(savingEnabled)then{hint"Saving is enabled!";};
Describe the following Arma 3 code: myPlaces=selectBestPlaces[positionplayer,50,"meadow + 2*hills",1,5];
Describe the following Arma 3 code: hintformat["Synced server time : %1",serverTime];
Describe the following Arma 3 code: setDate[1986,2,25,16,0];// 4:00pm February 25, 1986
Describe the following Arma 3 code: setTimeMultiplier60;
Describe the following Arma 3 code: private_future=time+30;waitUntil{time>=_future};// continue after 30 seconds
Describe the following Arma 3 code: _multiplier=timeMultiplier;
Describe the following Arma 3 code: private_name=worldName;
Describe the following Arma 3 code: private_size=worldSize;
Describe the following Arma 3 code: activateAddons["BISOFP"];
Describe the following Arma 3 code: _addons=activatedAddons;
Describe the following Arma 3 code: addonFiles["a3\3den\",".paa"];/*
	[
		"a3\3den\data\attributes\formation\ech_left_ca.paa",
		"a3\3den\data\attributes\formation\stag_column_ca.paa",
		"a3\3den\data\attributes\stance\down_ca.paa",
		"a3\3den\data\cfg3den\layer\icondisabled_ca.paa",
		"a3\3den\data\controlsgroups\diagmousecontrol\mouse_ca.paa",
		...
	]
*/
Describe the following Arma 3 code: allAddonsInfo/*
	[
		["bin\","146398",false],
		["core\","129618",false],
		["Languagecore_F\","148726",false],
		["a3\air_f_enoch\","145904",false],
		["a3\anims_f_enoch\","146917",false],
		["a3\armor_f_enoch\","145904",false],
		...
	]
*/
Describe the following Arma 3 code: _addons=configSourceAddonList(configFile>>"CfgVehicles">>"Man");// returns ["A3_Data_F", "A3_Characters_F", "A3_Data_F_Curator", "A3_Air_F_Heli"]
Describe the following Arma 3 code: configSourceMod(configFile>>"CfgVehicles">>"Heli_Transport_04_base_F");// returns "heli"
Describe the following Arma 3 code: _mods=configSourceModList(configFile>>"CfgVehicles">>"Man");hintstr_mods;// ["A3","curator","heli"]
Describe the following Arma 3 code: private_loadedMods=getLoadedModsInfo;/*
	[
		["dummy","dummy",false,false,"NOT FOUND","","","0"],
		["CUP Units DEV Version r710 (r710-r710 UNITSSVN) (12|Jun|2020)","@[DEV] CUP Units",false,false,"GAME DIR","f3fb8a4c62443ac799c7c0e00f645b1f32cf1376","c96577b4",0],
		["CUP Weapons DEV Version r1486 (r1481-r1486 WEAPONSSVN) (12|Jun|2020)","@[DEV] CUP Weapons",false,false,"GAME DIR","6dbd7c052ce2ae68803e10f6a3653d0b046881d8","bb1c4965",0],
		["Community Base Addons v3.15.1","@CBA_A3",false,false,"GAME DIR","33eef5c0ed583d1222319460b184090513193287","131bbb64",0],
		["Arma 3 Contact (Platform)","enoch",true,true,"GAME DIR","4298e892077aec33be6b68730a974400a3c3a636","43e900ae","1021790"],
		["Arma 3 Tanks","tank",true,true,"GAME DIR","c47d45d7ce1261e0a0d1c4ed9517611eae6ebf9f","1aec74ec","798390"],
		["Arma 3 Tac-Ops","tacops",true,true,"GAME DIR","808cc67221feadc288c856395cac28b908966eee","441362c6","744950"],
		["Arma 3 Laws of War","orange",true,true,"GAME DIR","aa86785568206ae1e7becaa09eb673ee645d971f","4729aa84","571710"],
		["Arma 3 Malden","argo",true,true,"GAME DIR","db6d4d06a3ad28207da665e8c34bbd8adf191019","61001811","639600"],
		["Arma 3 Jets","jets",true,true,"GAME DIR","8e8e1f9275e37cc90c0f2a8a6901dd2a3e81a29a","fc8366ee","601670"],
		["Arma 3 Apex","expansion",true,true,"GAME DIR","48f32952612dbb6ca972790c17c9920797073233","fc4aed7f","395180"],
		["Arma 3 Marksmen","mark",true,true,"GAME DIR","85c7f2284f8b0271bfafecd96c49230ce0515861","534e5baa","332350"],
		["Arma 3 Helicopters","heli",true,true,"GAME DIR","dae29688657dbc9057f9eb83179a3ad21d3a689d","e7165098","304380"],
		["Arma 3 Karts","kart",true,true,"GAME DIR","eae9e0b218e7a8e8e906477ee1a5e8e3d5298f18","8240ae3f","288520"],
		["Arma 3 Zeus","curator",true,true,"GAME DIR","2310c5c95a558253c7286d93f5a2a810fbf9b620","8af0db5d","275700"],
		["Arma 3","A3",true,true,"NOT FOUND","","","0"]
	]
*/
Describe the following Arma 3 code: _data=modParams["Kart",["name","logo","picture"]];
Describe the following Arma 3 code: hintstrunitAddonstypeOfplayer;//["A3_Characters_F_BLUFOR"]
Describe the following Arma 3 code: verifySignature"@MyAddon\Addons\SomeAddon.pbo";
Describe the following Arma 3 code: _index=playeraddMPEventHandler["MPKilled",{_thisexecVM"playerKilled.sqf";}];
Describe the following Arma 3 code: playeraddPlayerScores[0,1,0,0,1];
Describe the following Arma 3 code: "publicThis"addPublicVariableEventHandler{hintformat["%1 has been updated to: %2",_thisselect0,_thisselect1]};
Describe the following Arma 3 code: unitaddScore10;
Describe the following Arma 3 code: westaddScoreSide10;
Describe the following Arma 3 code: private_isLoggedInAdmin=admin3==2;
Describe the following Arma 3 code: private_players=allPlayers-entities"HeadlessClient_F";
Describe the following Arma 3 code: if(isServer)then{private_allUserIDs=allUsers;for"_i"from0to(count_allUserIds-1)do{diag_logformat["User #%1 ID: %2",_i+1,_allUserIdsselect_i];};};
Describe the following Arma 3 code: private_myNetworkId=clientOwner;
Describe the following Arma 3 code: clientDidJIP=didJIP;
Describe the following Arma 3 code: _ownerDidJip=didJIPOwnertank;
Describe the following Arma 3 code: disableRemoteSensorstrue;
Describe the following Arma 3 code: _min=(ceil(estimatedEndServerTime-serverTime)/60);
Describe the following Arma 3 code: estimatedTimeLeft600;// 10 min
Describe the following Arma 3 code: exportJIPMessages"myFileNameWithoutExtension";
Describe the following Arma 3 code: forceRespawnplayer;
Describe the following Arma 3 code: _state=getClientState;
Describe the following Arma 3 code: _state=getClientStateNumber;
Describe the following Arma 3 code: getPlayerIDplayer;
Describe the following Arma 3 code: getPlayerScoresBIS_player1;
Describe the following Arma 3 code: private_uid=getPlayerUIDplayer;
Describe the following Arma 3 code: _uid=getPlayerUIDOldplayer;
Describe the following Arma 3 code: private_randomUserInfo=getUserInfoselectRandomallUsers;
Describe the following Arma 3 code: private_variable=myTruckgetVariable"myVariable";// returns nil if "myVariable" is not set
Describe the following Arma 3 code: _group=groupFromNetId"4:45";
Describe the following Arma 3 code: _clientID=groupOwner_someGroup;
Describe the following Arma 3 code: _isHC=!(hasInterface||isDedicated);
Describe the following Arma 3 code: hostMission[configFile>>"CfgMissions">>"MPMissions">>_scenarioClassName,_currentlyActiveDisplay];
Describe the following Arma 3 code: if(isDedicated)then{diag_log"Dedicated Server on the run !";};
Describe the following Arma 3 code: if(isMultiplayer)then{// ...block}
Describe the following Arma 3 code: _state=isMultiplayerSolo;
Describe the following Arma 3 code: if(isPlayer_Soldier1)then{_soldier1setDamage1;};
Describe the following Arma 3 code: private_remoteExecuted=isRemoteExecuted;
Describe the following Arma 3 code: _remoteExecutedJIP=isRemoteExecutedJIP;
Describe the following Arma 3 code: if(!isServer)exitWith{};
Describe the following Arma 3 code: if(notlocal_unit)then{hintformat["%1 is remote",name_unit];};
Describe the following Arma 3 code: localNamespacesetVariable["abc",123];
Describe the following Arma 3 code: _handle=logNetwork["myLog.txt",[""]];
Describe the following Arma 3 code: logNetworkTerminate_someHandle;
Describe the following Arma 3 code: _playerNetId=netIdplayer;
Describe the following Arma 3 code: objectFromNetId"2:3"
Describe the following Arma 3 code: onPlayerConnected"[_id, _name] execVM 'PlayerConnected.sqf';";
Describe the following Arma 3 code: onPlayerDisconnected{diag_log[_id,_uid,_name]};
Describe the following Arma 3 code: _clientID=owner_someobject;
Describe the following Arma 3 code: _maxBluforPlayers=playableSlotsNumberblufor;
Describe the following Arma 3 code: {_xgroupChat"I'm a playable unit.";}forEachplayableUnits;
Describe the following Arma 3 code: waitUntil{playerRespawnTime<=0};
Describe the following Arma 3 code: _west=playersNumberwest;_east=playersNumbereast;_civ=playersNumbercivilian;hintformat["West:%1 East:%2, Civ:%3",_west,_east,_civ];
Describe the following Arma 3 code: TAG_MyPublicVariable=0;TAG_MyPublicVariable=1;publicVariable"TAG_MyPublicVariable";// other clients will receive the "TAG_MyPublicVariable" variable with a 1 valueTAG_MyPublicVariable=2;// needs to be broadcast again - synchronisation is not automatic
Describe the following Arma 3 code: 3publicVariableClient"CTFscoreOne";
Describe the following Arma 3 code: publicVariableServer"CTFscoreOne";
Describe the following Arma 3 code: "message"remoteExec["hint",0];// sends a hint message to everyone, identical to "message" remoteExec ["hint"]"message"remoteExec["hint",-2];// sends a hint message to everybody but the server"message"remoteExec["hint",myCar];// sends a hint message where myCar is local"message"remoteExec["hint",-clientOwner];// sends a hint message to everybody but the current machine
Describe the following Arma 3 code: ["hello"]remoteExec["hint"];// runs unscheduled["hello"]remoteExecCall["hint"];// no difference at all
Describe the following Arma 3 code: private_callerRE=remoteExecutedOwner;
Describe the following Arma 3 code: playerremoveAllMPEventHandlers"MPKilled";
Describe the following Arma 3 code: playerremoveMPEventHandler["MPKilled",0];
Describe the following Arma 3 code: removeSwitchableUnit_unit1;
Describe the following Arma 3 code: carrespawnVehicle[5,3];// 'car' will respawn at the predefined marker for the side after 5 seconds. The unit will respawn 3 times.
Describe the following Arma 3 code: _playerRole=roleDescriptionplayer;
Describe the following Arma 3 code: _pScore=scoreplayer;
Describe the following Arma 3 code: _number=scoreSidewest;
Describe the following Arma 3 code: selectPlayerbob;
Describe the following Arma 3 code: sendAUMessage[[dpnid1,dpnid2],"ConnectTo: 192.168.1.66"];
Describe the following Arma 3 code: _bool=sendUDPMessage["192.168.0.1",2302,"Here goes you message..."];
Describe the following Arma 3 code: serverCommand"#logout";
Describe the following Arma 3 code: _can=serverCommandAvailable"#kick";
Describe the following Arma 3 code: _canKick=serverCommandAvailable"#kick";
Describe the following Arma 3 code: hintformat["Welcome to the %1 server!",serverName];
Describe the following Arma 3 code: private_serverVars=allVariablesserverNamespace;
Describe the following Arma 3 code: hintformat["Synced server time : %1",serverTime];
Describe the following Arma 3 code: _localityChanged=_someGroupsetGroupOwner(owner_playerObject);
Describe the following Arma 3 code: _someObjectsetOwner12;
Describe the following Arma 3 code: setPlayable_aPerson;
Describe the following Arma 3 code: setPlayerRespawnTime5;
Describe the following Arma 3 code: _myTrucksetVariable["TAG_myPublicVariable",123,true];
Describe the following Arma 3 code: _availableUnits=switchableUnits;
Describe the following Arma 3 code: _allVarsUINamespace=allVariablesuiNamespace;
Describe the following Arma 3 code: if(currentNamespaceisEqualTouiNamespace)then{hint"This is uiNamespace"};
Describe the following Arma 3 code: _display=findDisplay46;_displayspawn{hintstr_this;};// would raise a serialization error[_display]spawn{hintstr(_thisselect0);};// OK
Describe the following Arma 3 code: private_variable=myTruckgetVariable"myVariable";// returns nil if "myVariable" is not set
Describe the following Arma 3 code: private_isLoaded=isMissionProfileNamespaceLoaded;
Describe the following Arma 3 code: localNamespacesetVariable["abc",123];
Describe the following Arma 3 code: missionNamespacesetVariable["StringVariable","myString"];// same as: StringVariable = "myString";_myStringValue=missionNamespacegetVariable"StringVariable";hint_myStringValue;// hints "myString"
Describe the following Arma 3 code: private_currentMissionProfileNamespace=missionProfileNamespace;
Describe the following Arma 3 code: parsingNamespacesetVariable["var1",101.23124];_profVar1=parsingNamespacegetVariable"var1";
Describe the following Arma 3 code: profileNamespacesetVariable["TAG_kills",10000];// somewhere else in the code_kills=profileNamespacegetVariable["TAG_kills",0];
Describe the following Arma 3 code: saveMissionProfileNamespace;
Describe the following Arma 3 code: profileNamespacesetVariable["TAG_lastPlayerLocation",getPosASLplayer];saveProfileNamespace;// Optional since namespace is saved when game is closed
Describe the following Arma 3 code: private_serverVars=allVariablesserverNamespace;
Describe the following Arma 3 code: _myTrucksetVariable["TAG_myPublicVariable",123,true];
Describe the following Arma 3 code: uiNamespacesetVariable["LIB_interruptDisplay",_display];
Describe the following Arma 3 code: ]spawn{withuiNamespacedo{for"_i"from1to1do{systemChatstr[currentNamespaceisEqualTouiNamespace,currentNamespaceisEqualTomissionNamespace];// result [true, false]sleep0.05;// <-- small suspensionsystemChatstr[currentNamespaceisEqualTouiNamespace,currentNamespaceisEqualTomissionNamespace];// result [false, true] <-- switching};};};
Describe the following Arma 3 code: {agent_xmoveTopositionplayer}forEachagents;
Describe the following Arma 3 code: _allCuratorLogics=allCurators;
Describe the following Arma 3 code: {deleteVehicle_x}forEachallDead;
Describe the following Arma 3 code: {deleteVehicle_x}forEachallDeadMen;
Describe the following Arma 3 code: {leader_xsideChat"Go ! Go ! Go !"}forEachallGroups;
Describe the following Arma 3 code: _airObjects=allMissionObjects"Air";
Describe the following Arma 3 code: private_visitorBuildings=1allObjects0;
Describe the following Arma 3 code: private_players=allPlayers-entities"HeadlessClient_F";
Describe the following Arma 3 code: private_boxesAndChairs=allSimpleObjects["Box_NATO_Equip_F","Land_CampingChair_V2_F"];
Describe the following Arma 3 code: {_xsetDamage0.5;_xgroupChat"Braaains";}forEachallUnits;
Describe the following Arma 3 code: hintformat["Number of UAV(s) on the map: %1",countallUnitsUAV];
Describe the following Arma 3 code: if(isServer)then{private_allUserIDs=allUsers;for"_i"from0to(count_allUserIds-1)do{diag_logformat["User #%1 ID: %2",_i+1,_allUserIdsselect_i];};};
Describe the following Arma 3 code: _num=playercountEnemylist_triggerOne;
Describe the following Arma 3 code: _num=westcountSidelist_triggerOne;
Describe the following Arma 3 code: _count="Tank"countTypelist_triggerOne;
Describe the following Arma 3 code: hintstr[getModelInfocursorObject,typeOfcursorObject];
Describe the following Arma 3 code: alivecursorTarget;
Describe the following Arma 3 code: _allcars=entities"Car";
Describe the following Arma 3 code: _myNearestEnemy=(units_myGroupselect0)findNearestEnemyplayer;
Describe the following Arma 3 code: hintstrgetCursorObjectParams;
Describe the following Arma 3 code: private_randomUserInfo=getUserInfoselectRandomallUsers;
Describe the following Arma 3 code: _list=playernearEntities20;_list=ASLToAGLgetPosASLplayernearEntities50;_list=playernearEntities["Man",1000];_list=ASLToAGLgetPosASLplayernearEntities["LaserTarget",3000];_list=playernearEntities[["Car","Motorcycle","Tank"],50];_list=ASLToAGLgetPosASLplayernearEntities[["Man","Air","Car","Motorcycle","Tank"],200];
Describe the following Arma 3 code: _nBuilding=nearestBuildingplayer;
Describe the following Arma 3 code: nearestMines[player,["MineBase"],20];
Describe the following Arma 3 code: _nObject=nearestObject[2345,6789];_nObject=nearestObject[player,"StreetLamp"];
Describe the following Arma 3 code: nearestObjects[player,["Car","Tank"],200];
Describe the following Arma 3 code: nearestTerrainObjects[player,["Tree","Bush"],200];
Describe the following Arma 3 code: _list=positionplayernearObjects50;
Describe the following Arma 3 code: _twnposnearObjectsReady500;//from ALICE
Describe the following Arma 3 code: _list=playernearRoads50;
Describe the following Arma 3 code: _list=playernearSupplies50;
Describe the following Arma 3 code: playernearTargets100;// can return e.g/*
	[
		[[2555.33,2535.33,1.32708],"SoldierEB",EAST,214222,EAST 1-1-A:1],
		[[2550.39,2482.5,1.32696],"SoldierWB",WEST,0,WEST 1-1-A:2]
	]
*/
Describe the following Arma 3 code: _object=object1;
Describe the following Arma 3 code: {_xgroupChat"I'm a playable unit.";}forEachplayableUnits;
Describe the following Arma 3 code: _availableUnits=switchableUnits;
Describe the following Arma 3 code: private_targets=_unittargets[false,300,[east,sideEnemy]];// all targets of east or renegade side in 300m
Describe the following Arma 3 code: _targets=playertargetsQuery[objNull,sideUnknown,"",[],0];
Describe the following Arma 3 code: _myUnitCount=countunitsplayer;
Describe the following Arma 3 code: _allOnGroudUnits=groupplayerunitsBelowHeight10;
Describe the following Arma 3 code: _vehicles=vehicles;
Describe the following Arma 3 code: _objectaddForce[[0,1000,0],[1,0,0]];
Describe the following Arma 3 code: playeraddPlayerScores[0,1,0,0,1];
Describe the following Arma 3 code: playeraddRating2000;
Describe the following Arma 3 code: addToRemainsCollector[unit1,unit2,vehicle1];
Describe the following Arma 3 code: onEachFrame{quadaddTorque(quadvectorModelToWorld[100,0,0])};
Describe the following Arma 3 code: _grpaddVehicle_vehicle;
Describe the following Arma 3 code: _aimingQuality=heliaimedAtTarget[target];
Describe the following Arma 3 code: private_throttle=airplaneThrottleobjectParentplayer;
Describe the following Arma 3 code: AISFinishHeal[_wounded,_medic,true];
Describe the following Arma 3 code: ?notaliveplayer:exit
Describe the following Arma 3 code: allLODsplayer;/*
	[
		[0,"1",1,91],
		[1,"2",2,91],
		[2,"3",3,84],
		[3,"4",4,43],
		[4,"5",5,34],
		[5,"VIEW_PILOT",1100,89],
		[6,"shadow(0)",10000,80],
		[7,"shadow(10)",10010,33],
		[8,"geometry",1e+013,42],
		[9,"memory",1e+015,55],
		[10,"landContact",2e+015,0],
		[11,"hitpoints",5e+015,33],
		[12,"geometryView",6e+015,19],
		[13,"geometryFire",7e+015,57],
		[14,"shadow(1000)",11000,80],
		[15,"shadow(1010)",11010,33]
	]
*/
Describe the following Arma 3 code: _vehicleallowCrewInImmobiletrue;
Describe the following Arma 3 code: playerallowDamagefalse;
Describe the following Arma 3 code: playerallowDammagefalse;
Describe the following Arma 3 code: if(allowedService_vehicle==-1)then{hint"this is not a service vehicle!"};
Describe the following Arma 3 code: _group1allowFleeing0;
Describe the following Arma 3 code: [_soldier1,_soldier2]allowGetIntrue;
Describe the following Arma 3 code: ammoTruckallowService0;
Describe the following Arma 3 code: _list=assignedCargo_vehicleName;
Describe the following Arma 3 code: _commander=assignedCommandervehicleName;
Describe the following Arma 3 code: _driver=assignedDrivervehicleName;
Describe the following Arma 3 code: _gunner=assignedGunnervehicleplayer;
Describe the following Arma 3 code: _target=assignedTarget_T72;
Describe the following Arma 3 code: _team=assignedTeamplayer;
Describe the following Arma 3 code: _vehicle=assignedVehicleplayer;
Describe the following Arma 3 code: _RoleArray=assignedVehicleRoleplayer;
Describe the following Arma 3 code: _locAttachedObj=attachedObjectmyLocation;
Describe the following Arma 3 code: {detach_x;}forEachattachedObjectsplayer;
Describe the following Arma 3 code: if(isNullattachedTo_obj1)then{hint"_obj1 is not attached to anything.";};
Describe the following Arma 3 code: myLocationattachObjectplayer;
Describe the following Arma 3 code: playerattachTo[car,[0,0,1]];
Describe the following Arma 3 code: _objectawakefalse;
Describe the following Arma 3 code: private_box=boundingBox_abrams;
Describe the following Arma 3 code: private_bbr=boundingBoxRealvehicleplayer;private_p1=_bbrselect0;private_p2=_bbrselect1;private_maxWidth=abs((_p2select0)-(_p1select0));private_maxLength=abs((_p2select1)-(_p1select1));private_maxHeight=abs((_p2select2)-(_p1select2));
Describe the following Arma 3 code: _center=boundingCenterTruckOne;
Describe the following Arma 3 code: if!(brakesDisabled_vehicle)then{disableBrakes_vehicle;};
Describe the following Arma 3 code: _buildingbuildingExit0;
Describe the following Arma 3 code: isNil{calculatePath["man","safe",_startPos,_endPos]addEventHandler["PathCalculated",{hintstr_this}]};
Describe the following Arma 3 code: if(notcanMove_tank)then{playersideChat"He's nailed on the ground! Now hurry!";};
Describe the following Arma 3 code: ?(notcanStandplayer):playergroupChat"My legs! They hit my legs!"
Describe the following Arma 3 code: if(canUnloadInCombat_vehicle)then{hint"unload in combat is possible!"};
Describe the following Arma 3 code: if(captive_general)then{removeAllWeapons_general;};
Describe the following Arma 3 code: _captivity=captiveNum_unit;
Describe the following Arma 3 code: _tank1setVehicleInit"hint 'hi all'";processInitCommands;clearVehicleInit_tank1;
Describe the following Arma 3 code: private_collisionInfo=collisionDisabledWith_tank;
Describe the following Arma 3 code: moveOutcommander_tank;
Describe the following Arma 3 code: private_agent=createAgent["B_Soldier_F",getPosATLplayer,[],0,"NONE"];
Describe the following Arma 3 code: private_pos=playergetRelPos[10,0];private_tank=createSimpleObject["a3\armor_f_beta\apc_tracked_01\apc_tracked_01_rcws_f.p3d",_pos];_tanksetPos(_posvectorAdd(getPosWorld_tankvectorDiff(_tankmodelToWorld[0,0,0])));_tankhideSelection["zasleh",true];_tankhideSelection["zasleh2",true];_tankhideSelection["clan",true];_tankanimate["Wheel_podkoloL3",0.5,true];_tankanimate["Wheel_podkoloL6",0.5,true];
Describe the following Arma 3 code: private_hasCargo={isNull(_xselect0)}count(fullCrew[_veh,"cargo",true])>0;
Describe the following Arma 3 code: private_vehicle="C_Offroad_01_F"createVehiclepositionplayer;_vehiclesetVariable["BIS_enableRandomization",false];
Describe the following Arma 3 code: _veh=createVehicle["B_MRAP_01_F",getMarkerPos"createVeh",[],0,"NONE"];createVehicleCrew_veh;
Describe the following Arma 3 code: _lightsource="#lightpoint"createVehicleLocal_pos;
Describe the following Arma 3 code: playerin(crew_tank);
Describe the following Arma 3 code: if(currentPilot_vehicle!=driver_vehicle)then{hint"The pilot is not piloting!";};
Describe the following Arma 3 code: ?damageplayer>0.1:playergroupChat"I'm hurt! Medic!"
Describe the following Arma 3 code: deleteCollectionunitName;
Describe the following Arma 3 code: _deleted=deleteStatus"playerStatus";
Describe the following Arma 3 code: deleteVehicle_house1;
Describe the following Arma 3 code: _helicopterdeleteVehicleCrewdriver_helicopter;
Describe the following Arma 3 code: obj1attachTo[player];detachobj1;
Describe the following Arma 3 code: playersetDir90;_d=directionplayer;//returns 90
Describe the following Arma 3 code: myCardisableBrakestrue;
Describe the following Arma 3 code: playerdisableCollisionWithmyWall;
Describe the following Arma 3 code: (driver_tank)action["getout",_tank];
Describe the following Arma 3 code: _eddieelevatePeriscope[[0],0.75,0.1];
Describe the following Arma 3 code: _freeCargoAndFFVPositions=vehicleplayeremptyPositions"Cargo";
Describe the following Arma 3 code: [_veh1,_veh2]remoteExecCall["enableCollisionWith",0,_veh1];
Describe the following Arma 3 code: if(!isCopilotEnabledmyHeli)then{myHelienableCopilottrue;};
Describe the following Arma 3 code: cursorTargetenableMimicsfalse;
Describe the following Arma 3 code: playerenableSimulationfalse;
Describe the following Arma 3 code: _myObjectenableSimulationGlobalfalse;
Describe the following Arma 3 code: if(!isEngineOn_jeep)then{_jeepengineOntrue;};
Describe the following Arma 3 code: equipmentDisabledtank1params["_nvg","_ti"];
Describe the following Arma 3 code: Can="Land_Can_V3_F"createVehiclepositionplayer;onEachFrame{CansetPosASL[(eyePosplayerselect0)+(eyeDirectionplayerselect0),(eyePosplayerselect1)+(eyeDirectionplayerselect1),(eyePosplayerselect2)+(eyeDirectionplayerselect2)]};
Describe the following Arma 3 code: private_playerFaction=factionplayer;
Describe the following Arma 3 code: if(fleeingsoldier_1)then{playersideChat"We have won!"}else{playersideChat"Keep fighting!"};
Describe the following Arma 3 code: _helicopterflyInHeight40;
Describe the following Arma 3 code: cobraOneflyInHeightASL[200,100,400];
Describe the following Arma 3 code: _helicopterforceSpeed150;
Describe the following Arma 3 code: iffreeLookthen{systemChat"Quit looking around, soldier!";};
Describe the following Arma 3 code: if(fuelvehicleplayer==0)then{hint"The vehicle is out of fuel!"};
Describe the following Arma 3 code: _list=fullCrewvehicleplayer;
Describe the following Arma 3 code: getAllHitPointsDamageplayer;//[//["hitface","hitneck","hithead","hitpelvis","hitabdomen","hitdiaphragm","hitchest","hitbody","hitarms","hithands","hitlegs","incapacitated"],//["face_hub","neck","head","pelvis","spine1","spine2","spine3","body","arms","hands","legs","body"],//[0,0,0,0,0,0,0,0,0,0,0,0]//]
Describe the following Arma 3 code: /* can return:
[
	["Medic", false],
	["Engineer", false],
	["ExplosiveSpecialist", false],
	["UavHacker", false],
	["CamouflageCoef", 1],
	["AudibleCoef", 1],
	["LoadCoef", 1],
	["test", "custom"]
]
*/private_playerTraits=getAllUnitTraitsplayer;
Describe the following Arma 3 code: private_unitsTarget=getAttackTarget_unit;
Describe the following Arma 3 code: _bleedingRemaining=getBleedingRemaining_unit;
Describe the following Arma 3 code: private_fireDamage=getBurningValueplayer;
Describe the following Arma 3 code: Bob=createGroupeastcreateUnit["O_Soldier_F",[0,0,0],[],0,"NONE"];BobsetVehiclePosition[playermodelToWorld[0,100,0],[],0,"NONE"];onEachFrame{_beg=ASLToAGLeyePosBob;_endE=(_begvectorAdd(eyeDirectionBobvectorMultiply100));drawLine3D[_beg,_endE,[0,1,0,1]];_endW=(_begvectorAdd(BobweaponDirectioncurrentWeaponBobvectorMultiply100));drawLine3D[_beg,_endW,[1,0,0,1]];_endV=(_begvectorAdd(getCameraViewDirectionBobvectorMultiply100));drawLine3D[_beg,_endV,[0,0,1,1]];};
Describe the following Arma 3 code: playermoveInCargoheli;hintstr(heligetCargoIndexplayer);
Describe the following Arma 3 code: _com=getCenterOfMass_myCar;
Describe the following Arma 3 code: systemChatstrgetCorpsecursorObject;
Describe the following Arma 3 code: getCruiseControlvehicleplayerparams["_speedLimit","_cruiseControlActive"];
Describe the following Arma 3 code: private_damage=getDammageplayer;
Describe the following Arma 3 code: getDescriptionplayer;// (UAV Operator)// returns ["B_soldier_UAV_F", "Combat Fatigues (MTP)", "Carrier Special Rig (Green)", "B_UAV_01_backpack_F"]
Describe the following Arma 3 code: _azimuth=getDirplayer;
Describe the following Arma 3 code: _dir=getDirVisualplayer;
Describe the following Arma 3 code: private_gogglesOn=getDiverStateplayer;
Describe the following Arma 3 code: _spd=getForcedSpeed_heli;
Describe the following Arma 3 code: _pos=playergetHideFrom_enemy;
Describe the following Arma 3 code: playergetHit"head";
Describe the following Arma 3 code: vehicleplayergetHitIndex3;
Describe the following Arma 3 code: vehicleplayergetHitPointDamage"hitEngine";
Describe the following Arma 3 code: _mass=getMass_myCar;
Describe the following Arma 3 code: _modelInfo=getModelInfoplayer;// ["b_soldier_03.p3d", "a3\characters_f\blufor\b_soldier_03.p3d", true, [0,0,0]]
Describe the following Arma 3 code: private_objFOV=getObjectFOVplayer;
Describe the following Arma 3 code: _materials=getObjectMaterialscar;
Describe the following Arma 3 code: private_objectScale=getObjectScale_object;if(_objectScale!=1)exitWith{hint"all good"};if(_objectScale>1)then{hint"it's bigger!";}else{hint"it's smaller...";};
Describe the following Arma 3 code: _textures=getObjectTexturesplayer;
Describe the following Arma 3 code: _objType=getObjectTypeplayer;
Describe the following Arma 3 code: playergetOpticsMode0;// get current weapon's optic modeplayergetOpticsMode1;// get primary weapon's optic modeplayergetOpticsMode2;// get launcher's optic modeplayergetOpticsMode3;// get handgun's optic mode
Describe the following Arma 3 code: _oxygen=getOxygenRemainingplayer;
Describe the following Arma 3 code: if(getPlateNumbervehicleplayer!="H4X0RZ")then{hint"u no 1337 bro"};
Describe the following Arma 3 code: private_playerRenderedPosASL=getPosASLVisualplayer;
Describe the following Arma 3 code: _playerRenderedPosATL=getPosATLVisualplayer;
Describe the following Arma 3 code: _playerRenderedPos=getPosVisualplayer;
Describe the following Arma 3 code: _objsetPosWorldgetPosWorldVisual_obj;
Describe the following Arma 3 code: _reldir=playergetRelDirtank;
Describe the following Arma 3 code: _spd=playergetSpeed"FAST";
Describe the following Arma 3 code: getSuppressionAI_unit_1;
Describe the following Arma 3 code: private_towParent=getTowParent_towedvehicle;
Describe the following Arma 3 code: getUnitFreefallInfoplayer;
Describe the following Arma 3 code: playergetUnitTrait"Medic";
Describe the following Arma 3 code: getUnloadInCombat_vehicleparams["_cargo","_turrets"];
Describe the following Arma 3 code: getVehicleTIPars_veh;
Describe the following Arma 3 code: gunner_tankaction["getout",_tank];
Describe the following Arma 3 code: ?(handsHitplayer==1):playerglobalChat"Ouch! Don't shoot at my hands dammit!"
Describe the following Arma 3 code: _unithideBehindScriptedtrue;
Describe the following Arma 3 code: hideBodyplayer1;
Describe the following Arma 3 code: hideObjectunitName;
Describe the following Arma 3 code: hideObjectGlobalmyObject;// hides myObjecthideObjectGlobalnearestBuilding[2500,2500,0];
Describe the following Arma 3 code: _simpleObjecthideSelection["some_selection",true];
Describe the following Arma 3 code: _result=incapacitatedStateplayer;
Describe the following Arma 3 code: _fireplaceOneinflametrue;
Describe the following Arma 3 code: _inflamed=inflamed_fireplaceOne;
Describe the following Arma 3 code: private_isFullyInside=insideBuildingplayer==1;
Describe the following Arma 3 code: _canBreath=isAbleToBreatheplayer;
Describe the following Arma 3 code: if!(isAllowedCrewInImmobile_tank)then{_tankallowCrewInImmobiletrue;};
Describe the following Arma 3 code: _isOn=isAutoHoverOnvehicleplayer;
Describe the following Arma 3 code: private_unitIsInRagdoll=alive_unit!=isAwake_unit;
Describe the following Arma 3 code: if(isBleedingplayer)then{playergroupChat"I'm bleeding!!";};
Describe the following Arma 3 code: if(isBurningplayer)then{playergroupChat"I'm burning!!";};
Describe the following Arma 3 code: if(!isCopilotEnabledmyHeli)then{myHelienableCopilottrue;};
Describe the following Arma 3 code: private_canBeDamaged=local_obj&&isDamageAllowed_obj;
Describe the following Arma 3 code: _carEngineIsOn=isEngineOn_carOne;
Describe the following Arma 3 code: playerisFlashlightOn(currentWeaponplayer);
Describe the following Arma 3 code: _bobIsHidden=isHiddenbob;
Describe the following Arma 3 code: _isHidden=isHideBehindScripted_vehicle;
Describe the following Arma 3 code: if(isInRemainsCollectorunit1)then{hint"unit1 is queued for disposal"};
Describe the following Arma 3 code: vehicleplayerisKindOf"Tank";
Describe the following Arma 3 code: _marked=isMarkedForCollection_truck;
Describe the following Arma 3 code: _bobIsHidden=isObjectHiddenbob;
Describe the following Arma 3 code: _isSimple=isSimpleObject_obj1;
Describe the following Arma 3 code: if(isTouchingGroundplayer)then{hint"Terraferma!";};
Describe the following Arma 3 code: _commanderOut=isTurnedOut(tankturretUnit[0,0]);
Describe the following Arma 3 code: _bool=isWalkingplayer;
Describe the following Arma 3 code: _knowledge=playerknowsAbout_target;
Describe the following Arma 3 code: private_lifeState=lifeStateplayer;
Describe the following Arma 3 code: leaderplayerlimitSpeed5;// set to walking speedsleep30;leaderplayerlimitSpeed-1;// remove the limit
Describe the following Arma 3 code: _jeepOnelocktrue;
Describe the following Arma 3 code: vehicleNamelockCargotrue;
Describe the following Arma 3 code: vehicleNamelockDrivertrue;
Describe the following Arma 3 code: _locked=locked_jeepOne;
Describe the following Arma 3 code: _result=vehicleNamelockedCargo0;
Describe the following Arma 3 code: _driverLocked=lockedDrivervehicleplayer;
Describe the following Arma 3 code: _aboveAndBehindPlayer=playermodelToWorldVisual[0,-1,3];
Describe the following Arma 3 code: playermodelToWorldVisualWorld[0,1,0];
Describe the following Arma 3 code: hintformat["Leader's morale: %1",moraleleaderplayer];
Describe the following Arma 3 code: private_properties=namedProperties_object;// [["sbsource","shadowvolume"],["prefershadowvolume","1"],["reversed","1"],["buoyancy","1"]]
Describe the following Arma 3 code: nameSoundplayer;
Describe the following Arma 3 code: needServicetankparams["_needRepair","_needRefuel","_needRearm"];
Describe the following Arma 3 code: objectParent_unitdeleteVehicleCrew_unit;
Describe the following Arma 3 code: _eddieperiscopeElevation[0]params["_elevation","_isLocked"];
Describe the following Arma 3 code: playeraddRating500;
Describe the following Arma 3 code: // used in formationCDanger.fsmif(getPosATL_thisdistance_dangerPos<=precision_this)then{/* ... */};
Describe the following Arma 3 code: []spawn{waitUntil{10preloadObject"SoldierW"};hint"Preload finished";};
Describe the following Arma 3 code: _score=ratingplayer;
Describe the following Arma 3 code: removeFromRemainsCollector[unit1,unit2,vehicle1];
Describe the following Arma 3 code: _soldierOnereveal_soldierTwo;// soldierOne knowsAbout information about soldierTwo is updated
Describe the following Arma 3 code: _playerRole=roleDescriptionplayer;
Describe the following Arma 3 code: waitUntil{sleep1;scudState_scud>2};gubasay"MasterPlanCompletion";
Describe the following Arma 3 code: private_result="Land_i_House_Small_02_V3_F"createVehicle_pos;selectionNames_house;// ["door_1","door_2","damt_1","door_handle_1","door_handle_2","glass_1_hide","glass_2_hide","glass_3_hide","glass_1_unhide","glass_2_unhide","glass_3_unhide","glass_4_hide","glass_4_unhide"]
Describe the following Arma 3 code: _inModelPosition=playerselectionPosition"head_hit";
Describe the following Arma 3 code: vehicleplayerselectionVectorDirAndUp["drivewheel_axis","FireGeometry"]params["_axisVectorDir","_axisVectorUp"];
Describe the following Arma 3 code: selectNoPlayer;hintstrplayer;// <NULL-object>
Describe the following Arma 3 code: selectPlayerbob;
Describe the following Arma 3 code: vehicleplayersetAirplaneThrottle0.5;
Describe the following Arma 3 code: _unitsetBleedingRemaining60;
Describe the following Arma 3 code: _soldier1setCaptivetrue;side_soldier1;// returns civiliansidegroup_soldier1;// returns e.g blufor
Describe the following Arma 3 code: myObjectsetCenterOfMass[[0,-1,0],0.5];
Describe the following Arma 3 code: vehiclesetConvoySeparation20;
Describe the following Arma 3 code: vehicleplayersetCruiseControl[50,true];// sets cruise control to 50 km/h
Describe the following Arma 3 code: _soldier1setDamage1;
Describe the following Arma 3 code: _soldier1setDammage1;
Describe the following Arma 3 code: myUnitsetDir45;// will set myUnit to face North-East
Describe the following Arma 3 code: myVehiclesetDriveOnPath[getMarkerPos"wp1",getMarkerPos"wp2"];
Describe the following Arma 3 code: buildingsetFeatureType2;
Describe the following Arma 3 code: _flag1setFlagOwner_soldier1;
Describe the following Arma 3 code: _jeepOnesetFuel0.5;
Describe the following Arma 3 code: vehicleplayersetHit["motor",1];
Describe the following Arma 3 code: vehicleplayersetHitIndex[1,1];
Describe the following Arma 3 code: vehicleplayersetHitPointDamage["hitEngine2",1.0];
Describe the following Arma 3 code: myObjectsetMass[10,0.5];
Describe the following Arma 3 code: _soldier1setMimic"hurt";
Describe the following Arma 3 code: missile1setMissileTargettank1;
Describe the following Arma 3 code: missile1setMissileTargetPosunitAimPositiontank1;
Describe the following Arma 3 code: carsetObjectMaterial[0,"A3\Structures_F\Data\Windows\window_set.rvmat"];carsetObjectMaterial[1,"A3\Structures_F\Data\Windows\window_set.rvmat"];
Describe the following Arma 3 code: playersetObjectMaterialGlobal[0,"A3\Structures_F\Data\Windows\window_set.rvmat"];
Describe the following Arma 3 code: _mrapattachTo[player,[0,0,0]];_mrapsetObjectScale0.1;
Describe the following Arma 3 code: _objectnamesetObjectTexture[0,"\pboname\texture.paa"];_objectnamesetObjectTexture[1,"\pboname\texture2.paa"];
Describe the following Arma 3 code: playersetObjectTextureGlobal[0,"\MyAddon\blue.paa"];
Describe the following Arma 3 code: playersetOpticsMode"Hamr2Scope";// Default optic mode for optic_Hamr
Describe the following Arma 3 code: playersetOxygenRemaining0;// drowns player
Describe the following Arma 3 code: vehicleplayersetPlateNumber"K2000";
Describe the following Arma 3 code: playersetRandomLiptrue;
Describe the following Arma 3 code: unit_1setSuppression1;
Describe the following Arma 3 code: playersetTargetAge"10 MIN";
Describe the following Arma 3 code: {moveOut_x}forEachcrew_towedVehicle;// make sure nobody is in the towed vehicle_towedVehiclelocktrue;// make sure everybody stays out of itropeCreate[_bobcat,[0,-5,0],_towedVehicle,[0,2,0]];_towedVehiclesetTowParent_bobcat;
Describe the following Arma 3 code: _unitsetUnconscioustrue;
Describe the following Arma 3 code: playersetUnitFreefallHeight1000;
Describe the following Arma 3 code: playersetUnitRecoilCoefficient10;
Describe the following Arma 3 code: playersetUnitTrait["Medic",true];
Describe the following Arma 3 code: playersetVehicleArmor0.5;
Describe the following Arma 3 code: playersetVehicleId1;
Describe the following Arma 3 code: _soldier3setVehicleInit"this allowFleeing 0";
Describe the following Arma 3 code: _veh1setVehicleLock"LOCKED";
Describe the following Arma 3 code: // place the player at either [1000,2000], or one of the three markers positionsplayersetVehiclePosition[[1000,2000],["Pos1","Pos2","Pos3"],0,"CAN_COLLIDE"];
Describe the following Arma 3 code: vehicleplayersetVehicleTIPars[1,1,1];// set all parts hotvehicleplayersetVehicleTIPars[0,0,0];// set all parts coldvehicleplayersetVehicleTIPars[0.5,0.5,0.5];// set all parts warm
Describe the following Arma 3 code: private_playersCar=vehicleplayer;systemChatstr_playersCar;// displays e.g "ce06b00# 164274: offroad_01_unarmed_f.p3d"_playersCarsetVehicleVarName"MyOffroad";systemChatstr_playersCar;// displays "MyOffroad"isNil"MyOffroad";// true - the MyOffroad variable is not setMyOffroad=_playersCar;// now it ispublicVariable"MyOffroad";// broadcasts it over the network
Describe the following Arma 3 code: _truck1setVelocity[20,0,0];
Describe the following Arma 3 code: carsetVelocityModelSpace[0,10,0];// pushes car forward
Describe the following Arma 3 code: _vecCurrent=_vecFromvectorAdd(_vecTovectorDiff_vecFromvectorMultiply_interval);
Describe the following Arma 3 code: simulationEnabledplayer;
Describe the following Arma 3 code: _dimension=sizeOf"M1Abrams";// Returns 10.7833
Describe the following Arma 3 code: if(speed_truck1>=100)then{hint"You're going too fast!"};
Describe the following Arma 3 code: _info=squadParamsplayer;
Describe the following Arma 3 code: _objects=synchronizedObjects_logic;
Describe the following Arma 3 code: _acm=_groupLogiccreateUnit["AmbientCombatManager",positionplayer,[],0,"NONE"];_acmsynchronizeObjectsAdd[player];
Describe the following Arma 3 code: playersynchronizeObjectsRemove[_object1,_object2,_object3];
Describe the following Arma 3 code: private_allInfo=_soldierOnetargetKnowledge_jeepOne;_allInfoparams["_knownByGroup","_knownByUnit","_lastSeen","_lastThreat","_side","_errorMargin","_position"];
Describe the following Arma 3 code: _aggregation=[player,sideEnemy,"",[],0]targetsAggregate(playertargetsQuery[objNull,sideUnknown,"",[],0]);/*
	returns e.g
	[
		[
			["COUNT0", 1],
			["SIDE0", WEST],
			["UNIT0", "B_Soldier_F"],
			["PLACE0", [[<null>,<null>], 0, <null>]],
			["TIME0", [-0.9, -0.9]],
			["UCOUNT0", 1],
			["UTYPE0", ...
		]
	]
*/
Describe the following Arma 3 code: triggerAmmobomb1;
Describe the following Arma 3 code: if(typeOfvehicleplayer=="B_Heli_Light_01_armed_F")then{hint"Player is in a AH-9 Pawnee";};
Describe the following Arma 3 code: unassignVehicleplayer;
Describe the following Arma 3 code: private_isUnderwater=underwatervehicleplayer;
Describe the following Arma 3 code: unitAimPositionplayer;
Describe the following Arma 3 code: unitAimPositionVisualplayer;
Describe the following Arma 3 code: _myRecoil=unitRecoilCoefficientplayer;
Describe the following Arma 3 code: ?vehicleplayer!=player:hint"Player is in a vehicle"
Describe the following Arma 3 code: onEachFrame{hintSilentstrvehicleMoveInfovehicleplayer};
Describe the following Arma 3 code: hintvehicleVarNameplayer;
Describe the following Arma 3 code: _vector=velocityjeep;
Describe the following Arma 3 code: velocityModelSpace_chopper;comment"Returns [X (left(-) right(+)), Y (backward(-) forward(+)), Z (down(-) up(+))]";
Describe the following Arma 3 code: waterDamagedtank1;
Describe the following Arma 3 code: isWeaponLowered=weaponLoweredplayer;
Describe the following Arma 3 code: drop["cl_basic","","Billboard",1,1,[-3.5*(sin(directionxural)),-3.5*(cos(directionxural)),0],[random0.1,random0.1,random0.5],1,0.005,0.0042,0.7,[0.3,3],[[0.5,0.5,0.5,0],[0.7,0.7,0.7,0.5],[0.9,0.9,0.9,0]],[0,1,0,1,0,1],0.2,0.2,"","",xural];
Describe the following Arma 3 code: _currentQuality=particlesQuality;
Describe the following Arma 3 code: particleSourcesetDropIntervalinterval;
Describe the following Arma 3 code: _myParticleSourcesetParticleCircle[3,[0,0,5]];
Describe the following Arma 3 code: _source01="#particlesource"createVehicleLocal_pos01;_source01setParticleClass"ObjectDestructionFire1Smallx";_source01attachTo[_object,[0,0,0]];
Describe the following Arma 3 code: particleSourcesetParticleFire[coreIntensity,coreDistance,damageTime];
Describe the following Arma 3 code: particleSourcesetParticleParams[/*
		String or Array - If string then the name of the particleShape. And following default values are used:
			particleFSNtieth = 1
			particleFSIndex = 0
			particleFSFrameCount = 1
			particleFSLoop = 1
	*/[particleShape,/* String */particleFSNtieth,/* Number */particleFSIndex,/* Number */particleFSFrameCount,/* Number */particleFSLoop/* Optional - Number. Default: 1 */],animationName,/* String */particleType,/* String - Enum: Billboard, SpaceObject */timerPeriod,/* Number */lifeTime,/* Number */pos3D,/* 3D Array of numbers as relative position to particleSource or (if object at index 18 is set) object.
									Or (if object at index 18 is set) String as memoryPoint of object. */moveVelocity,/* 3D Array of numbers. */rotationVelocity,/* Number */weight,/* Number */volume,/* Number */rubbing,/* Number */sizeOverLifetime,/* Array of Numbers */color,/* Array of Array of RGBA Numbers */animationSpeed,/* Array of Number */randomDirectionPeriod,/* Number */randomDirectionIntensity,/* Number */onTimerScript,/* String */beforeDestroyScript,/* String */obj,/* Object */angle,/* Optional Number - Default: 0 */onSurface,/* Optional Boolean */bounceOnSurface,/* Optional Number */emissiveColor,/* Optional Array of Array of RGBA Numbers */vectorDirOrVectorDirAndUp/* Optional vector dir or [vectorDir, vectorUp]
		Since Arma 3 v1.92 it is possible to set the initial direction of the SpaceObject
		Since Arma 3 v2.12 it is possible to use a [vectorDir, vectorUp] array */];
Describe the following Arma 3 code: particleSourcesetParticleRandom[lifeTimeVar,positionVar,moveVelocityVar,rotationVelocityVar,sizeVar,colorVar,randomDirectionPeriodVar,randomDirectionIntensityVar,angleVar,bounceOnSurfaceVar];
Describe the following Arma 3 code: _pilotCamVector=getPilotCameraDirectionvehicleplayer;
Describe the following Arma 3 code: _pilotCamPos=getPilotCameraPositionvehicleplayer;
Describe the following Arma 3 code: _pilotCamRot=getPilotCameraRotationvehicleplayer;
Describe the following Arma 3 code: getPilotCameraTargetvehicleplayerparams["_pilotCamTracking","_pilotCamTargetPos","_pilotCamTarget"];
Describe the following Arma 3 code: hasPilotCameravehicleplayer;
Describe the following Arma 3 code: vehicleplayersetPilotCameraDirection[0,1,0]// re-centers the camera
Describe the following Arma 3 code: vehicleplayersetPilotCameraRotation[rad90,rad45];
Describe the following Arma 3 code: _pilotCamTrack=vehicleplayersetPilotCameraTarget[2100,4200,4.2];
Describe the following Arma 3 code: _playerPosASL=AGLToASL(playermodelToWorld[0,0,0]);
Describe the following Arma 3 code: _aimPos=aimPosplayer;
Describe the following Arma 3 code: _playerPosAGL=ASLToAGLgetPosASLplayer;
Describe the following Arma 3 code: ASLToATLgetPosASLplayerisEqualTogetPosATLplayer;
Describe the following Arma 3 code: ATLToASL(getPosATLplayer)isEqualTogetPosASLplayer;
Describe the following Arma 3 code: _soldiersetPosATL(_house1buildingPos2);
Describe the following Arma 3 code: _eyesPos=eyePosplayer;
Describe the following Arma 3 code: _position=getPosASLplayerfindEmptyPosition[0,100];
Describe the following Arma 3 code: _ready=_centerfindEmptyPositionReady[0,500];
Describe the following Arma 3 code: _pos=formationPosition_unit;
Describe the following Arma 3 code: hintSilentstrgetPosplayer;
Describe the following Arma 3 code: _AslPos=getPosASLplayer;
Describe the following Arma 3 code: _pos=getPosASLW_diver;
Describe the following Arma 3 code: _objPosition=getPosATLplayer;
Describe the following Arma 3 code: _objsetPosWorldgetPosWorld_obj;
Describe the following Arma 3 code: _relpos=playergetRelPos[100,90];
Describe the following Arma 3 code: _height=getTerrainHeightASL(getPosATLplayer);
Describe the following Arma 3 code: _playerIsInside=playerinArea_myTrigger;
Describe the following Arma 3 code: vehiclesinAreaArraymyTrigger;
Describe the following Arma 3 code: private_players=callBIS_fnc_listPlayers;private_indices=_playersinAreaArrayIndexes_marker;{private_player=_playersselect_x;["You are in the marker!"]remoteExec["hint",_player];}forEach_indices;
Describe the following Arma 3 code: _isInside=[100,100,0]inPolygon[[0,0,0],[1000,1000,0],[1000,0,0]];
Describe the following Arma 3 code: _overLand=!(positionplayerisFlatEmpty[-1,-1,-1,-1,0,false]isEqualTo[]);
Describe the following Arma 3 code: _gridPos=mapGridPositionplayer;
Describe the following Arma 3 code: _aboveAndBehindPlayer=playermodelToWorld[0,-1,3];
Describe the following Arma 3 code: private_playersFrontWorld=playermodelToWorldWorld[0,1,0];
Describe the following Arma 3 code: private_pos=positionplayer;
Describe the following Arma 3 code: _worldPos=positionCameraToWorld_cameraPos;
Describe the following Arma 3 code: _worldCoord=_controlposScreenToWorld_ScreenCoord;
Describe the following Arma 3 code: _screenCoord=_controlposWorldToScreen_worldCoord;
Describe the following Arma 3 code: _wPos=screenToWorld[0.5,0.5];
Describe the following Arma 3 code: playersetPos[getPosplayerselect0,getPosplayerselect1,(getPosplayerselect2)+10];// the same as above using set (OFP:R v1.75)_pos=getPosplayer;_posset[2,_posselect2+10];playersetPos_pos;// the same as above using modelToWorld (ArmA v1.00)playersetPos(playermodelToWorld[0,0,10]);// the same as above using vectorAdd (Arma 3 v1.22)playersetPos(getPosplayervectorAdd[0,0,10]);
Describe the following Arma 3 code: playersetPosASL[getPosASLplayerselect0,(getPosASLplayerselect1)+10,getPosASLplayerselect2];
Describe the following Arma 3 code: private_aslPos=getPosASLplayer;_aslPosset[1,_aslPosselect1+10];playersetPosASL2_aslPos;
Describe the following Arma 3 code: _diversetPosASLW[(position_diver)select0,(position_diver)select1,-10];
Describe the following Arma 3 code: playersetPosATL[getPosATLplayerselect0,(getPosATLplayerselect1)-10,getPosATLplayerselect2];
Describe the following Arma 3 code: _objsetPosWorldgetPosWorld_obj;
Describe the following Arma 3 code: // place the player at either [1000,2000], or one of the three markers positionsplayersetVehiclePosition[[1000,2000],["Pos1","Pos2","Pos3"],0,"CAN_COLLIDE"];
Describe the following Arma 3 code: private_result=surfaceIsWater[1000,3000];
Describe the following Arma 3 code: _normal=surfaceNormal[300,500];
Describe the following Arma 3 code: private_groundTexture=surfaceTexturegetPosATLplayer;
Describe the following Arma 3 code: private_surface=surfaceType[4500,4500];
Describe the following Arma 3 code: unitAimPositionplayer;
Describe the following Arma 3 code: _allOnGroudUnits=groupplayerunitsBelowHeight10;
Describe the following Arma 3 code: playerRenderedPos=visiblePositionplayer;
Describe the following Arma 3 code: _playerRenderedPosASL=visiblePositionASLplayer;
Describe the following Arma 3 code: _relPos=myObjectworldToModel[0,0,0];
Describe the following Arma 3 code: _relPos=myObjectworldToModelVisual[0,0,0];
Describe the following Arma 3 code: _screenPos=worldToScreenASLToAGLgetPosASLsoldier1;
Describe the following Arma 3 code: ?(_var==_test):hint"_var is equal to _test!";
Describe the following Arma 3 code: assert(1>2);
Describe the following Arma 3 code: // prints 0, 1 and then exitsfor"_i"from0to3do{if(_i==2)then{break};systemChatstr_i;};
Describe the following Arma 3 code: scopeName"main";while{true}do{scopeName"loop1";while{true}do{scopeName"loop2";if(condition1)then{breakTo"main"};// Breaks all scopes and return to "main"if(condition2)then{breakOut"loop2"};// Breaks scope named "loop2"sleep1;};sleep1;};
Describe the following Arma 3 code: scopeName"main";while{true}do{scopeName"loop1";while{true}do{scopeName"loop2";if(condition1)then{breakTo"main"};// breaks all scopes and return to "main"if(condition2)then{breakOut"loop2"};// breaks scope named "loop2"sleep1;};sleep1;};
Describe the following Arma 3 code: // stops once _i reaches 5 and outputs 0, 1, 2, 3, 4, ENDsystemChatcall{for"_i"from0to10do{if(_i==5)then{breakWith"END";};systemChatstr_i;};};
Describe the following Arma 3 code: call{hintstr123;};
Describe the following Arma 3 code: onEachFrame{systemChatstrcanSuspend;// false[]spawn{hintstrcanSuspend};// trueonEachFrame{};};
Describe the following Arma 3 code: switch(_condition)do{case1:{hint"1"};case2:{hint"2"};default{hint"default"};};
Describe the following Arma 3 code: try{throw"invalid argument"}catch{hintstr_exception};
Describe the following Arma 3 code: // prints 0, 1, 3for"_i"from0to3do{if(_i==2)then{continue};systemChatstr_i;};
Describe the following Arma 3 code: // results in [2, "TEST", 4]private_result=[1,2,3]apply{if(_x==2)then{continueWith"TEST";}else{_x+1;};};
Describe the following Arma 3 code: switch(_condition)do{case1:{hint"1"};case2:{hint"2"};default{hint"default"};// no colon after default};
Describe the following Arma 3 code: while{b>a}do{a=a+1;};
Describe the following Arma 3 code: if(a>b)then{c=0}else{c=1};
Describe the following Arma 3 code: [player,_jeep]exec"getin.sqs";
Describe the following Arma 3 code: _id=playerexecFSM"test.fsm";
Describe the following Arma 3 code: execVM"test.sqf";
Describe the following Arma 3 code: ?notaliveplayer:exit
Describe the following Arma 3 code: systemChat"start";private_condition=true;if(_condition)then{if(true)exitWith{systemChat"exiting if _condition scope";};systemChat"never shown";};systemChat"exiting #1 worked";if(true)exitWith{systemChat"exiting the main scope = leaving the whole script";};systemChat"never shown - the script has already ended";
Describe the following Arma 3 code: fileExists"\a3\mySuperPath\bestFileEver.paa";// returns false
Describe the following Arma 3 code: for"_i"from0to2do{hintSilentstr_i;};// worksfor"_I"from0to2do{hintSilentstr_I;};// "variable _i is not defined" error
Describe the following Arma 3 code: // SQF{_xsetDamage1}forEachunitsplayer;
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: for"_i"from10to20do{hintstr_i;// will hint from 10 to 20, spaced by 1 secondsleep1;};
Describe the following Arma 3 code: goto"myLabel"playersetDamage1#myLabelhint"you successfully avoided death!"
Describe the following Arma 3 code: if(_displayAnError)then{halt};
Describe the following Arma 3 code: _retVal=if(1>0)then{"It's true"}else{"It's false"};hintstr_retVal;
Describe the following Arma 3 code: if(isUIContext)then{hint"UI control event"};
Describe the following Arma 3 code: _contents=loadFile"wantedString.txt";
Describe the following Arma 3 code: scopeName"main";while{true}do{scopeName"loop1";while{true}do{scopeName"loop2";// ...};};
Describe the following Arma 3 code: _scriptHandle=["arguments"]execVM"scriptname.sqf";waitUntil{scriptDone_scriptHandle};
Describe the following Arma 3 code: scriptName"leetScript.sqf";
Describe the following Arma 3 code: 0spawn{sleep5;hint"after (at least) 5 seconds...";};
Describe the following Arma 3 code: _handle=0spawn{playerglobalChat"Hello world!"};
Describe the following Arma 3 code: for"_i"from20to10step-2do{// ...};
Describe the following Arma 3 code: switch(floorrandom5)do{case1:{hint"one";};case2:{hint"two";};default{hint"zero, three or four"};};
Describe the following Arma 3 code: _script=[]execVM"script.sqf";sleep5;terminate_script;
Describe the following Arma 3 code: if(a>b)then{hint"a is greater than b!";};
Describe the following Arma 3 code: try{throw"invalid argument"}catch{hintstr_exception};
Describe the following Arma 3 code: for"_i"from10to20do{hintstr_i;// will hint from 10 to 20, spaced by 1 secondsleep1;};
Describe the following Arma 3 code: try{/* block that can throw exception */}catch{/* block that processes the exception. Exception is described in the _exception variable */};
Describe the following Arma 3 code: uiSleep0.5;
Describe the following Arma 3 code: waitUntil{private_expression=var1&&(var2>10);!isNil"_expression"&&{_expression}};
Describe the following Arma 3 code: while{a<b}do{a=a+1};
Describe the following Arma 3 code: ]spawn{withuiNamespacedo{for"_i"from1to1do{systemChatstr[currentNamespaceisEqualTouiNamespace,currentNamespaceisEqualTomissionNamespace];// result [true, false]sleep0.05;// <-- small suspensionsystemChatstr[currentNamespaceisEqualTouiNamespace,currentNamespaceisEqualTomissionNamespace];// result [false, true] <-- switching};};};
Describe the following Arma 3 code: _isGlobalChatEnabled=(channelEnabled0)select0;// check if user can use text on global channel
Describe the following Arma 3 code: clearRadio;
Describe the following Arma 3 code: _soldierOnecommandChat"Show this text";
Describe the following Arma 3 code: _soldierOnecommandRadio"messageOne";
Describe the following Arma 3 code: if(conversationDisabledsoldier1)then{soldier1disableConversationfalse};
Describe the following Arma 3 code: _selected=currentChannel;// 3 - for example for the Group
Describe the following Arma 3 code: _unitcustomChat[1,"Hi, I am a custom chat message"];
Describe the following Arma 3 code: _soldierOnecustomRadio[1,"WordEnemy"];
Describe the following Arma 3 code: playerdirectSayconfigNameselectRandom("true"configClasses(configFile>>"CfgRadio"));
Describe the following Arma 3 code: while{!conversationDisabled_unit}do{_unitdisableConversationtrue};while{conversationDisabled_unit}do{_unitdisableConversationfalse};
Describe the following Arma 3 code: 0enableChannelfalse;// disable user ability to send voice and text on global channel
Describe the following Arma 3 code: enableRadiofalse;
Describe the following Arma 3 code: enableSentencesfalse;
Describe the following Arma 3 code: private_channelID=getPlayerChannelplayer;
Describe the following Arma 3 code: private_volume=getPlayerVoNVolume(unitsplayerselect1);
Describe the following Arma 3 code: private_subtitleSettings=getSubtitleOptions;
Describe the following Arma 3 code: _soldierOneglobalChat"Show this text";
Describe the following Arma 3 code: _soldierOneglobalRadio"messageOne";
Describe the following Arma 3 code: _soldierOnegroupChat"Show this text";
Describe the following Arma 3 code: _soldierOnegroupRadio"messageOne";
Describe the following Arma 3 code: 2radioChannelAdd[player,unit1];
Describe the following Arma 3 code: _channelID=radioChannelCreate[[0.96,0.34,0.13,0.8],"Q-dance Radio","%UNIT_NAME",[player1,player2]];
Describe the following Arma 3 code: private_channelID=radioChannelCreate[[1,0,0.5,0.8],"Q-dance Radio","%UNIT_NAME",[u1,u2],false];radioChannelInfo_channelID;// returns [[1,0,0.5,0.8], "Q-dance Radio", "%UNIT_NAME", [u1, u2], false, true]
Describe the following Arma 3 code: 3radioChannelRemove[blufor_unit_1,blufor_unit_2];
Describe the following Arma 3 code: 4radioChannelSetCallSign"%UNIT_NAME";
Describe the following Arma 3 code: 5radioChannelSetLabel"Q-dance Radio";
Describe the following Arma 3 code: if(radioEnabled)then{enableRadiofalse};
Describe the following Arma 3 code: if(sentencesEnabled)then{hint"sentences are enabled; changing that now";enableSentencesfalse;};
Describe the following Arma 3 code: _isDirectSelected=setCurrentChannel5;// sets Direct channel as current active
Describe the following Arma 3 code: _loudPlayersetPlayerVoNVolume0.5;
Describe the following Arma 3 code: showChatfalse;
Describe the following Arma 3 code: _bool=shownChat;
Describe the following Arma 3 code: if(shownRadio)then{hint"You have Radio enabled."};
Describe the following Arma 3 code: private_setToShow=shownSubtitles;
Describe the following Arma 3 code: showRadiofalse;
Describe the following Arma 3 code: showSubtitlesfalse;
Describe the following Arma 3 code: _soldierOnesideChat"Show this text";
Describe the following Arma 3 code: _soldierOnesideRadio"messageOne";
Describe the following Arma 3 code: systemChat"Hello world!";
Describe the following Arma 3 code: vehicleplayervehicleChat"Show this text";
Describe the following Arma 3 code: _soldierOnevehicleRadio"messageOne";
Describe the following Arma 3 code: hintformat["Number of UAV(s) on the map: %1",countallUnitsUAV];
Describe the following Arma 3 code: bool=playerconnectTerminalToUAVuav1;
Describe the following Arma 3 code: myUnitdisableUAVConnectability[myUav,true];
Describe the following Arma 3 code: unitenableUAVConnectability[uav,true];
Describe the following Arma 3 code: _uavenableUAVWaypointsfalse;hintstrwaypointsEnabledUAV_uav;// returns false
Describe the following Arma 3 code: getConnectedUAVplayer;
Describe the following Arma 3 code: private_playersDrone=getConnectedUAVUnitplayer;
Describe the following Arma 3 code: private_isAutonomous=isAutonomousuav;
Describe the following Arma 3 code: private_canConnect=myUnitisUAVConnectable[myUav,true];
Describe the following Arma 3 code: _isConnected=isUAVConnectedcursorTarget;
Describe the following Arma 3 code: playerremoteControldriverUAV;driverUAVswitchCamera"Internal";// switchCamera required// sometimes switchCamera is not neededplayerremoteControldriverUAV;
Describe the following Arma 3 code: uavsetAutonomoustrue;
Describe the following Arma 3 code: _bool=shownUAVFeed;
Describe the following Arma 3 code: showUAVFeedtrue;
Describe the following Arma 3 code: UAVControluav;
Describe the following Arma 3 code: unitIsUAV_myUAV;// true (whether it has driver/gunner or not)unitIsUAVdriver_myUAV;// true (provided there is a driver)unitIsUAVgunner_myUAV;// true (provided there is a gunner)unitIsUAVplayer;// true if the player is remote-controlling a UAV, false otherwise// technically, the UAV driver/gunner is the one being remote-controlled
Describe the following Arma 3 code: _uavenableUAVWaypointsfalse;hintstrwaypointsEnabledUAV_uav;// returns false
Describe the following Arma 3 code: _dir=getDirVisualplayer;
Describe the following Arma 3 code: private_playerRenderedPosASL=getPosASLVisualplayer;
Describe the following Arma 3 code: _playerRenderedPosATL=getPosATLVisualplayer;
Describe the following Arma 3 code: _playerRenderedPos=getPosVisualplayer;
Describe the following Arma 3 code: _objsetPosWorldgetPosWorldVisual_obj;
Describe the following Arma 3 code: _aboveAndBehindPlayer=playermodelToWorldVisual[0,-1,3];
Describe the following Arma 3 code: playermodelToWorldVisualWorld[0,1,0];
Describe the following Arma 3 code: _inModelPosition=playerselectionPosition"head_hit";
Describe the following Arma 3 code: unitAimPositionVisualplayer;
Describe the following Arma 3 code: _dirVector=vectorDirVisual_unit;
Describe the following Arma 3 code: _airplanevectorModelToWorldVisual[0,-10,4];
Describe the following Arma 3 code: _objSideVectorVisual=vectorSideVisualmyObject;
Describe the following Arma 3 code: _vUp=vectorUpVisualvehicleplayer;
Describe the following Arma 3 code: private_vector=_airplanevectorWorldToModelVisual[0,-10,4];
Describe the following Arma 3 code: playerRenderedPos=visiblePositionplayer;
Describe the following Arma 3 code: _playerRenderedPosASL=visiblePositionASLplayer;
Describe the following Arma 3 code: _relPos=myObjectworldToModelVisual[0,0,0];
Describe the following Arma 3 code: private_airportSide=airportSide0;
Describe the following Arma 3 code: _airplanelandAtselectRandom(allAirportsselect0);
Describe the following Arma 3 code: plane1assignToAirport0;
Describe the following Arma 3 code: private_info=getRoadInfo_road;_infoparams["_mapType","_width","_isPedestrian","_texture","_textureEnd","_material","_begPos","_endPos","_isBridge"];private_roadDirection=_begPosgetDir_endPos;
Describe the following Arma 3 code: _objOnRoad=isOnRoadplayer;
Describe the following Arma 3 code: _plane1landAt1;
Describe the following Arma 3 code: _list=playernearRoads50;
Describe the following Arma 3 code: _road=roadAtASLToAGLgetPosASLplayer;
Describe the following Arma 3 code: _road=(playernearRoads50)select0;_connectedRoads=roadsConnectedTo_road;
Describe the following Arma 3 code: 0setAirportSideeast;
Describe the following Arma 3 code: _canSling=veh1canSlingLoadveh2;
Describe the following Arma 3 code: vehicleplayerenableRopeAttachfalse;
Describe the following Arma 3 code: _cargo=getSlingLoadheli1;
Describe the following Arma 3 code: private_towParent=getTowParent_towedvehicle;
Describe the following Arma 3 code: _cargoArray=ropeAttachedObjectsheli1;
Describe the following Arma 3 code: _heli=ropeAttachedToveh1;
Describe the following Arma 3 code: ropeAttachEnabledveh1;
Describe the following Arma 3 code: [veh1,[0,0,0],[0,0,-1]]ropeAttachTo(ropesheli1select0);
Describe the following Arma 3 code: myRope=ropeCreate[vehicleplayer,"fastrope0",10,10,true];
Describe the following Arma 3 code: ropeCut[ropesheli1select0,5];
Describe the following Arma 3 code: ropeDestroymyRope;
Describe the following Arma 3 code: vehicleplayerropeDetachmyRope;
Describe the following Arma 3 code: _ends=ropeEndPosition(ropesheli1select0);_start=_endsselect0;_end=_endsselect1;
Describe the following Arma 3 code: _length=ropeLength(ropesheli1select0);
Describe the following Arma 3 code: hintstr(ropesvehicleplayer);
Describe the following Arma 3 code: r1=ropeCreate[car1,[0,0,0],car3,[0,0,0],10];r2=ropeCreate[car2,[0,0,0],car3,[0,0,0],10];ropesAttachedTocar3;// [car1,car2]
Describe the following Arma 3 code: private_segments=ropeSegments_myRope;
Describe the following Arma 3 code: ropeSetCargoMass[myRope,myCargo,1138];
Describe the following Arma 3 code: ropeUnwind[ropesheli1select0,3,10];// set rope length to 10m at 3m/s
Describe the following Arma 3 code: waitUntil{ropeUnwound(ropesheli1select0)};hint"Unwinding Complete";
Describe the following Arma 3 code: _success=heli1setSlingLoadveh1;
Describe the following Arma 3 code: {moveOut_x}forEachcrew_towedVehicle;// make sure nobody is in the towed vehicle_towedVehiclelocktrue;// make sure everybody stays out of itropeCreate[_bobcat,[0,-5,0],_towedVehicle,[0,2,0]];_towedVehiclesetTowParent_bobcat;
Describe the following Arma 3 code: waitUntil{slingLoadAssistantShown};hint"You lack rudimentary motor skills and basic eye-hand coordination.";// scold user for unethical practices
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: private_densityArray=airDensityCurveRTD;
Describe the following Arma 3 code: _density=airDensityRTD0;// returns 1.22406
Describe the following Arma 3 code: _charge=batteryChargeRTDvehicleplayer;
Describe the following Arma 3 code: clearForcesRTD;
Describe the following Arma 3 code: _collective=collectiveRTDvehicleplayer;
Describe the following Arma 3 code: _rtdOn=difficultyEnabledRTD;
Describe the following Arma 3 code: myHelicopterRTDenableAutoStartUpRTDtrue;
Describe the following Arma 3 code: myHelicopterRTDenableAutoTrimRTDtrue;
Describe the following Arma 3 code: if(difficultyEnabledRTD)then{enableStressDamagetrue};
Describe the following Arma 3 code: _enginesTaru=enginesIsOnRTD_taru;// returns [true, true]
Describe the following Arma 3 code: _array=enginesPowerRTDvehicleplayer;
Describe the following Arma 3 code: enginesRpmRTDRTD_helicopterparams["_RPMEngine1","_RPMEngine2"];
Describe the following Arma 3 code: _UH80_E1=(enginesTorqueRTD_UH80)select0;// engine 1 Torque_UH80_E2=(enginesTorqueRTD_UH80)select1;// engine 2 Torque
Describe the following Arma 3 code: forceAtPositionRTD;
Describe the following Arma 3 code: forceGeneratorRTD2;
Describe the following Arma 3 code: private_rpm=getEngineTargetRPMRTD_helicopter;
Describe the following Arma 3 code: _isOn=getRotorBrakeRTD_heli;
Describe the following Arma 3 code: _array=getTrimOffsetRTDvehicleplayer;
Describe the following Arma 3 code: _orientation=getWingsOrientationRTDmyHelicopter;
Describe the following Arma 3 code: _position=getWingsPositionRTDmyHelicopter;
Describe the following Arma 3 code: _state=isAutoStartUpEnabledRTD_myHelicopter;
Describe the following Arma 3 code: _state=isAutoTrimOnRTD_myHelicopter;
Describe the following Arma 3 code: _heliRTD=isObjectRTDvehicleplayer;
Describe the following Arma 3 code: _settingEnabled=isStressDamageEnabled;
Describe the following Arma 3 code: _engineCount=numberOfEnginesRTDvehicleplayer;
Describe the following Arma 3 code: _rotorForces=rotorsForcesRTD_taru;// Returns [[-465.981,351.941,45960.5],[-469.079,397.451,46933.3]]
Describe the following Arma 3 code: _mh9_main=(rotorsRpmRTD_MH9)select0;//main rotor_mh9_tail=(rotorsRpmRTD_MH9)select1;//tail rotor
Describe the following Arma 3 code: myHelicopterRTDsetActualCollectiveRTD0.7;
Describe the following Arma 3 code: vehicleplayersetAPURTD[1,15];
Describe the following Arma 3 code: vehicleplayersetBatteryChargeRTD0.5;
Describe the following Arma 3 code: (vehicleplayer)setBatteryRTDfalse;
Describe the following Arma 3 code: myHelicopterRTDsetBrakesRTD[1,3];
Describe the following Arma 3 code: myHelicopterRTDsetCustomWeightRTD120;
Describe the following Arma 3 code: myHelicoptersetEngineRpmRTD[1337,-1];
Describe the following Arma 3 code: something1setForceGeneratorRTDsomething2;
Describe the following Arma 3 code: myHelicopterRTDsetRotorBrakeRTD1;
Describe the following Arma 3 code: vehicleplayersetStarterRTD[true,-1];
Describe the following Arma 3 code: vehicleplayersetThrottleRTD[0.5,1];
Describe the following Arma 3 code: vehicleplayersetWantedRPMRTD[2500,30,0];
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: _throttleValues=throttleRTDvehicleplayer;
Describe the following Arma 3 code: _taruWeight=weightRTDtaru// Returns [7000,300,1990.56,0,0]
Describe the following Arma 3 code: _wind=windRTD;
Describe the following Arma 3 code: _wingForce=wingsForcesRTD_rtdHelo;
Describe the following Arma 3 code: vehicleplayerconfirmSensorTarget[blufor,true];
Describe the following Arma 3 code: vehicleplayerenableVehicleSensor["PassiveRadarSensorComponent",false];// disables passive radar
Describe the following Arma 3 code: _status=getRemoteSensorsDisabled;
Describe the following Arma 3 code: private_radarTargets=getSensorTargetsvehicleplayer;/*
	returns e.g
	[
		[O Alpha 1-3:1, "air", "unknown", ["ir", "activeradar", "visual"]],
		[17750112040# 163957: apc_tracked_01_aa_f.p3d, "ground", "unknown", ["datalink"]]
	]
*/
Describe the following Arma 3 code: private_dangers=getSensorThreatsvehicleplayer;/*
	returns e.g
	[
		[164230: titan_missile_atl_fly.p3d, "missile", "visual"],
		[164233: titan_missile_atl_fly.p3d, "threatmissile", "radar"]
	]
*/
Describe the following Arma 3 code: private_enemyConfirmed=_possibleEnemyisSensorTargetConfirmedopfor;
Describe the following Arma 3 code: isVehicleRadarOnvehicleplayer;// returns true if radar is turned on
Describe the following Arma 3 code: vehicleplayerisVehicleSensorEnabled"PassiveRadarSensorComponent";// [["PassiveRadarSensorComponent", true]]
Describe the following Arma 3 code: listRemoteTargetsopfor;
Describe the following Arma 3 code: private_sensors=listVehicleSensors_v44blackfish;hintstr_sensors;/*
	e.g for a V44 Blackfish:
	[
		["IRSensorComponent", "IRSensorComponent"],
		["VisualSensorComponent", "VisualSensorComponent"],
		["ActiveRadarSensorComponent", "ActiveRadarSensorComponent"],
		["PassiveRadarSensorComponent", "PassiveRadarSensorComponent"],
		["LaserSensorComponent", "LaserSensorComponent"],
		["NVSensorComponent", "NVSensorComponent"]
	]
*/
Describe the following Arma 3 code: bluforreportRemoteTarget[vehicleplayer,60];
Describe the following Arma 3 code: _vehiclesetVehicleRadar1;
Describe the following Arma 3 code: vehicleplayersetVehicleReceiveRemoteTargetstrue;
Describe the following Arma 3 code: vehicleplayersetVehicleReportOwnPositiontrue;
Describe the following Arma 3 code: vehicleplayersetVehicleReportRemoteTargetstrue;
Describe the following Arma 3 code: vehicleReceiveRemoteTargetsvehicleplayer;
Describe the following Arma 3 code: vehicleReportOwnPositionvehicleplayer;
Describe the following Arma 3 code: vehicleReportRemoteTargetsvehicleplayer;
Describe the following Arma 3 code: westaddScoreSide10;
Describe the following Arma 3 code: private_airportSide=airportSide0;
Describe the following Arma 3 code: _allSites=allSites;
Describe the following Arma 3 code: if(sideplayer==blufor)then{hint"BLUFOR";};
Describe the following Arma 3 code: if(captive_general)then{removeAllWeapons_general;};
Describe the following Arma 3 code: _captivity=captiveNum_unit;
Describe the following Arma 3 code: ?side_unit==civilian:hint"This is a civilian unit!"
Describe the following Arma 3 code: _num=playercountEnemylist_triggerOne;
Describe the following Arma 3 code: _num=playercountFriendlylist_triggerOne;
Describe the following Arma 3 code: _num=westcountSidelist_triggerOne;
Describe the following Arma 3 code: _num=playercountUnknownlist_triggerOne;
Describe the following Arma 3 code: createCentereast;
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: deleteCentereast;
Describe the following Arma 3 code: ?side_unit==east:hint"This is an eastern unit!"
Describe the following Arma 3 code: ?_side==enemy:hint"ouch"
Describe the following Arma 3 code: private_playerFaction=factionplayer;
Describe the following Arma 3 code: ?_side==friendly:hint"Hey buddy!"
Describe the following Arma 3 code: value=westgetFriendeast;
Describe the following Arma 3 code: if(side_unit==independent)then{hint"This is a independent unit!";};
Describe the following Arma 3 code: _knowledge=playerknowsAbout_target;
Describe the following Arma 3 code: if(sideplayer==opfor)then{hint"OPFOR";};
Describe the following Arma 3 code: if(sideman1==playerSide)then{hint"man1 is on your side!";};
Describe the following Arma 3 code: if(side_unit==resistance)then{hint"This is a resistance unit!";};
Describe the following Arma 3 code: _number=scoreSidewest;
Describe the following Arma 3 code: 0setAirportSideeast;
Describe the following Arma 3 code: _soldier1setCaptivetrue;side_soldier1;// returns civiliansidegroup_soldier1;// returns e.g blufor
Describe the following Arma 3 code: westsetFriend[resistance,0];// west will not like resistance from now on
Describe the following Arma 3 code: _myLocationsetSideresistance;
Describe the following Arma 3 code: if(sideplayer==west)then{hint"Player is on the West side"};
Describe the following Arma 3 code: _sideAmbientLife=sideAmbientLife;
Describe the following Arma 3 code: _sideEmpty=sideEmpty;
Describe the following Arma 3 code: if(sideplayer==sideEnemy)then{hint"We've got a renegade!";};
Describe the following Arma 3 code: if(sideplayer==sideFriendly)then{hint"I feel friendly today!";};
Describe the following Arma 3 code: if(side_obj==sideLogic)then{hint"It is a logic!";};
Describe the following Arma 3 code: //soldier1 and soldier2 of different sides and out of sightsoldier1revealsoldier2;hintstr(soldier1nearTargets1000);//returns: [[[1557.96,5047.4,1.32402],"SoldierWB",UNKNOWN,0.0155183,soldier2,5]]soldier1reveal[soldier2,1.5];//returns: [[[1556.52,5050.08,1.32402],"SoldierWB",WEST,0.0211193,soldier2,5]]
Describe the following Arma 3 code: ?side_unit==west:hint"This is a western unit!"
Describe the following Arma 3 code: WFSideTextplayer;
Describe the following Arma 3 code: private_ehID=addMusicEventHandler["MusicStart",{hintstr_this}];
Describe the following Arma 3 code: private_sources=allEnv3DSoundSources;
Describe the following Arma 3 code: _soldierOnecommandChat"Show this text";
Describe the following Arma 3 code: _soldierOnecommandRadio"messageOne";
Describe the following Arma 3 code: _soundSource=createSoundSource["LittleDog",positionplayer,[],0];
Describe the following Arma 3 code: _soldierOnecustomRadio[1,"WordEnemy"];
Describe the following Arma 3 code: playerdirectSayconfigNameselectRandom("true"configClasses(configFile>>"CfgRadio"));
Describe the following Arma 3 code: [_obj,["building_interior",true]]remoteExec["enableAudioFeature",0,_obj];
Describe the following Arma 3 code: enableEnvironmentfalse;// identical to enableEnvironment [false, false]
Describe the following Arma 3 code: enableRadiofalse;
Describe the following Arma 3 code: enableSentencesfalse;
Describe the following Arma 3 code: _enabled=environmentEnabled;
Describe the following Arma 3 code: hintstrenvironmentVolume;
Describe the following Arma 3 code: 5fadeEnvironment0.1;
Describe the following Arma 3 code: 5fadeMusic0;// fade current music volume to 0 in 5 sec
Describe the following Arma 3 code: 5fadeRadio0.1;
Describe the following Arma 3 code: 5fadeSound0;
Describe the following Arma 3 code: 5fadeSpeech0.1;
Describe the following Arma 3 code: getAllEnv3DSoundControllers_thatTreeOverThere;/*
	returns e.g
	[
		["rain",0],
		["night",0],
		["wind",0.161588],
		...
	]
*/
Describe the following Arma 3 code: getAllEnvSoundControllerspositionplayer;/*
	returns e.g
	[
		["rain",0],
		["night",0],
		["windy",0.161588],
		...
	]
*/
Describe the following Arma 3 code: getAllSoundControllersvehicleplayer;/*
	returns e.g
	[
		["rpm",0],
		["randomizer",0.874332],
		["speed",0],
		["thrust",0],
		...
	]
*/
Describe the following Arma 3 code: getAudioOptionVolumesparams["_effects","_music","_radio","_von","_ui","_map"];
Describe the following Arma 3 code: getCustomSoundController[vehicleplayer,"CustomSoundController1"];
Describe the following Arma 3 code: getCustomSoundControllerCountvehicleplayer;
Describe the following Arma 3 code: _thatTreeOverTheregetEnv3DSoundController"rainDrops";// returns 1
Describe the following Arma 3 code: positionplayergetEnvSoundController"trees";//0.3333
Describe the following Arma 3 code: playMusic["LeadTrack06_F_Tank",0];onEachFrame{hintSilentstrgetMusicPlayedTime};
Describe the following Arma 3 code: vehicleplayergetSoundController"rpm";//600
Describe the following Arma 3 code: _result=(vehicleplayer)getSoundControllerResult(configFile>>"cfgVehicles">>typeOf(vehicleplayer)>>"sounds">>"idle_ext">>"volume");
Describe the following Arma 3 code: _soldierOneglobalRadio"messageOne";
Describe the following Arma 3 code: _soldierOnegroupRadio"messageOne";
Describe the following Arma 3 code: hintstrmusicVolume;
Describe the following Arma 3 code: onBriefingGear"GearVoiceOver";
Describe the following Arma 3 code: onBriefingGroup"GroupVoiceOver";
Describe the following Arma 3 code: onBriefingNotes"NotesVoiceOver";
Describe the following Arma 3 code: onBriefingPlan"PlanVoiceOver";
Describe the following Arma 3 code: onBriefingTeamSwitch"TeamSwitchVoiceOver";
Describe the following Arma 3 code: pitchplayer;
Describe the following Arma 3 code: playMusic"RadioAmbient1";
Describe the following Arma 3 code: playSound"soundname";
Describe the following Arma 3 code: playSound3D["A3\Sounds_F\sfx\blip1.wss",player]
Describe the following Arma 3 code: playSoundUI["Alarm",0.5,0.5];
Describe the following Arma 3 code: {waitUntil{preloadSound_x};}forEachgetArray(missionConfigFile>>"CfgSounds">>"sounds");
Describe the following Arma 3 code: hintstrradioVolume;
Describe the following Arma 3 code: removeAllMusicEventHandlers"MusicStart";
Describe the following Arma 3 code: removeMusicEventHandler["MusicStart",12];
Describe the following Arma 3 code: (unitsplayerselect1)say["whisper1",5];
Describe the following Arma 3 code: playersay2D"HelloThere";
Describe the following Arma 3 code: helicopter1say3D"FortunateSon";
Describe the following Arma 3 code: format["CustomSoundController%1",_number];
Describe the following Arma 3 code: _triggersetMusicEffect"Track1";
Describe the following Arma 3 code: _ehID=setMusicEventHandler["MusicStart","hint str _this"];
Describe the following Arma 3 code: unit1setPitch0.5;
Describe the following Arma 3 code: _triggersetSoundEffect["Alarm","","",""];
Describe the following Arma 3 code: unit1setSpeaker"Male02GRE";
Describe the following Arma 3 code: _soldierOnesideRadio"messageOne";
Describe the following Arma 3 code: _params=soundParams10;
Describe the following Arma 3 code: hintstrsoundVolume;
Describe the following Arma 3 code: speakerplayer;// Can return "male09eng"
Describe the following Arma 3 code: hintstrspeechVolume;
Describe the following Arma 3 code: stopSound10;
Describe the following Arma 3 code: _soldierOnevehicleRadio"messageOne";
Describe the following Arma 3 code: playerallowSprintfalse;
Describe the following Arma 3 code: playerenableAimPrecisionfalse;
Describe the following Arma 3 code: playerenableFatiguefalse;
Describe the following Arma 3 code: playerenableStaminatrue;
Describe the following Arma 3 code: playerforceWalktrue;
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: private_aimPrecision=getAnimAimPrecisionplayer;
Describe the following Arma 3 code: if(getAnimSpeedCoefplayer>1)then{hint"Speedy Gonzales!"};
Describe the following Arma 3 code: _coef=getCustomAimCoefplayer;
Describe the following Arma 3 code: value=getFatigueplayer;
Describe the following Arma 3 code: getStaminaplayer;
Describe the following Arma 3 code: _sway=getWeaponSwayplayer;
Describe the following Arma 3 code: _isAffected=isAimPrecisionEnabledplayer;
Describe the following Arma 3 code: _bool=isForcedWalkplayer;
Describe the following Arma 3 code: if(notisSprintAllowedplayer)then{hint"no running in the corridors!"};
Describe the following Arma 3 code: if(isStaminaEnabledplayer)then{hint"You can get exhausted."};
Describe the following Arma 3 code: playersetAnimSpeedCoef0.75;
Describe the following Arma 3 code: playersetCustomAimCoef3;
Describe the following Arma 3 code: playersetFatigue1;
Describe the following Arma 3 code: playersetStamina42;
Describe the following Arma 3 code: setStaminaScheme"Default";
Describe the following Arma 3 code: 5+3// returns  8-5+-3// returns -8
Describe the following Arma 3 code: comment"This is a commented line";// bad"This is a commented line";// good// This is a commented line				// perfect
Describe the following Arma 3 code: _string="a = a + 1";_code=compile_string;call_code;
Describe the following Arma 3 code: MyCode=compileFinal"a = a + 1";callMyCode;// Repeated compile won't have any effectMyCode=compileFinal"a = a + 2";// Duplicate code will be final as wellMyDuplicateCode=MyCode;
Describe the following Arma 3 code: hintcomposeText["Image: ",image"\a3\Data_f\Flags\flag_Altis_co.paa"];
Describe the following Arma 3 code: hintcopyFromClipboard;
Describe the following Arma 3 code: copyToClipboardstr_data;
Describe the following Arma 3 code: count[0,0,1,2];// returns 4countunitsgroupplayer;// returns number of units in player group
Describe the following Arma 3 code: private_randomKey=selectRandomdiag_localized"Global";hintformat["Key: %1\nValue: %2",_randomKey,localize_randomKey];
Describe the following Arma 3 code: hintstrcount"\r\n";// 4hintstrcountendl;// 2
Describe the following Arma 3 code: ["Apples","Oranges","Pears"]find"Oranges";// returns 1
Describe the following Arma 3 code: copyToClipboard"д";// copies "Ð´" to clipboardforceUnicode1;copyToClipboard"д";// copies "д" to clipboard
Describe the following Arma 3 code: format["Player:%1, player's side:%2",player,sideplayer];// returns "Player:WEST 1-1-A:1 (Username), player's side:WEST"
Describe the following Arma 3 code: hintformatText["Image: %1",image"\a3\Data_f\Flags\flag_Altis_co.paa"];
Describe the following Arma 3 code: _textWidth="Hello World"getTextWidth["PuristaMedium",0.03];
Describe the following Arma 3 code: // outputs the following:// Press W to move forward.// Press S to move backwards.hint"Press W to move forward.\nPress S to move backwards."
Describe the following Arma 3 code: hintC"Press W to move forward";
Describe the following Arma 3 code: hintSilentformat["Hello, %1!",nameplayer];
Describe the following Arma 3 code: hintcomposeText["Image: ",image"\a3\Data_f\Flags\flag_Altis_co.paa"];
Describe the following Arma 3 code: 1in[0,1,2];// true
Describe the following Arma 3 code: "Test"insert[0,"Radio"];// returns "RadioTest""Test"insert[2,"Radio"];// returns "TeRadiost""Test"insert[-1,"Radio"];// returns "TestRadio"
Describe the following Arma 3 code: if(isLocalized"STR_USRACT_ADJUST")then{hintlocalize"STR_USRACT_ADJUST";}else{hint"STR_USRACT_ADJUST";diag_log"ToDo: STR_USRACT_ADJUST is not localized";};
Describe the following Arma 3 code: _str="- This, is a sample string."splitString"-,. ";// ["This","is","a","sample","string"]_strjoinString" ";// "This is a sample string"
Describe the following Arma 3 code: hintcomposeText["First line",lineBreak,"Second line"];
Describe the following Arma 3 code: hintlocalize"STR_WEST";// returns "BLUFOR"
Describe the following Arma 3 code: _number=parseNumber"0.125";// 0.125_number=parseNumber"0050";// 50_number=parseNumber"   42 yes";// 42_number=parseNumber"3 or 4";// 3_number=parseNumber"either 3 or 4";// 0_number=parseNumber"0xCF";// 0
Describe the following Arma 3 code: private_arr=parseSimpleArray"[1,2,3]";
Describe the following Arma 3 code: private_Stxt=parseText"First line<img image='data\isniper.paa'/><br/>Second line";
Describe the following Arma 3 code: ["a","b","c","d"]select2;// result is "c"positionplayerselect2;// result is Z coordinate of player position
Describe the following Arma 3 code: _txt=text"Red text, right align";_txtsetAttributes["color","#FF0000","align","right"];hintcomposeText[_txt];
Describe the following Arma 3 code: _str="- This, is a sample string."splitString"-,. ";// ["This","is","a","sample","string"]_strjoinString"#";// "This#is#a#sample#string"
Describe the following Arma 3 code: _s=str(5+2);// The value of _s is the string "7"
Describe the following Arma 3 code: _stxt2=text"Hello world.";
Describe the following Arma 3 code: hintformat["%1",toArray"AaŒ"];// Returns "[65,97,338]"
Describe the following Arma 3 code: 123toFixed2;// "123.00"
Describe the following Arma 3 code: hinttoLower"AaBb1";// returns "aabb1"
Describe the following Arma 3 code: hinttoLowerANSI"AaBb1";// returns "aabb1"
Describe the following Arma 3 code: hinttoString[65,97,338];// returns "AaŒ"
Describe the following Arma 3 code: hinttoUpper"AaBb1";// returns "AABB1"
Describe the following Arma 3 code: hinttoUpperANSI"AaBb1";// returns "AABB1"
Describe the following Arma 3 code: trim"		hello, how are you?  ";// returns "hello, how are you?"
Describe the following Arma 3 code: hintcomposeText["Image: ",image"\a3\Data_f\Flags\flag_Altis_co.paa"];
Describe the following Arma 3 code: _controlctrlSetStructuredTextparseText"First line<img image=data\isniper.paa /><br />Second line"
Describe the following Arma 3 code: hintformatText["Image: %1",image"\a3\Data_f\Flags\flag_Altis_co.paa"];
Describe the following Arma 3 code: // outputs the following:// Press W to move forward.// Press S to move backwards.hint"Press W to move forward.\nPress S to move backwards."
Describe the following Arma 3 code: hintC"Press W to move forward";
Describe the following Arma 3 code: hintSilentformat["Hello, %1!",nameplayer];
Describe the following Arma 3 code: hintcomposeText["Image: ",image"\a3\Data_f\Flags\flag_Altis_co.paa"];
Describe the following Arma 3 code: hintcomposeText["First line",lineBreak,"Second line"];
Describe the following Arma 3 code: private_Stxt=parseText"First line<img image='data\isniper.paa'/><br/>Second line";
Describe the following Arma 3 code: _txt=text"Red text, right align";_txtsetAttributes["color","#FF0000","align","right"];hintcomposeText[_txt];
Describe the following Arma 3 code: _stxt2=text"Hello world.";
Describe the following Arma 3 code: playeraddLiveStats10;
Describe the following Arma 3 code: _points=armoryPoints;
Describe the following Arma 3 code: ?(benchmark>2000):setViewDistance2000
Describe the following Arma 3 code: buldozer_enableRoadDiagtrue;
Describe the following Arma 3 code: _isEnabled=buldozer_isEnabledRoadDiag;
Describe the following Arma 3 code: _loaded=buldozer_loadNewRoads"C:/A3/Map_Stratis/data/roads/"
Describe the following Arma 3 code: buldozer_reloadOperMap;
Describe the following Arma 3 code: calculatePlayerVisibilityByFriendlytrue;
Describe the following Arma 3 code: _return="myExtension"callExtension"stringToBeParsed";
Describe the following Arma 3 code: _enabled=cheatsEnabled;
Describe the following Arma 3 code: compileScript["a3\props_f_enoch\military\equipment\scripts\meteo.sqf"];// has the same functionality ascompilepreprocessFileLineNumbers"a3\props_f_enoch\military\equipment\scripts\meteo.sqf";
Describe the following Arma 3 code: _completed=completedFSM_fsmHandle;
Describe the following Arma 3 code: connectToServer["192.168.0.2",2302,"test"];
Describe the following Arma 3 code: hintcopyFromClipboard;
Describe the following Arma 3 code: copyToClipboardstr_data;
Describe the following Arma 3 code: if(currentNamespaceisEqualTouiNamespace)then{hint"This is uiNamespace"};
Describe the following Arma 3 code: if(distributionRegion==1)then{hint"miles";}else{hint"kilometres";};
Describe the following Arma 3 code: enableCausticstrue;
Describe the following Arma 3 code: enableSatNormalOnDetailtrue;
Describe the following Arma 3 code: startLoadingScreen["Loading My Mission"];// codeprogressLoadingScreen0.5;// codeendLoadingScreen;
Describe the following Arma 3 code: exportLandscapeXYZ"myLandscape.txt";
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: freeExtension"myExt";
Describe the following Arma 3 code: if(!getCalculatePlayerVisibilityByFriendly)then{calculatePlayerVisibilityByFriendlytrue;};
Describe the following Arma 3 code: getFieldManualStartPage(findDisplay46);// returns ["", ""]
Describe the following Arma 3 code: // returns e.g "C:\Users\Username\Documents\Arma 3\missions\MissionName.Altis\icons\myIcon.paa"private_path=getMissionPath"icons\myIcon.paa";private_path=getMissionPath"\icons\myIcon.paa";// leading \ is also fine
Describe the following Arma 3 code: _arr=getObjectViewDistance;
Describe the following Arma 3 code: private_pipViewDistance=getPiPViewDistance;
Describe the following Arma 3 code: private_res=getResolution;
Describe the following Arma 3 code: _value=getShadowDistance;
Describe the following Arma 3 code: getStatValue"ExpWarlockDown";// Checks if the "Warlock Down" Achivement was already aquired
Describe the following Arma 3 code: getSteamFriendsServers;// returns e.g [["127.42.33.8:2302", "MyFriend"], ["127.84.66.16:4604", "My Best Friend"]]
Describe the following Arma 3 code: _terrainGrid=getTerrainGrid;
Describe the following Arma 3 code: getTextureInfo"a3\characters_f\blufor\data\clothing1_co.paa";// [2048, 2048, [0.458824, 0.427451, 0.34902, 1]]
Describe the following Arma 3 code: private_videoOptions=getVideoOptions;/*
[
	["GPUName", "NVIDIA GeForce GTX 1660"],
	["aspectRatioName", "Auto (Stretch)"],
	["brightness", 1],
	["cloudQualityName", "VeryLow"],
	["displayModeName", "Window"],
	["dynLightsCount", 4],
	["dynLightsQualityName", "VeryLow"],
	["gamma", 1],
	["guiScale", 0.55],
	["guiScaleName", "Small"],
	["hdrQuality", 16],
	["hdrQualityName", "Normal"],
	["monitorResolution", [0, 0, 2304, 1440]],							// presence not guaranteed
	["objQualityName", "VeryLow"],
	["objectVisibility", 800],
	["overallPresetName", "VeryLow"],
	["overallVisibility", 1000],
	["particleQualityName", "Low"],
	["pipQuality", 512],
	["pipQualityName", "VeryLow"],
	["pipVisibility", 835],
	["ppBloom", 0],
	["ppBrightness", 1],
	["ppCausticsQualityName", "Disabled"],
	["ppColorPresetName", "Default"],
	["ppContrast", 1],
	["ppDOF", 0],
	["ppFSAA", 1]
	["ppPPAAQualityName", "Disabled"],
	["ppRadialBlur", 0],
	["ppRotationBlur", 0],
	["ppSSAOQualityName", "Disabled"],
	["ppSaturation", 1],
	["ppSharpenFilter", 0],
	["refreshRate", 60],
	["samplingPercentage", 100],
	["shadowQualityName", "Low"],
	["shadowVisibility", 100],
	["terrainQuality", 25],
	["terrainQualityName", "Low"],
	["texQualityName", "VeryLow"],
	["vramInfo", ["5.8 GiB", "7.9 GiB", "0 B", "231 MiB", "5.5 GiB"]],	// presence not guaranteed
	["vsync", false],
	["waterReflectionQualityName", "Disabled"]
];
*/
Describe the following Arma 3 code: _number=hierarchyObjectsCount;
Describe the following Arma 3 code: _bool=isAutotest;
Describe the following Arma 3 code: _state=isFilePatchingEnabled;
Describe the following Arma 3 code: if(!isGameFocused)then{endMission"End"};
Describe the following Arma 3 code: onEachFrame{if(isGamePaused)exitWith{};// ...do stuff};
Describe the following Arma 3 code: private_PiPState=isPiPEnabled;
Describe the following Arma 3 code: hintstrisStreamFriendlyUIEnabled;
Describe the following Arma 3 code: _image=keyImage28;// result is "Enter"
Describe the following Arma 3 code: _name=keyName28;// result is """Enter"""
Describe the following Arma 3 code: _myLanguage=language;// will return "English" if game language is set to English
Describe the following Arma 3 code: hintstrlibraryCredits;// as of Arma 2 OA 1.62.95208/*
[
	[
		"Botan",
		"1999-2012 Jack Lloyd, 2001 Peter J Jones, 2004-2007 Justin Karneges, 2004 Vaclav Ovsik, 2005 Matthew Gregan, 2005-2006 Matt Johnston, 2006 Luca Piccarreta, 2007 Yves Jerschow, 2007-2008 FlexSecure GmbH, 2007-2008 Technische Universitat Darmstadt, 2007-2008 Falko Strenzke, 2007-2008 Martin Doering, 2007 Manuel Hartl, 2007 Christoph Ludwig, 2007 Patrick Sona, 2010 Olivier de Gaalon"
	],
	[
		"rapidjson",
		"2011 Milo Yip"
	],
	[
		"libcurl",
		"Copyright (c) 1996 - 2012, Daniel Stenberg"
	],
	[
		"GameSpy",
		"2009 GameSpy Industries, Inc."
	],
	[
		"Theora",
		"2002-2009 by the Xiph.Org Foundation http://www.xiph.org/"
	],
	[
		"OggVorbis",
		"1994-2002 by the Xiph.Org Foundation http://www.xiph.org/"
	],
	[
		"Intel JPEG Library",
		"1998 Intel Corporation"
	],
	[
		"Matrix Template Library",
		"2001-2005 The Trustees of Indiana University"
	],
	[
		"Matrix Template Library",
		"1998-2001 University of Notre Dame"
	],
	[
		"Speex",
		"2002-2006 Jean-Marc Valin"
	],
	[
		"LZO Professional",
		"1996-2011 Markus Franz Xaver Johannes Oberhumer"
	],
	[
		"NVIDIA FXAA by TIMOTHY LOTTES",
		"2010, 2011 NVIDIA CORPORATION"
	],
	[
		"Jimenez's MLAA",
		"2012 2011 by Jorge Jimenez, Belen Masia, Jose I. Echevarria, Fernando Navarro and Diego Gutierrez"
	]
]
*/
Describe the following Arma 3 code: hintstrlibraryDisclaimers;/*
	returns, in Arma 2:OA 1.62.95208:
	["THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."]
*/
Describe the following Arma 3 code: openDSInterface;
Describe the following Arma 3 code: openSteamApp553228;
Describe the following Arma 3 code: // open http://www.youtube.com/watch?v=UBIAbm7Rt78_isOpened=openYoutubeVideo"watch?v=UBIAbm7Rt78";
Describe the following Arma 3 code: playMission["XOutrage","x05Negotiator.Noe"];
Describe the following Arma 3 code: playScriptedMission["desert_e",{execVM"\ca\missions_e\data\scenes\credits1\init.sqf";},configFile/"CfgMissions"/"Cutscenes"/"Credits"];
Describe the following Arma 3 code: _content=preprocessFile"myFunction.sqf";
Describe the following Arma 3 code: _string=preprocessFileLineNumbers"A3\ui_f\scripts\IGUI\RscUnitInfo.sqf"
Describe the following Arma 3 code: processInitCommands;
Describe the following Arma 3 code: hintstrproductVersion;// would return ["Arma 2 OA", "arma2oa", 162, 95208] on Arma 2 OA 1.62.95208
Describe the following Arma 3 code: _myInGameProfileName=profileName;
Describe the following Arma 3 code: _mySteamProfileName=profileNameSteam;
Describe the following Arma 3 code: startLoadingScreen["Loading My Mission"];//// batch of code//progressLoadingScreen0.25;//// batch of code//progressLoadingScreen0.50;//// batch of code//progressLoadingScreen0.95;//// batch of code//endLoadingScreen;
Describe the following Arma 3 code: if!(requiredVersion"1.09")exitWith{};
Describe the following Arma 3 code: if(reversedMouseY)then{hint"Dude!"};
Describe the following Arma 3 code: runInitScript;
Describe the following Arma 3 code: saveJoysticks;
Describe the following Arma 3 code: screenshot"";
Describe the following Arma 3 code: setArmoryPoints(armoryPoints+20);
Describe the following Arma 3 code: setDetailMapBlendPars[20,50];
Describe the following Arma 3 code: _handle=execFSM"test.fsm";_handlesetFSMVariable["_foo",23];// sets variable _foo in the FSM to 23
Describe the following Arma 3 code: setHorizonParallaxCoef1;
Describe the following Arma 3 code: setObjectViewDistance2000;
Describe the following Arma 3 code: setPiPViewDistance100;
Describe the following Arma 3 code: setShadowDistance200;
Describe the following Arma 3 code: setStatValue["ExpWarlockDown",1];// Unlocks the "Warlock Down" Steam achivement
Describe the following Arma 3 code: if(playerin_myHelicopter)then{setSystemOfUnits2;};
Describe the following Arma 3 code: setTerrainGrid12.5;
Describe the following Arma 3 code: setToneMapping"Filmic";
Describe the following Arma 3 code: "Filmic"setToneMappingParams[0.2,0.30,0.20,0.30,0.01,3.750,6,4];
Describe the following Arma 3 code: setViewDistance2250;
Describe the following Arma 3 code: _info=squadParamsplayer;
Describe the following Arma 3 code: startLoadingScreen["Loading My Mission, please wait..."];
Describe the following Arma 3 code: supportInfo"b:select*";// returns ["b:ARRAY select SCALAR","b:ARRAY select BOOL","b:CONFIG select SCALAR"]
Describe the following Arma 3 code: _system=systemOfUnits;
Describe the following Arma 3 code: _isUnlocked=unlockAchievement"Hunter";
Describe the following Arma 3 code: useAIOperMapObstructionTesttrue;
Describe the following Arma 3 code: hint("my view distance is "+strviewDistance+" meters");
Describe the following Arma 3 code: addSwitchableUnitbob;
Describe the following Arma 3 code: enableTeamSwitchtrue;
Describe the following Arma 3 code: onBriefingTeamSwitch"TeamSwitchVoiceOver";
Describe the following Arma 3 code: onTeamSwitch{[_from,_to]execVM"myTeamSwitchScript.sqf";};
Describe the following Arma 3 code: removeSwitchableUnit_unit1;
Describe the following Arma 3 code: _availableUnits=switchableUnits;
Describe the following Arma 3 code: teamSwitch;
Describe the following Arma 3 code: _isTeamSwitchEnabled=teamSwitchEnabled;
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: _teamaddTeamMember_teamMember;
Describe the following Arma 3 code: _obj=agentteamMember_unit;
Describe the following Arma 3 code: {agent_xmoveTopositionplayer}forEachagents;
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: _team=createTeam["USMC_Team","Fire Team Red"];
Describe the following Arma 3 code: currentTasksteamMember_agent;
Describe the following Arma 3 code: teamMember_agentdeleteResources["Legs"];
Describe the following Arma 3 code: deleteTeam_team;
Describe the following Arma 3 code: isAgentteamMember_unit;
Describe the following Arma 3 code: _members=members_team;
Describe the following Arma 3 code: tasklist=registeredTasksteamMember_agent;
Describe the following Arma 3 code: teamMember_agentregisterTask"MyTask";
Describe the following Arma 3 code: _teamremoveTeamMember_teamMember;
Describe the following Arma 3 code: resourcesteamMember_unit;
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: _agent=teamMemberplayer;
Describe the following Arma 3 code: teamMemberNull==teamMemberNull;// falseisNullteamMemberNull;// trueteamMemberNullisEqualToteamMemberNull;// true
Describe the following Arma 3 code: _name=teamName_team;
Describe the following Arma 3 code: _teams=teams;
Describe the following Arma 3 code: _type=teamType_team;
Describe the following Arma 3 code: _acc=accTime;
Describe the following Arma 3 code: dayTime;// returns 16.5 given it is 16:30 (4.30pm) in game
Describe the following Arma 3 code: private_frameTime=diag_deltaTime;
Describe the following Arma 3 code: // Measure execution time of a script_start=diag_tickTime;// code_stop=diag_tickTime;diag_logformat["%1",_stop-_start];
Describe the following Arma 3 code: _min=(ceil(estimatedEndServerTime-serverTime)/60);
Describe the following Arma 3 code: estimatedTimeLeft600;// 10 min
Describe the following Arma 3 code: hintformat["Synced server time : %1",serverTime];
Describe the following Arma 3 code: setAccTime0.1;
Describe the following Arma 3 code: setTimeMultiplier60;
Describe the following Arma 3 code: skipTime5;
Describe the following Arma 3 code: private_currentTime=systemTime;
Describe the following Arma 3 code: private_UKTime=systemTimeUTC;
Describe the following Arma 3 code: private_future=time+30;waitUntil{time>=_future};// continue after 30 seconds
Describe the following Arma 3 code: _multiplier=timeMultiplier;
Describe the following Arma 3 code: _trg=createTrigger["EmptyDetector",getPosplayer];_trgsetTriggerArea[5,5,0,false];_trgsetTriggerActivation["CIV","PRESENT",true];_trgsetTriggerStatements["this","hint 'Civilian near player'","hint 'no civilian near'"];
Describe the following Arma 3 code: _playerIsInside=playerinArea_myTrigger;
Describe the following Arma 3 code: vehiclesinAreaArraymyTrigger;
Describe the following Arma 3 code: private_players=callBIS_fnc_listPlayers;private_indices=_playersinAreaArrayIndexes_marker;{private_player=_playersselect_x;["You are in the marker!"]remoteExec["hint",_player];}forEach_indices;
Describe the following Arma 3 code: _triggerList=list_triggerOne;
Describe the following Arma 3 code: _triggerObjsetEffectCondition"thisList";
Describe the following Arma 3 code: _triggersetMusicEffect"Track1";
Describe the following Arma 3 code: 1setRadioMsg"Click meeeeeeeeee";//changes title of radio Alpha
Describe the following Arma 3 code: _triggersetSoundEffect["Alarm","","",""];
Describe the following Arma 3 code: _triggersetTitleEffect["TEXT","PLAIN DOWN","Hello world."];
Describe the following Arma 3 code: _triggersetTriggerActivation["WEST","EAST D",true];
Describe the following Arma 3 code: _triggersetTriggerArea[100,50,45,false];
Describe the following Arma 3 code: _triggersetTriggerInterval5;
Describe the following Arma 3 code: _trgsetTriggerStatements["this","hint 'trigger on'","hint 'trigger off'"];
Describe the following Arma 3 code: triggersetTriggerText"Call for support";
Describe the following Arma 3 code: _triggersetTriggerTimeout[5,10,7,false];
Describe the following Arma 3 code: _triggersetTriggerType"END1";
Describe the following Arma 3 code: synchronizedTriggers_someWaypoint;
Describe the following Arma 3 code: synchronizedWaypoints_someTrigger;
Describe the following Arma 3 code: _triggersynchronizeTrigger[];
Describe the following Arma 3 code: _myTriggersynchronizeWaypoint[[_group2,3]];
Describe the following Arma 3 code: if(triggerActivatedtrg1)then{// code};
Describe the following Arma 3 code: _activation=triggerActivationsomeTrigger;
Describe the following Arma 3 code: _area=triggerAreasensor1;// result is [200, 120, 45, false, -1];
Describe the following Arma 3 code: _result=triggerAttachedVehicletriggerName;
Describe the following Arma 3 code: _triggertriggerAttachObject1234;
Describe the following Arma 3 code: triggertriggerAttachVehicle[player];
Describe the following Arma 3 code: _interval=triggerIntervalsomeTrigger;
Describe the following Arma 3 code: _statements=triggerStatementssomeTrigger;
Describe the following Arma 3 code: _text=triggerTexttriggerName;
Describe the following Arma 3 code: _timeOut=triggerTimeoutsomeTrigger;
Describe the following Arma 3 code: private_remaining=triggerTimeoutCurrent_trigger;
Describe the following Arma 3 code: _type=triggerTypetr1;
Describe the following Arma 3 code: _tankaddMagazineTurret["SmokeLauncherMag",[0,0]];
Describe the following Arma 3 code: _tankaddWeaponTurret["LMG_M200",[0,0]];
Describe the following Arma 3 code: _turretPaths=allTurrets_mySlammerUP;// [[0],[0,0]]_turretPaths=allTurrets[_mySlammerUP,true];// [[0],[0,0]] <- Commander turret is also an FFV turret_turretPaths=allTurrets[_mySlammerUP,false];// [[0]]
Describe the following Arma 3 code: playerassignAsTurret[BIS_vehicle,[0,1]];
Describe the following Arma 3 code: _magazineDetail=MBT_KumacurrentMagazineDetailTurret[0];
Describe the following Arma 3 code: _magazine=MBT_KumacurrentMagazineTurret[0];
Describe the following Arma 3 code: _weapon=MBT_KumacurrentWeaponTurret[0];
Describe the following Arma 3 code: uavdirectionStabilizationEnabled[0];
Describe the following Arma 3 code: uavenableDirectionStabilization[false,[0]];// Disable direction stabilization for the first turret
Describe the following Arma 3 code: helienablePersonTurret[[1],true];
Describe the following Arma 3 code: private_turretLimits=m2getTurretLimits[0];_turretLimitsparams["_minTurn","_maxTurn","_minElev","_maxElev","_overridden"];
Describe the following Arma 3 code: getTurretOpticsModeplayer;
Describe the following Arma 3 code: vehicleplayerloadMagazine[[0],"m256","20Rnd_120mmHE_M1A2"];
Describe the following Arma 3 code: _locked=tanklockedTurret[0];
Describe the following Arma 3 code: vehicleNamelockTurret[[0,0],true];
Describe the following Arma 3 code: _mags=magazinesAllTurretsvehicleplayer;
Describe the following Arma 3 code: _mags=vehicleplayermagazinesTurret[0,0];
Describe the following Arma 3 code: vehicleplayermagazineTurretAmmo["cls",[0]];
Describe the following Arma 3 code: _soldierOnemoveInTurret[_tank,[0,0]];
Describe the following Arma 3 code: vehicleplayerremoveMagazinesTurret["60rnd_cmflaremagazine",[-1]];
Describe the following Arma 3 code: vehicleplayerremoveMagazineTurret["60rnd_cmflaremagazine",[-1]];
Describe the following Arma 3 code: _tankremoveWeaponTurret["LMG_M200",[0,0]];
Describe the following Arma 3 code: MBT_KumaselectWeaponTurret["LMG_coax",[0]];
Describe the following Arma 3 code: myMRAPsetMagazineTurretAmmo["200Rnd_127x99_mag_Tracer_Red",30,[0]]];
Describe the following Arma 3 code: m2setTurretLimits[[0],-45,45,-10,10];
Describe the following Arma 3 code: playersetTurretOpticsMode0;
Describe the following Arma 3 code: _isLocal=vehicleplayerturretLocal[0];
Describe the following Arma 3 code: _ownerId=vehicleplayerturretOwner[0];
Describe the following Arma 3 code: _vehicleturretUnit_thisTurret;
Describe the following Arma 3 code: _vehicleunitTurret_gunner;
Describe the following Arma 3 code: _weapons=vehicleplayerweaponsTurret[0,0];
Describe the following Arma 3 code: [_soldier1,_soldier2]allowGetIntrue;
Describe the following Arma 3 code: _soldier1assignAsCargo_truck;[_soldier1]orderGetIntrue;
Describe the following Arma 3 code: playerassignAsCargoIndex[myHelicopter,1];
Describe the following Arma 3 code: _soldier1assignAsCommander_tank;[_soldier1]orderGetIntrue;
Describe the following Arma 3 code: _soldier1assignAsDriver_tank;[_soldier1]orderGetIntrue;
Describe the following Arma 3 code: _soldier1assignAsGunner_tank;[_soldier1]orderGetIntrue;
Describe the following Arma 3 code: _list=assignedCargo_vehicleName;
Describe the following Arma 3 code: _commander=assignedCommandervehicleName;
Describe the following Arma 3 code: _driver=assignedDrivervehicleName;
Describe the following Arma 3 code: _gunner=assignedGunnervehicleplayer;
Describe the following Arma 3 code: if(notattackEnabled_soldier)then{_soldiersetCombatMode"Careless"};
Describe the following Arma 3 code: _ESoldier1commandFire_WSoldier1;
Describe the following Arma 3 code: _soldier1commandFollow_soldier2;
Describe the following Arma 3 code: _soldierOnecommandFSM["move.fsm",positionplayer,player];
Describe the following Arma 3 code: commandGetOut_unitOne;
Describe the following Arma 3 code: _soldiercommandSuppressiveFire[1869.508,5760.962,0.000];
Describe the following Arma 3 code: _soldierOnecommandWatchmarkerPos"MarkerMoveOne";
Describe the following Arma 3 code: _command=currentCommandplayer;
Describe the following Arma 3 code: _ESoldier1doFire_WSoldier1;
Describe the following Arma 3 code: _soldier1doFollow_soldier2;
Describe the following Arma 3 code: _soldierOnedoFSM["move.fsm",positionplayer,player];
Describe the following Arma 3 code: doGetOut_unitOne;
Describe the following Arma 3 code: _soldier1doMove(position_officer);
Describe the following Arma 3 code: doStop_soldier1;
Describe the following Arma 3 code: _soldierdoSuppressiveFire[1869.508,5760.962,0.000];
Describe the following Arma 3 code: _unitdoWatchobjNull;
Describe the following Arma 3 code: _soldierOnedoWatchmarkerPos"MarkerMoveOne";
Describe the following Arma 3 code: _commander=effectiveCommandertank;
Describe the following Arma 3 code: _freeCargoAndFFVPositions=vehicleplayeremptyPositions"Cargo";
Describe the following Arma 3 code: _group1enableAttacktrue;
Describe the following Arma 3 code: _data=expectedDestinationplayer;
Describe the following Arma 3 code: _soldierfire"M16";
Describe the following Arma 3 code: _handle=thisfireAtTarget[groundtarget1,"HellfireLauncher"];
Describe the following Arma 3 code: carforceFollowRoadtrue;
Describe the following Arma 3 code: hintstr(getArray(configFile>>"CfgWeapons">>currentWeaponplayer>>"modes"));
Describe the following Arma 3 code: soldier1forgetTargetsoldier2;
Describe the following Arma 3 code: if(formationLeaderplayer!=leaderplayer)then{hint"Formation leader is not the group leader.";};
Describe the following Arma 3 code: if(formLeaderplayer!=leaderplayer)then{hint"The formation leader is different to the group leader!";};
Describe the following Arma 3 code: getCruiseControlvehicleplayerparams["_speedLimit","_cruiseControlActive"];
Describe the following Arma 3 code: _someSoldierglanceAt_otherSoldier;
Describe the following Arma 3 code: _unithideBehindScriptedtrue;
Describe the following Arma 3 code: 1in[0,1,2];// true
Describe the following Arma 3 code: _cobraOneland"LAND";
Describe the following Arma 3 code: _plane1landAt1;
Describe the following Arma 3 code: _result=landResultBIS_heli;
Describe the following Arma 3 code: leaveVehicle=un-addVehicle+unassignVehicleforEachcrew
Describe the following Arma 3 code: leaderplayerlimitSpeed5;// set to walking speedsleep30;leaderplayerlimitSpeed-1;// remove the limit
Describe the following Arma 3 code: _someSoldierlookAt_otherSoldier;
Describe the following Arma 3 code: _groupOnemovepositionplayer;
Describe the following Arma 3 code: playermoveInAnytank;
Describe the following Arma 3 code: _soldierOnemoveInCargo_jeepOne;
Describe the following Arma 3 code: _soldierOnemoveInCommander_tankOne;
Describe the following Arma 3 code: _soldierOnemoveInDriver_tankOne;
Describe the following Arma 3 code: soldierOnemoveInGunnertankOne;
Describe the following Arma 3 code: {if(lifeState_x=="UNCONSCIOUS")then{moveOut_x}}forEachcrewcursorTarget;
Describe the following Arma 3 code: _myAgentmoveTogetPosATLplayer;
Describe the following Arma 3 code: _isCompleted=moveToCompleted_unit;
Describe the following Arma 3 code: private_hasFailed=moveToFailed_unit;
Describe the following Arma 3 code: [_unitOne,_unitTwo]orderGetIntrue;
Describe the following Arma 3 code: soldierOneplayAction"SitDown";
Describe the following Arma 3 code: if(poseplayer=="SurfaceSwimming")then{hint"How's water?"};
Describe the following Arma 3 code: vehicleplayersendSimpleCommand"STOP";
Describe the following Arma 3 code: vehicleplayersetCruiseControl[50,true];// sets cruise control to 50 km/h
Describe the following Arma 3 code: bobsetDestination[screenToWorld[0.5,0.5],"LEADER PLANNED",true];
Describe the following Arma 3 code: vehicleplayersetEffectiveCommanderplayer;
Describe the following Arma 3 code: _unitsetFormationTask"MOVE";
Describe the following Arma 3 code: playerplayAction"PlayerProne";// DOWNplayerplayAction"PlayerStand";// UPplayerplayAction"PlayerCrouch";// MIDDLE
Describe the following Arma 3 code: _soldierdisableAI"FSM";_soldiersetUnitPosWeak"DOWN";
Describe the following Arma 3 code: _vehsetUnloadInCombat[true,false];
Describe the following Arma 3 code: if(stanceplayer=="STAND")then{hint"I am standing!"};
Describe the following Arma 3 code: loon1stoptrue;
Describe the following Arma 3 code: ?(stopped_loon1):hint"Loon1 is stopped"
Describe the following Arma 3 code: _soldier1suppressFor10;// Will force soldier1 to do suppressive fire to known enemies for 10 seconds
Describe the following Arma 3 code: soldierswimInDepth-20;
Describe the following Arma 3 code: soldierOneswitchAction"SitDown";
Describe the following Arma 3 code: unassignVehicleplayer;
Describe the following Arma 3 code: hintstrunitPos_unit;
Describe the following Arma 3 code: private_it=unitReady_soldierOne;
Describe the following Arma 3 code: onEachFrame{hintSilentstrvehicleMoveInfovehicleplayer};
Describe the following Arma 3 code: _weaponVectorDir=playerweaponDirectioncurrentWeaponplayer;
Describe the following Arma 3 code: _deleted=deleteIdentity"playerIdentity";
Describe the following Arma 3 code: faceplayer;
Describe the following Arma 3 code: _ok=playerloadIdentity"playerIdentity";
Describe the following Arma 3 code: _success=lockIdentityplayer;
Describe the following Arma 3 code: _name=nameplayer;
Describe the following Arma 3 code: pitchplayer;
Describe the following Arma 3 code: _rank=rankplayer;
Describe the following Arma 3 code: _myIdRank=rankIdplayer;
Describe the following Arma 3 code: _successful=playersaveIdentity"playerid";
Describe the following Arma 3 code: soldier1setFace"WhiteHead_02";
Describe the following Arma 3 code: _soldier1setIdentity"MyLittleSoldier";
Describe the following Arma 3 code: _soldier1setMimic"hurt";
Describe the following Arma 3 code: myLocationsetName"My Location Name";
Describe the following Arma 3 code: unit1setNameSound"dixon";
Describe the following Arma 3 code: unit1setPitch0.5;
Describe the following Arma 3 code: playersetRank"COLONEL";
Describe the following Arma 3 code: unit1setSpeaker"Male02GRE";
Describe the following Arma 3 code: playersetUnitRank"COLONEL";
Describe the following Arma 3 code: speakerplayer;// Can return "male09eng"
Describe the following Arma 3 code: playeraddBackpackGlobal"B_AssaultPack_khk";
Describe the following Arma 3 code: playeraddBinocularItem"Laserbatteries";
Describe the following Arma 3 code: playeraddGoggles"G_Tactical_Clear";
Describe the following Arma 3 code: playeraddHandgunItem"muzzle_snds_L";
Describe the following Arma 3 code: playeraddHeadgear"H_HelmetB";
Describe the following Arma 3 code: // identical to bluforUnit linkItem "NVGoggles"// addItem then assignItem makes the item go through through inventory storage and fail if storage space was missingbluforUnitaddItem"NVGoggles";bluforUnitassignItem"NVGoggles";opforUnitaddItem"NVGoggles_OPFOR";opforUnitassignItem"NVGoggles_OPFOR";independentUnitaddItem"NVGoggles_INDEP";independentUnitassignItem"NVGoggles_INDEP";
Describe the following Arma 3 code: playeraddItemToUniform"itemGPS";
Describe the following Arma 3 code: playeraddItemToVest"itemGPS";
Describe the following Arma 3 code: playeraddMagazine"dasdsa";// .rpt: Given magazine[dasdsa] not found)
Describe the following Arma 3 code: playeraddMagazineGlobal"30Rnd_65x39_caseless_mag";
Describe the following Arma 3 code: playeraddMagazines["30Rnd_65x39_caseless_mag",3];
Describe the following Arma 3 code: playeraddPrimaryWeaponItem"muzzle_snds_H";
Describe the following Arma 3 code: playeraddSecondaryWeaponItem"muzzle_snds_L";
Describe the following Arma 3 code: _unitaddUniform"U_B_CombatUniform_mcam";
Describe the following Arma 3 code: playeraddVest"V_TacVest_blk_POLICE";
Describe the following Arma 3 code: playeraddMagazine"30Rnd_556x45_Stanag";playeraddWeapon"BAF_L85A2_RIS_SUSAT";
Describe the following Arma 3 code: {_xaddMagazineGlobal"Laserbatteries";_xaddWeaponGlobal"Laserdesignator";}forEachallUnits;
Describe the following Arma 3 code: playeraddWeaponItem["arifle_MX_GL_ACO_F","1Rnd_HE_Grenade_shell"];
Describe the following Arma 3 code: _count=playerammo"M16";//returns 30 in case of a full magazine
Describe the following Arma 3 code: hintstrassignedItemsplayer;
Describe the following Arma 3 code: bluforUnitaddItem"NVGoggles";bluforUnitassignItem"NVGoggles";opforUnitaddItem"NVGoggles_OPFOR";opforUnitassignItem"NVGoggles_OPFOR";independentUnitaddItem"NVGoggles_INDEP";independentUnitassignItem"NVGoggles_INDEP";
Describe the following Arma 3 code: backpackMagazinesplayer;// returns e.g/*
[
	"Titan AT Missile(1/1)[id/cr:16/0](2x)"
]
*/
Describe the following Arma 3 code: private_allCarriedBackpackTypes=backpacksplayer+[backpackplayer];
Describe the following Arma 3 code: _binocs=binocularplayer;//Rangefinder
Describe the following Arma 3 code: binocularItemsplayer;
Describe the following Arma 3 code: hintstrbinocularMagazineplayer;// ["Laserbatteries"]
Describe the following Arma 3 code: if(playercanAdd"FirstAidKit")then{playeraddItem"FirstAidKit";}else{hint"Not enough space";};
Describe the following Arma 3 code: _item="HandGrenade";_fits=playercanAddItemToUniform_item;if(_fits)then{playeraddItemToUniform_item;}else{hint"no room!";};
Describe the following Arma 3 code: _item="HandGrenade";private_fits=playercanAddItemToVest_item;if(_fits)then{playeraddItemToVest_item;}else{hint"no room!";};
Describe the following Arma 3 code: _magazineClass=currentMagazineplayer;//Example: "30Rnd_545x39_AK"
Describe the following Arma 3 code: _currentMagazineDetail=currentMagazineDetailplayer;// "6.5mm 30Rnd STANAG Mag(30/30)[id:0]"
Describe the following Arma 3 code: currentThrowableplayer;// ["SmokeShellGreen", "SmokeShellGreenMuzzle", [1.00002e+007, 0]]
Describe the following Arma 3 code: _weaponClass=currentWeapon(vehicleplayer);//Example: "M16A2GL"
Describe the following Arma 3 code: _unitforceAddUniform"U_B_CombatUniform_mcam";
Describe the following Arma 3 code: ammo=gearIDCAmmoCount_control;
Describe the following Arma 3 code: ammo=gearSlotAmmoCount_control;
Describe the following Arma 3 code: gearSlotData_myControl;
Describe the following Arma 3 code: _maxLoadUniform=getContainerMaxLoaduniformplayer;_maxLoadVest=getContainerMaxLoadvestplayer;_maxLoadBackpack=getContainerMaxLoadbackpackplayer;
Describe the following Arma 3 code: systemChatstrgetCorpsecursorObject;
Describe the following Arma 3 code: getUnitLoadoutplayer;
Describe the following Arma 3 code: _goggles=gogglesassaultDiver;//G_Diving
Describe the following Arma 3 code: handgunItemsplayer;/*
[
	"muzzle_snds_L",	// silencer
	"",					// laser
	"",					// optics
	""					// bipod
]
*/
Describe the following Arma 3 code: hintstrhandgunMagazineplayer;// ["16Rnd_9x21_Mag"]
Describe the following Arma 3 code: hinthandgunWeaponplayer;//"hgun_P07_F"
Describe the following Arma 3 code: if!(playerhasWeapon"arifle_MX_ACO_pointer_F")then{playeraddWeapon"arifle_MX_ACO_pointer_F"};
Describe the following Arma 3 code: hintheadgearplayer;//H_HelmetB
Describe the following Arma 3 code: _nvgs=hmdplayer;//NVGoggles
Describe the following Arma 3 code: _canUse=_unitisUniformAllowed"U_B_CombatUniform_mcam";
Describe the following Arma 3 code: _itemsPlayer=itemsplayer;
Describe the following Arma 3 code: private_res1=itemsWithMagazinesplayer;// ... is essentially the same as ...private_res2=itemsplayer+magazinesplayer;
Describe the following Arma 3 code: bluforUnitlinkItem"NVGoggles";opforUnitlinkItem"NVGoggles_OPFOR";independentUnitlinkItem"NVGoggles_INDEP";
Describe the following Arma 3 code: loadplayer;
Describe the following Arma 3 code: _weight=loadAbsplayer;
Describe the following Arma 3 code: private_loadUniform=massOfAllItemsInUniform/getContainerMaxLoaduniformplayer;
Describe the following Arma 3 code: _loadVest=massOfAllItemsInVest/getContainerMaxLoadvestplayer;
Describe the following Arma 3 code: private_isInventoryLocked=lockedInventoryvehicleplayer;
Describe the following Arma 3 code: vehicleplayerlockInventorytrue;
Describe the following Arma 3 code: _mags=magazinesplayer;
Describe the following Arma 3 code: _magazinesAmmo=magazinesAmmoplayer;/*
[
	["30Rnd_65x39_caseless_mag",30],
	["30Rnd_65x39_caseless_mag",30],
	["16Rnd_9x21_Mag",16],
	["SmokeShellGreen",1],
	["Chemlight_green",1],
	["HandGrenade",1]
]
*/
Describe the following Arma 3 code: toFixed0;magazinesAmmoFullplayer;/*
[
	["30Rnd_65x39_caseless_mag",30,false,-1,"Uniform",10000003,0],
	["Chemlight_green",1,true,0,"ChemlightGreenMuzzle",10000016,0],
	["30Rnd_65x39_caseless_mag",30,false,-1,"Vest",10000008,0],
	["30Rnd_65x39_caseless_mag",30,false,-1,"Vest",10000009,0],
	["30Rnd_65x39_caseless_mag",30,false,-1,"Vest",10000010,0],
	["HandGrenade",1,true,0,"HandGrenadeMuzzle",10000018,0],
	["HandGrenade",1,false,-1,"Vest",10000019,0],
	["30Rnd_65x39_caseless_mag",30,true,1,"arifle_MX_ACO_pointer_F",10000001,0],
	["16Rnd_9x21_Mag",16,true,2,"hgun_P07_F",10000011,0]
]
*/
Describe the following Arma 3 code: _magazinesDetail=magazinesDetailplayer;/*
[
	"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000003/0]",
	"Chemlight (Green)(1/1)[id/cr:10000020/0]",
	"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000012/0]",
	"RGO Grenade(1/1)[id/cr:10000016/0]",
	"RGO Grenade(1/1)[id/cr:10000017/0]",
	"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000070/0]",
	"PCML Missile(1/1)[id/cr:10000072/0]",
	"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000001/0]",
	"9 mm 16Rnd Mag(16/16)[id/cr:10000013/0]"
]
*/
Describe the following Arma 3 code: magazinesDetailBackpackplayer;/*
[
	"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000011/2]",
	"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000012/2]",
	"Chemlight (Green)(1/1)[id/cr:10000027/2]",
	"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000013/2]",
	"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000014/2]",
	"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000015/2]",
	"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000016/2]",
	"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000017/2]",
	"9 mm 16Rnd Mag(16/16)[id/cr:10000019/2]",
	"9 mm 16Rnd Mag(16/16)[id/cr:10000020/2]",
	"RGO Grenade(1/1)[id/cr:10000021/2]",
	"RGO Grenade(1/1)[id/cr:10000022/2]",
	"IR Grenade [NATO](1/1)[id/cr:10000023/2]",
	"IR Grenade [NATO](1/1)[id/cr:10000024/2]",
	"Smoke Grenade (White)(1/1)[id/cr:10000025/2]",
	"Smoke Grenade (Green)(1/1)[id/cr:10000026/2]",
	"Chemlight (Green)(1/1)[id/cr:10000028/2]"
]
*/
Describe the following Arma 3 code: magazinesDetailUniformplayer;/*
[
	"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000003/0]",
	"Chemlight (Green)(1/1)[id/cr:10000020/0]"
]
*/
Describe the following Arma 3 code: magazinesDetailVestplayer;/*
[
	["6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000012/0]",
	"RGO Grenade(1/1)[id/cr:10000016/0]",
	"RGO Grenade(1/1)[id/cr:10000017/0]"]
]
*/
Describe the following Arma 3 code: private_maxLoad=maxLoad_yaMum;
Describe the following Arma 3 code: _pWeap=primaryWeaponplayer;
Describe the following Arma 3 code: primaryWeaponItemsplayer;/*
[
	"muzzle_snds_H",	// silencer
	"acc_pointer_IR",	// laser
	"optic_Aco",		// optics
	"bipod_01_F_blk"	// bipod
]
*/
Describe the following Arma 3 code: hintstrprimaryWeaponMagazineplayer;//["30Rnd_65x39_caseless_mag"]
Describe the following Arma 3 code: removeAllAssignedItemsplayer;
Describe the following Arma 3 code: removeAllBinocularItemsplayer;
Describe the following Arma 3 code: removeAllContainersplayer;
Describe the following Arma 3 code: removeAllHandgunItemsplayer;
Describe the following Arma 3 code: removeAllItemsunitName;
Describe the following Arma 3 code: removeAllItemsWithMagazinesplayer;
Describe the following Arma 3 code: removeAllPrimaryWeaponItemsplayer;
Describe the following Arma 3 code: removeAllSecondaryWeaponItemsplayer;
Describe the following Arma 3 code: removeAllWeaponsplayer;
Describe the following Arma 3 code: removeBackpackGlobalplayer;
Describe the following Arma 3 code: playerremoveBinocularItem"Laserbatteries";
Describe the following Arma 3 code: _unitremoveClothing["shirt"];
Describe the following Arma 3 code: removeGogglesassaultDiver;
Describe the following Arma 3 code: playerremoveHandgunItem"muzzle_snds_L";
Describe the following Arma 3 code: removeHeadgearplayer;
Describe the following Arma 3 code: bluforUnitunassignItem"NVGoggles";bluforUnitremoveItem"NVGoggles";opforUnitunassignItem"NVGoggles_OPFOR";opforUnitremoveItem"NVGoggles_OPFOR";independentUnitunassignItem"NVGoggles_INDEP";independentUnitremoveItem"NVGoggles_INDEP";
Describe the following Arma 3 code: playerremoveItemFromUniform"FirstAidKit";
Describe the following Arma 3 code: playerremoveItemFromVest"itemWatch";
Describe the following Arma 3 code: playerremoveItems"FirstAidKit";
Describe the following Arma 3 code: playerremoveMagazine"M16";
Describe the following Arma 3 code: playerremoveMagazineGlobal"30Rnd_65x39_caseless_mag";
Describe the following Arma 3 code: playerremoveMagazines"30Rnd_556x45_Stanag";
Describe the following Arma 3 code: playerremovePrimaryWeaponItem"acc_flashlight";
Describe the following Arma 3 code: playerremoveSecondaryWeaponItem(secondaryWeaponItemsplayerselect0);
Describe the following Arma 3 code: removeUniformplayer;
Describe the following Arma 3 code: removeVestplayer;
Describe the following Arma 3 code: playerremoveWeapon"BAF_L85A2_RIS_SUSAT";
Describe the following Arma 3 code: {_xremoveWeaponGlobal"Laserdesignator";}forEachallUnits;
Describe the following Arma 3 code: private_secondaryWeapon=secondaryWeaponplayer;
Describe the following Arma 3 code: secondaryWeaponItemsplayer;//["","","",""]
Describe the following Arma 3 code: hintstrsecondaryWeaponMagazineplayer;//["NLAW_F"]
Describe the following Arma 3 code: playersetAmmo[handgunWeaponplayer,10];
Describe the following Arma 3 code: _yaMumsetMaxLoad_maxLoad;
Describe the following Arma 3 code: player_2setUnitLoadout(getUnitLoadoutplayer_1);// Copies loadout from player_1 and applies it to player_2
Describe the following Arma 3 code: playersetVehicleAmmoDef0;
Describe the following Arma 3 code: soldierMagazinesplayer;// returns:["6.5mm 30Rnd STANAG Mag(30/30)[id/cr:1/0](5x)","9mm 16Rnd Mag(16/16)[id/cr:7/0](2x)","RGO Frag Grenade(1/1)[id/cr:10/0](2x)","Smoke Grenade (White)(1/1)[id/cr:12/0](1x)","Smoke Grenade (Green)(1/1)[id/cr:13/0](1x)","Chemlight (Green)(1/1)[id/cr:14/0](2x)","Titan AT Missile(1/1)[id/cr:16/0](2x)"]
Describe the following Arma 3 code: ?not(someAmmo_loon1):hint"Loon1 is out of ammo!"
Describe the following Arma 3 code: _bluforUnitunassignItem"NVGoggles";_bluforUnitremoveItem"NVGoggles";_opforUnitunassignItem"NVGoggles_OPFOR";_opforUnitremoveItem"NVGoggles_OPFOR";_independentUnitunassignItem"NVGoggles_INDEP";_independentUnitremoveItem"NVGoggles_INDEP";
Describe the following Arma 3 code: _uniform=uniform_unit;
Describe the following Arma 3 code: hintstruniformContainerplayer;//2df7dd00# 163941: dummyweapon.p3d
Describe the following Arma 3 code: uniformItemsplayer;// returns e.g/*
[
	"FirstAidKit",
	"30Rnd_65x39_caseless_mag",
	"30Rnd_65x39_caseless_mag",
	"30Rnd_65x39_caseless_mag"
]
*/
Describe the following Arma 3 code: uniformMagazinesplayer;// returns e.g/*
[
	"6.5mm 30Rnd STANAG Mag(30/30)[id/cr:1/0](3x)"
]
*/
Describe the following Arma 3 code: private_unitUniqueItems=uniqueUnitItems[player,0,2,2,2,true];if(_unitUniqueItemsgetOrDefault["FirstAidKit",0]>5)then{hint"I'm rich of FAK to give!";};
Describe the following Arma 3 code: bluforUnitunlinkItem"NVGoggles";opforUnitunlinkItem"NVGoggles_OPFOR";independentUnitunlinkItem"NVGoggles_INDEP";
Describe the following Arma 3 code: _myVest=vestplayer;
Describe the following Arma 3 code: hintstrvestContainerplayer;// 2df7d600# 163942: dummyweapon.p3d
Describe the following Arma 3 code: vestItemsplayer;// returns e.g/*
[
	"30Rnd_65x39_caseless_mag",
	"30Rnd_65x39_caseless_mag",
	"16Rnd_9x21_Mag",
	"16Rnd_9x21_Mag",
	"HandGrenade",
	"HandGrenade",
	"SmokeShell",
	"SmokeShellGreen",
	"Chemlight_green",
	"Chemlight_green"
]
*/
Describe the following Arma 3 code: vestMagazinesplayer;// returns e.g/*
[
	"6.5mm 30Rnd STANAG Mag(30/30)[id/cr:4/0](2x)",
	"9mm 16Rnd Mag(16/16)[id/cr:7/0](2x)",
	"RGO Frag Grenade(1/1)[id/cr:10/0](2x)",
	"Smoke Grenade (White)(1/1)[id/cr:12/0](1x)",
	"Smoke Grenade (Green)(1/1)[id/cr:13/0](1x)",
	"Chemlight (Green)(1/1)[id/cr:14/0](2x)"
]
*/
Describe the following Arma 3 code: playerweaponAccessoriesprimaryWeaponplayer;//["","acc_pointer_IR","optic_Aco",""]
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: hintstrweaponCargobackpackContainerplayer;
Describe the following Arma 3 code: _wArray=weaponsplayer;
Describe the following Arma 3 code: hintstrweaponsItemsplayer;// returns e.g/*
[
	["arifle_MX_ACO_pointer_F","muzzle_snds_H","acc_pointer_IR","optic_Aco",["30Rnd_65x39_caseless_mag",30],[],"bipod_01_F_blk"],
	["launch_NLAW_F","","","",["NLAW_F",1],[],""],
	["hgun_P07_F","muzzle_snds_L","","",["16Rnd_9x21_Mag",11],[],""]
]
*/
Describe the following Arma 3 code: private_isAlive=aliveplayer;if(!_isAlive)then{hint"The player is dead!";};
Describe the following Arma 3 code: if(_counter!=4)then{hint"The counter is not equal to the number 4";};
Describe the following Arma 3 code: private_allEnemiesKilled=true;if(aliveplayer&&_allEnemiesKilled)then{hint"you win !";};
Describe the following Arma 3 code: _value=5;
Describe the following Arma 3 code: if(player==leadergroupplayer)then{hint"You are the leader of your group.";}else{hint"Someone else is the boss";};
Describe the following Arma 3 code: if(fueltruck1>0)then{hint"Truck1 has some fuel left.";};
Describe the following Arma 3 code: if(fueltruck1>=0.5)then{hint"Truck1 has at least half a tank of fuel left."};
Describe the following Arma 3 code: [1,2,3,4]#2;// result is 3
Describe the following Arma 3 code: _test=1<2;// true
Describe the following Arma 3 code: if(fueltruck1<=0)then{hint"Truck1 has no fuel left."};
Describe the following Arma 3 code: if(OBJ1||_enemycount==0)then{hint"you win !"};
Describe the following Arma 3 code: "publicThis"addPublicVariableEventHandler{hintformat["%1 has been updated to: %2",_thisselect0,_thisselect1]};
Describe the following Arma 3 code: _allVarsUINamespace=allVariablesuiNamespace;
Describe the following Arma 3 code: if((notisNullplayer)and(aliveplayer)and(_enemycount==0))then{hint"you win !";};
Describe the following Arma 3 code: configNull==configNull;// returns trueisNullconfigNull;// returns trueconfigNullisEqualToconfigNull;// returns trueconfigNull==configFile>>"ANonExistentEntry";// returns true
Describe the following Arma 3 code: isNulldiaryRecordNull;// true
Describe the following Arma 3 code: displayNull==displayNull;// falseisNulldisplayNull;// truedisplayNullisEqualTodisplayNull;// true
Describe the following Arma 3 code: _var=false;systemChatstr_var;// false
Describe the following Arma 3 code: _handlegetFSMVariable"_foo";
Describe the following Arma 3 code: private_variable=myTruckgetVariable"myVariable";// returns nil if "myVariable" is not set
Describe the following Arma 3 code: _arr1=[1,[2,[3]]];_arr2=_arr1;_arr1isEqualTo_arr2;// true_arr1isEqualRef_arr2;// true_arr2=+_arr1;// array copy_arr1isEqualTo_arr2;// true_arr1isEqualRef_arr2;// false
Describe the following Arma 3 code: _a=compile"123";_b=compileFinal"123";_aisEqualTo_b;// false
Describe the following Arma 3 code: private_var=[1,2,3];_varisEqualType0;// false_varisEqualType[];// true
Describe the following Arma 3 code: _arr=[1,2,3,4,5,6,7,8,9,0];_arrisEqualTypeAll"";// false_arrisEqualTypeAll0;// true
Describe the following Arma 3 code: _var=[1,2,3];_varisEqualTypeAny[0,"",objNull];//false_varisEqualTypeAny[0,"",objNull,[]];//true
Describe the following Arma 3 code: _arr=[1,true,"three"];_arrisEqualTypeArray[0,objNull,""];// false_arrisEqualTypeArray[0,false,""];// true
Describe the following Arma 3 code: // These all return true[1,2,player,"10"]isEqualTypeParams[0,0,objNull,""];[1,2,player,"10",true]isEqualTypeParams[0,0,nil,""];[1,2,getPosplayer,"10",true]isEqualTypeParams[0,0,nil,""];
Describe the following Arma 3 code: myCode=compileFinal"a = a + 1";if(isFinal"myCode")then{systemChat"Code is compiled final."};
Describe the following Arma 3 code: private_isLoaded=isMissionProfileNamespaceLoaded;
Describe the following Arma 3 code: if(isNil"TAG_globalVariable")then{TAG_globalVariable=0};if(isNil"_localVariable")then{hint"_localVariable is nil"};
Describe the following Arma 3 code: _arr1=[1,[2,[3]]];_arr2=_arr1;_arr1isEqualTo_arr2;// true_arr1isNotEqualRef_arr2;// false_arr2=+_arr1;// array copy_arr1isEqualTo_arr2;// true_arr1isNotEqualRef_arr2;// true
Describe the following Arma 3 code: private_true=0isNotEqualTo1;
Describe the following Arma 3 code: if(isNullobj)then{hint"obj variable is defined but obj is null";};
Describe the following Arma 3 code: localNamespacesetVariable["abc",123];
Describe the following Arma 3 code: locationNull==locationNull;// falseisNulllocationNull;// truelocationNullisEqualTolocationNull;// true
Describe the following Arma 3 code: missionNamespacesetVariable["StringVariable","myString"];// same as: StringVariable = "myString";_myStringValue=missionNamespacegetVariable"StringVariable";hint_myStringValue;// hints "myString"
Describe the following Arma 3 code: private_currentMissionProfileNamespace=missionProfileNamespace;
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: variableToDestroy=nil;
Describe the following Arma 3 code: notfalse;// returns true
Describe the following Arma 3 code: objNull==objNull;// falseisNullobjNull;// trueobjNullisEqualToobjNull;// true
Describe the following Arma 3 code: if(_obj1or(_enemycount==0)or(notalive_enemyGeneral))then{hint"you win !";};
Describe the following Arma 3 code: [1,2,3]call{private_one=param[0,1];private_two=param[1,2];private_three=param[2,3];// ...};
Describe the following Arma 3 code: [1,2,3]call{private["_one","_two","_three"];_one=_thisselect0;_two=_thisselect1;_three=_thisselect2;// ...};// Same as above, only using params[1,2,3]call{params["_one","_two","_three"];// ...};
Describe the following Arma 3 code: parsingNamespacesetVariable["var1",101.23124];_profVar1=parsingNamespacegetVariable"var1";
Describe the following Arma 3 code: private_varname="this is my new variable";// since Arma 3 v1.54// identical, but less performantprivate"_varname";_varname="this is my new variable";
Describe the following Arma 3 code: profileNamespacesetVariable["TAG_kills",10000];// somewhere else in the code_kills=profileNamespacegetVariable["TAG_kills",0];
Describe the following Arma 3 code: TAG_MyPublicVariable=0;TAG_MyPublicVariable=1;publicVariable"TAG_MyPublicVariable";// other clients will receive the "TAG_MyPublicVariable" variable with a 1 valueTAG_MyPublicVariable=2;// needs to be broadcast again - synchronisation is not automatic
Describe the following Arma 3 code: 3publicVariableClient"CTFscoreOne";
Describe the following Arma 3 code: publicVariableServer"CTFscoreOne";
Describe the following Arma 3 code: saveMissionProfileNamespace;
Describe the following Arma 3 code: profileNamespacesetVariable["TAG_lastPlayerLocation",getPosASLplayer];saveProfileNamespace;// Optional since namespace is saved when game is closed
Describe the following Arma 3 code: saveVar"varOne";
Describe the following Arma 3 code: scriptNull==scriptNull;// ERROR! == cannot be used with script objectisNullscriptNull;// truescriptNullisEqualToscriptNull;// true
Describe the following Arma 3 code: private_serverVars=allVariablesserverNamespace;
Describe the following Arma 3 code: _myTrucksetVariable["TAG_myPublicVariable",123,true];
Describe the following Arma 3 code: taskNull==taskNull;// falseisNulltaskNull;// truetaskNullisEqualTotaskNull;// true
Describe the following Arma 3 code: _var=true;systemChatstr_var;// trueif(_var)then{hint"_var is true!";};
Describe the following Arma 3 code: _msg="hello";_result=typeName_msg;//_result will be "STRING"
Describe the following Arma 3 code: uiNamespacesetVariable["LIB_interruptDisplay",_display];
Describe the following Arma 3 code: supplyBoxaddItemCargo["optic_ARCO",10];
Describe the following Arma 3 code: supplyBoxaddItemCargoGlobal["optic_Arco",10];
Describe the following Arma 3 code: _ammoboxaddMagazineAmmoCargo["30Rnd_65x39_caseless_mag",2,5];
Describe the following Arma 3 code: playeraddMagazine"30Rnd_556x45_Stanag";playeraddWeapon"BAF_L85A2_RIS_SUSAT";
Describe the following Arma 3 code: {_xaddMagazineGlobal"Laserbatteries";_xaddWeaponGlobal"Laserdesignator";}forEachallUnits;
Describe the following Arma 3 code: cursorObjectaddWeaponWithAttachmentsCargo[["arifle_MX_GL_F","muzzle_snds_H","","optic_aco",["30Rnd_65x39_caseless_mag",15],["3Rnd_HE_Grenade_shell",2],""],2];
Describe the following Arma 3 code: cursorObjectaddWeaponWithAttachmentsCargoGlobal[["arifle_MX_GL_F","muzzle_snds_H","","optic_aco",["30Rnd_65x39_caseless_mag",15],["3Rnd_HE_Grenade_shell",2],""],2];
Describe the following Arma 3 code: _magazineClass=currentMagazineplayer;//Example: "30Rnd_545x39_AK"
Describe the following Arma 3 code: _currentMagazineDetail=currentMagazineDetailplayer;// "6.5mm 30Rnd STANAG Mag(30/30)[id:0]"
Describe the following Arma 3 code: everyContainercursorTarget;/*
	returns e.g
	[
		["V_PlateCarrier1_rgr",2bc06b00# 163955: dummyweapon.p3d],
		["U_B_CombatUniform_mcam",2bc07900# 163954: dummyweapon.p3d]
	]
*/
Describe the following Arma 3 code: value=getAmmoCargomyVehicleName;
Describe the following Arma 3 code: value=getFuelCargomyVehicleName;
Describe the following Arma 3 code: hintstrgetItemCargocursorTarget;
Describe the following Arma 3 code: _content=getMagazineCargocarName;
Describe the following Arma 3 code: value=getRepairCargovehicleName;
Describe the following Arma 3 code: _content=getWeaponCargocarName;
Describe the following Arma 3 code: hintstritemCargovestContainerplayer;
Describe the following Arma 3 code: hintstrmagazineCargouniformContainercursorTarget;
Describe the following Arma 3 code: _mags=magazinesplayer;
Describe the following Arma 3 code: _magazinesAmmo=magazinesAmmoplayer;/*
[
	["30Rnd_65x39_caseless_mag",30],
	["30Rnd_65x39_caseless_mag",30],
	["16Rnd_9x21_Mag",16],
	["SmokeShellGreen",1],
	["Chemlight_green",1],
	["HandGrenade",1]
]
*/
Describe the following Arma 3 code: magazinesAmmoCargovehicleplayer;
Describe the following Arma 3 code: toFixed0;magazinesAmmoFullplayer;/*
[
	["30Rnd_65x39_caseless_mag",30,false,-1,"Uniform",10000003,0],
	["Chemlight_green",1,true,0,"ChemlightGreenMuzzle",10000016,0],
	["30Rnd_65x39_caseless_mag",30,false,-1,"Vest",10000008,0],
	["30Rnd_65x39_caseless_mag",30,false,-1,"Vest",10000009,0],
	["30Rnd_65x39_caseless_mag",30,false,-1,"Vest",10000010,0],
	["HandGrenade",1,true,0,"HandGrenadeMuzzle",10000018,0],
	["HandGrenade",1,false,-1,"Vest",10000019,0],
	["30Rnd_65x39_caseless_mag",30,true,1,"arifle_MX_ACO_pointer_F",10000001,0],
	["16Rnd_9x21_Mag",16,true,2,"hgun_P07_F",10000011,0]
]
*/
Describe the following Arma 3 code: _magazinesDetail=magazinesDetailplayer;/*
[
	"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000003/0]",
	"Chemlight (Green)(1/1)[id/cr:10000020/0]",
	"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000012/0]",
	"RGO Grenade(1/1)[id/cr:10000016/0]",
	"RGO Grenade(1/1)[id/cr:10000017/0]",
	"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000070/0]",
	"PCML Missile(1/1)[id/cr:10000072/0]",
	"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000001/0]",
	"9 mm 16Rnd Mag(16/16)[id/cr:10000013/0]"
]
*/
Describe the following Arma 3 code: playerremoveWeapon"BAF_L85A2_RIS_SUSAT";
Describe the following Arma 3 code: rearmTruckOneremoveWeaponAttachmentCargo[weaponID,creatorID,"attachment"];
Describe the following Arma 3 code: rearmTruckOneremoveWeaponCargo[19,1];
Describe the following Arma 3 code: {_xremoveWeaponGlobal"Laserdesignator";}forEachallUnits;
Describe the following Arma 3 code: playersetAmmo[handgunWeaponplayer,10];
Describe the following Arma 3 code: _ammoTruck1setAmmoCargo0.5;
Describe the following Arma 3 code: _refuelTrucksetFuelCargo0;
Describe the following Arma 3 code: _repairTruck1setRepairCargo0;
Describe the following Arma 3 code: playersetVehicleAmmo0;
Describe the following Arma 3 code: playersetVehicleAmmoDef0;
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: hintstrweaponCargobackpackContainerplayer;
Describe the following Arma 3 code: _wArray=weaponsplayer;
Describe the following Arma 3 code: hintstrweaponsItemsplayer;// returns e.g/*
[
	["arifle_MX_ACO_pointer_F","muzzle_snds_H","acc_pointer_IR","optic_Aco",["30Rnd_65x39_caseless_mag",30],[],"bipod_01_F_blk"],
	["launch_NLAW_F","","","",["NLAW_F",1],[],""],
	["hgun_P07_F","muzzle_snds_L","","",["16Rnd_9x21_Mag",11],[],""]
]
*/
Describe the following Arma 3 code: weaponsItemsCargovehicleplayer;
Describe the following Arma 3 code: private_ammoCount=(vehicleplayer)ammoOnPylon"pylon1";
Describe the following Arma 3 code: ucavanimateBay[1,1];// can be checked withucavanimationPhase"weapons_bay_l_1"// orucavanimationPhase"weapons_bay_l_2"
Describe the following Arma 3 code: vehicleplayeranimatePylon[1,0.5];
Describe the following Arma 3 code: getAllPylonsInfovehicleplayer;/*
	Executed on an Mi-48 Kajman:
	[
		[1,"PylonLeft1",[0],"PylonRack_4Rnd_LG_scalpel",4,"0:10000646"],
		[2,"PylonLeft2",[0],"PylonRack_19Rnd_Rocket_Skyfire",19,"0:10000648"],
		[3,"PylonRight2",[0],"PylonRack_19Rnd_Rocket_Skyfire",19,"0:10000649"],
		[4,"PylonRight1",[0],"PylonRack_4Rnd_LG_scalpel",4,"0:10000650"]
	]
*/
Describe the following Arma 3 code: // returns array of arrays containing all compatible magazinesvehicleplayergetCompatiblePylonMagazines0;
Describe the following Arma 3 code: getPylonMagazinesvehicleplayer;
Describe the following Arma 3 code: vehicleplayersetAmmoOnPylon[1,12];
Describe the following Arma 3 code: vehicleplayersetPylonLoadout["pylon1",""];
Describe the following Arma 3 code: (vehicleplayer)setPylonsPriority[0,1,2,3,4,5,5,4,3,2,1,0];
Describe the following Arma 3 code: _wp=_grpaddWaypoint[positionplayer,0];
Describe the following Arma 3 code: group1copyWaypointsgroup2;
Describe the following Arma 3 code: createGuardedPoint[east,[0,0],-1,vehicleplayer];
Describe the following Arma 3 code: _index=currentWaypointgroupplayer;
Describe the following Arma 3 code: if(customWaypointPositionisNotEqualTo[])then{hintformat["You are %1m away from your custom waypoint.",round(playerdistancecustomWaypointPosition)];};
Describe the following Arma 3 code: deleteWaypoint[_grp,2];
Describe the following Arma 3 code: _uavenableUAVWaypointsfalse;hintstrwaypointsEnabledUAV_uav;// returns false
Describe the following Arma 3 code: [_group1,1]setWPPos[200,600,0];_pos=getWPPos[_group1,1];// returns [200, 600, 0]
Describe the following Arma 3 code: _groupOnelockWPtrue;
Describe the following Arma 3 code: _grpsetCurrentWaypoint[_grp,1];
Describe the following Arma 3 code: _triggersetMusicEffect"Track1";
Describe the following Arma 3 code: _triggersetSoundEffect["Alarm","","",""];
Describe the following Arma 3 code: _triggersetTitleEffect["TEXT","PLAIN DOWN","Hello world."];
Describe the following Arma 3 code: [_grp,2]setWaypointBehaviour"AWARE";
Describe the following Arma 3 code: [_grp,2]setWaypointCombatMode"RED";
Describe the following Arma 3 code: [grp,2]setWaypointCompletionRadius30;
Describe the following Arma 3 code: [_grp,2]setWaypointDescription"Move here.";
Describe the following Arma 3 code: [grp,2]setWaypointForceBehaviourtrue;
Describe the following Arma 3 code: [_grp,2]setWaypointFormation"LINE";
Describe the following Arma 3 code: [_grp,2]setWaypointHousePosition1;
Describe the following Arma 3 code: [_grp,2]setWaypointLoiterAltitude100;
Describe the following Arma 3 code: [_grp,2]setWaypointLoiterRadius200;
Describe the following Arma 3 code: [_grp,2]setWaypointLoiterType"CIRCLE";
Describe the following Arma 3 code: [_grp,2]setWaypointName"myName";
Describe the following Arma 3 code: [_grp,2]setWaypointPosition[positionplayer,0];
Describe the following Arma 3 code: [_grp,2]setWaypointScript"find.sqs player";
Describe the following Arma 3 code: [_grp,2]setWaypointSpeed"FULL";
Describe the following Arma 3 code: _waypointsetWaypointStatements["true","hint 'hello'; hint 'goodbye'"];
Describe the following Arma 3 code: [_grp,2]setWaypointTimeout[5,10,6];
Describe the following Arma 3 code: _myWaypointsetWaypointType"HOLD";
Describe the following Arma 3 code: [grp,2]setWaypointVisiblefalse;
Describe the following Arma 3 code: [_groupOne,1]setWPPosmarkerPos"MarkerOne";
Describe the following Arma 3 code: [_grp,2]showWaypoint"ALWAYS";
Describe the following Arma 3 code: showWaypointstrue;
Describe the following Arma 3 code: synchronizedWaypoints_someTrigger;
Describe the following Arma 3 code: _triggersynchronizeTrigger[];
Describe the following Arma 3 code: _myTriggersynchronizeWaypoint[[_group2,3]];
Describe the following Arma 3 code: waypointAttachedObject[groupOne,1];
Describe the following Arma 3 code: waypointAttachedVehicle[groupOne,1];
Describe the following Arma 3 code: [_grp,2]waypointAttachObject1234;
Describe the following Arma 3 code: [_grp,2]waypointAttachVehiclevehicleplayer;
Describe the following Arma 3 code: waypointBehaviour[groupOne,1];
Describe the following Arma 3 code: waypointCombatMode[groupOne,1];
Describe the following Arma 3 code: _radius=waypointCompletionRadius[groupOne,1];
Describe the following Arma 3 code: waypointDescription[groupOne,1];
Describe the following Arma 3 code: _isForced=waypointForceBehaviour[groupOne,1];
Describe the following Arma 3 code: waypointFormation[groupOne,1];
Describe the following Arma 3 code: waypointHousePosition[groupOne,1];
Describe the following Arma 3 code: private_loiterAlt=waypointLoiterAltitude[groupOne,1];
Describe the following Arma 3 code: _radius=waypointLoiterRadius[groupOne,1];
Describe the following Arma 3 code: _type=waypointLoiterType[groupOne,1];
Describe the following Arma 3 code: _wpName=waypointName[_grp,2];
Describe the following Arma 3 code: _wPos=waypointPosition[_groupOne,1];
Describe the following Arma 3 code: waypointsplayer;
Describe the following Arma 3 code: waypointScript[groupOne,1];
Describe the following Arma 3 code: _uavenableUAVWaypointsfalse;hintstrwaypointsEnabledUAV_uav;// returns false
Describe the following Arma 3 code: _wpShow=waypointShow[groupOne,1];
Describe the following Arma 3 code: _speed=waypointSpeed[groupOne,1];
Describe the following Arma 3 code: waypointStatements[groupOne,1];
Describe the following Arma 3 code: waypointTimeout[groupOne,1];
Describe the following Arma 3 code: _timeout=waypointTimeoutCurrentgroupplayer;
Describe the following Arma 3 code: private_type=waypointType[groupOne,1];
Describe the following Arma 3 code: _visible=waypointVisible[groupOne,1];
Describe the following Arma 3 code: addItemPool["ItemGPS",5];
Describe the following Arma 3 code: addMagazinePool["M16",20];
Describe the following Arma 3 code: addWeaponPool["M16",5];
Describe the following Arma 3 code: clearItemPooljeepOne;
Describe the following Arma 3 code: clearMagazinePool;
Describe the following Arma 3 code: clearWeaponPool;
Describe the following Arma 3 code: fillWeaponsFromPool_soldier;
Describe the following Arma 3 code: _ok=playerloadStatus"playerState";
Describe the following Arma 3 code: pickWeaponPoolvehicleplayer;
Describe the following Arma 3 code: putWeaponPoolplayer;
Describe the following Arma 3 code: private_amountOfFAKgiven=queryItemsPool"FirstAidKit";
Describe the following Arma 3 code: _num=queryMagazinePool"M16";
Describe the following Arma 3 code: _num=queryWeaponPool"M16";
Describe the following Arma 3 code: playersaveStatus"playerstate";
Describe the following Arma 3 code: _aimingQuality=heliaimedAtTarget[target];
Describe the following Arma 3 code: if(canDeployWeaponplayer)then{hint"I could rest my weapon here..."};
Describe the following Arma 3 code: if(notcanFire_tank)then{playersideChat"Tank disabled!";};
Describe the following Arma 3 code: compatibleItems"arifle_Katiba_GL_F";// ["optic_Nightstalker","optic_tws","optic_tws_mg","optic_NVS", ...]
Describe the following Arma 3 code: compatibleMagazines"arifle_Katiba_GL_F";
Describe the following Arma 3 code: _muzzle=weaponStateunitselect1;
Describe the following Arma 3 code: currentThrowableplayer;// ["SmokeShellGreen", "SmokeShellGreenMuzzle", [1.00002e+007, 0]]
Describe the following Arma 3 code: _visionMode=currentVisionModegunner_tank;
Describe the following Arma 3 code: _weaponClass=currentWeapon(vehicleplayer);//Example: "M16A2GL"
Describe the following Arma 3 code: _muzzle=weaponStateplayerselect2;
Describe the following Arma 3 code: private_zeroing=currentZeroingplayer;
Describe the following Arma 3 code: myTankdisableNVGEquipmenttrue;
Describe the following Arma 3 code: vehicleplayerdisableTIEquipmenttrue;
Describe the following Arma 3 code: _groupenableGunLightsfalse;
Describe the following Arma 3 code: groupplayerenableIRLaserstrue;
Describe the following Arma 3 code: _vehicleenableReloadfalse;
Describe the following Arma 3 code: enableWeaponDisassemblyfalse;
Describe the following Arma 3 code: _soldierfire"M16";
Describe the following Arma 3 code: _handle=thisfireAtTarget[groundtarget1,"HellfireLauncher"];
Describe the following Arma 3 code: hintstr(getArray(configFile>>"CfgWeapons">>currentWeaponplayer>>"modes"));
Describe the following Arma 3 code: _shotParents=getShotParentsmyProjectile;
Describe the following Arma 3 code: _sway=getWeaponSwayplayer;
Describe the following Arma 3 code: if!(playerhasWeapon"arifle_MX_ACO_pointer_F")then{playeraddWeapon"arifle_MX_ACO_pointer_F"};
Describe the following Arma 3 code: playerisFlashlightOn(currentWeaponplayer);
Describe the following Arma 3 code: if(isLaserOn_vehicle)then{hint"target ready"};
Describe the following Arma 3 code: _bool=isManualFirevehicleplayer;
Describe the following Arma 3 code: _dep=isWeaponDeployedplayer;
Describe the following Arma 3 code: _rest=isWeaponRestedplayer;
Describe the following Arma 3 code: private_target=laserTargetgunnerheli;
Describe the following Arma 3 code: vehicleplayerloadMagazine[[0],"m256","20Rnd_120mmHE_M1A2"];
Describe the following Arma 3 code: missileTargetmissile1;
Describe the following Arma 3 code: private_targetDistance=vehicleplayerdistancemissileTargetPosmissile1;
Describe the following Arma 3 code: _seriousness=needReload_vehicle;
Describe the following Arma 3 code: if(needReloadplayer==1)then{reloadplayer};
Describe the following Arma 3 code: private_canReload=reloadEnabled_unit1;
Describe the following Arma 3 code: _soldier1selectWeapon"LAWLauncher";
Describe the following Arma 3 code: missile1setMissileTargettank1;
Describe the following Arma 3 code: missile1setMissileTargetPosunitAimPositiontank1;
Describe the following Arma 3 code: myProjectilesetShotParents[vehiclebob,bob];
Describe the following Arma 3 code: _success=_vehiclesetWeaponReloadingTime[gunnervehicleplayer,currentMuzzlegunnervehicleplayer,0.5];
Describe the following Arma 3 code: playersetWeaponZeroing["arifle_MX_GL_F","GL_3GL_F",8];// Set zeroing for underbarrel grenade launcher to 400m
Describe the following Arma 3 code: _weaponVectorDir=playerweaponDirectioncurrentWeaponplayer;
Describe the following Arma 3 code: _inertia=weaponInertiaplayer;//[-0.0126307,0.038023]
Describe the following Arma 3 code: isWeaponLowered=weaponLoweredplayer;
Describe the following Arma 3 code: No example available.
Describe the following Arma 3 code: private_weapons=playerweaponsInfo[currentMuzzleplayer,true];private_found=_weaponsfindIf{_xselect4=="FullAuto"};if(_found>-1)then{action["SwitchWeapon",player,player,_weaponsselect_foundselect0]};
Describe the following Arma 3 code: _wsPlayer=weaponStateplayer;// ["arifle_MXC_ACO_F","arifle_MXC_ACO_F","Single","30Rnd_65x39_caseless_mag",30,0,0]
